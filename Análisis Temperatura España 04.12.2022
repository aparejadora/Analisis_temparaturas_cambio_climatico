{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "d602678a",
   "metadata": {},
   "source": [
    "\n",
    "\n",
    "# Análisis de la evolución de temperatura en España "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3701da81",
   "metadata": {},
   "source": [
    "### Datos recogidos en cuadrícula geografía española"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "99dd17ce",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e7e38484",
   "metadata": {},
   "source": [
    "Se podría hacer la carga de los datos leyend o el csv desde su ubicación, como está en la línea ejecutada 2, o bien leerla utillizando la ruta completa, fullpath como está que se puede separar 2 lineas y así reutilizar el formato para toda carga de ficheros, cambiando únicamente el nombre en el filename.\n",
    "Pero no es necesario si complica mucho.\n",
    "Lo que si es muy importante es indicar bien la ubicación de los ficheros para que no salga error."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "8250d355",
   "metadata": {},
   "outputs": [],
   "source": [
    "mainpath=\"C://Users\\crist/Dropbox/Desktop/Machine Learning/Dataset\"\n",
    "filename=(\"R_TXMM_20C3M_AEM_TXT/TXMM_RCA_ECHAM5_20C3M_196101_200012.csv\")\n",
    "filepath=mainpath + \"/\" + filename"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2a6b4549",
   "metadata": {},
   "source": [
    "Esta es una dirección absoluta desde el directorio raiz"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "9f1bb232",
   "metadata": {},
   "outputs": [],
   "source": [
    "data=pd.read_csv(\"../Dataset/TXMM_RCA_HADCM3Q0_20C3M_196101_200012.csv\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dd432c7e",
   "metadata": {},
   "source": [
    "Esta es una dirección relativa desde la ubicación del notebook"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "0e932460",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<bound method NDFrame.head of      196101     10.26     10.49     11.06    11.06.1     11.96     11.32  \\\n",
       "0    196102       NaN       NaN       NaN        NaN       NaN       NaN   \n",
       "1    196103     13.15     13.93     13.74      13.74     14.85     14.51   \n",
       "2    196104     15.57     16.59     16.35      16.35     17.90     17.40   \n",
       "3    196105     19.03     20.43     19.84      19.84     21.90     21.68   \n",
       "4    196106     24.28     26.15     25.31      25.31     28.28     27.82   \n",
       "..      ...       ...       ...       ...        ...       ...       ...   \n",
       "474  200008     29.63     31.05     31.02      31.02     33.83     32.63   \n",
       "475  200009     27.89     28.92     29.39      29.39     31.72     30.25   \n",
       "476  200010     20.74     20.90     22.06      22.06     22.77     21.54   \n",
       "477  200011     16.66     16.91     16.96      16.96     17.48     16.99   \n",
       "478  200012     13.56     14.06     13.92      13.92     14.86     14.51   \n",
       "\n",
       "         8.99     12.01     13.31  ...      8.65     8.84.8     9.63.6  \\\n",
       "0         NaN       NaN       NaN  ...       NaN        NaN        NaN   \n",
       "1       12.49     14.73     15.26  ...      8.20       8.43       9.15   \n",
       "2       15.04     17.39     18.29  ...     10.03      10.28      11.09   \n",
       "3       19.23     21.01     21.57  ...     11.90      12.13      12.76   \n",
       "4       25.09     26.43     28.12  ...     14.93      15.23      16.09   \n",
       "..        ...       ...       ...  ...       ...        ...        ...   \n",
       "474     29.66     32.65     34.83  ...     19.29      19.55      20.16   \n",
       "475     27.39     31.16     32.78  ...     19.31      19.53      20.25   \n",
       "476     19.57     23.82     24.52  ...     16.40      16.54      17.40   \n",
       "477     15.48     17.43     17.68  ...     12.95      13.09      13.87   \n",
       "478     12.43     14.48     15.20  ...     11.87      12.00      12.68   \n",
       "\n",
       "        9.63.7     8.92.3     8.52.3     8.13.2     9.63.8     9.29.4  \\\n",
       "0          NaN        NaN        NaN        NaN        NaN        NaN   \n",
       "1         9.15       8.49       8.01       7.57       8.99       8.66   \n",
       "2        11.09      10.45       9.95       9.34      10.31      10.07   \n",
       "3        12.76      12.28      11.87      11.51      11.98      11.79   \n",
       "4        16.09      15.42      14.96      14.45      14.48      14.35   \n",
       "..         ...        ...        ...        ...        ...        ...   \n",
       "474      20.16      19.83      19.49      19.15      18.93      18.83   \n",
       "475      20.25      19.92      19.55      19.14      19.27      19.14   \n",
       "476      17.40      16.79      16.35      15.85      16.81      16.62   \n",
       "477      13.87      13.30      12.91      12.54      13.84      13.52   \n",
       "478      12.68      12.01      11.64      11.32      12.67      12.39   \n",
       "\n",
       "        9.10.3  \n",
       "0          NaN  \n",
       "1         8.43  \n",
       "2         9.89  \n",
       "3        11.74  \n",
       "4        14.31  \n",
       "..         ...  \n",
       "474      18.79  \n",
       "475      19.06  \n",
       "476      16.49  \n",
       "477      13.35  \n",
       "478      12.26  \n",
       "\n",
       "[479 rows x 1446 columns]>"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "2c198a36",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>196101</th>\n",
       "      <th>10.26</th>\n",
       "      <th>10.49</th>\n",
       "      <th>11.06</th>\n",
       "      <th>11.06.1</th>\n",
       "      <th>11.96</th>\n",
       "      <th>11.32</th>\n",
       "      <th>8.99</th>\n",
       "      <th>12.01</th>\n",
       "      <th>13.31</th>\n",
       "      <th>...</th>\n",
       "      <th>8.65</th>\n",
       "      <th>8.84.8</th>\n",
       "      <th>9.63.6</th>\n",
       "      <th>9.63.7</th>\n",
       "      <th>8.92.3</th>\n",
       "      <th>8.52.3</th>\n",
       "      <th>8.13.2</th>\n",
       "      <th>9.63.8</th>\n",
       "      <th>9.29.4</th>\n",
       "      <th>9.10.3</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>196102</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>196103</td>\n",
       "      <td>13.15</td>\n",
       "      <td>13.93</td>\n",
       "      <td>13.74</td>\n",
       "      <td>13.74</td>\n",
       "      <td>14.85</td>\n",
       "      <td>14.51</td>\n",
       "      <td>12.49</td>\n",
       "      <td>14.73</td>\n",
       "      <td>15.26</td>\n",
       "      <td>...</td>\n",
       "      <td>8.20</td>\n",
       "      <td>8.43</td>\n",
       "      <td>9.15</td>\n",
       "      <td>9.15</td>\n",
       "      <td>8.49</td>\n",
       "      <td>8.01</td>\n",
       "      <td>7.57</td>\n",
       "      <td>8.99</td>\n",
       "      <td>8.66</td>\n",
       "      <td>8.43</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>196104</td>\n",
       "      <td>15.57</td>\n",
       "      <td>16.59</td>\n",
       "      <td>16.35</td>\n",
       "      <td>16.35</td>\n",
       "      <td>17.90</td>\n",
       "      <td>17.40</td>\n",
       "      <td>15.04</td>\n",
       "      <td>17.39</td>\n",
       "      <td>18.29</td>\n",
       "      <td>...</td>\n",
       "      <td>10.03</td>\n",
       "      <td>10.28</td>\n",
       "      <td>11.09</td>\n",
       "      <td>11.09</td>\n",
       "      <td>10.45</td>\n",
       "      <td>9.95</td>\n",
       "      <td>9.34</td>\n",
       "      <td>10.31</td>\n",
       "      <td>10.07</td>\n",
       "      <td>9.89</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>196105</td>\n",
       "      <td>19.03</td>\n",
       "      <td>20.43</td>\n",
       "      <td>19.84</td>\n",
       "      <td>19.84</td>\n",
       "      <td>21.90</td>\n",
       "      <td>21.68</td>\n",
       "      <td>19.23</td>\n",
       "      <td>21.01</td>\n",
       "      <td>21.57</td>\n",
       "      <td>...</td>\n",
       "      <td>11.90</td>\n",
       "      <td>12.13</td>\n",
       "      <td>12.76</td>\n",
       "      <td>12.76</td>\n",
       "      <td>12.28</td>\n",
       "      <td>11.87</td>\n",
       "      <td>11.51</td>\n",
       "      <td>11.98</td>\n",
       "      <td>11.79</td>\n",
       "      <td>11.74</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>196106</td>\n",
       "      <td>24.28</td>\n",
       "      <td>26.15</td>\n",
       "      <td>25.31</td>\n",
       "      <td>25.31</td>\n",
       "      <td>28.28</td>\n",
       "      <td>27.82</td>\n",
       "      <td>25.09</td>\n",
       "      <td>26.43</td>\n",
       "      <td>28.12</td>\n",
       "      <td>...</td>\n",
       "      <td>14.93</td>\n",
       "      <td>15.23</td>\n",
       "      <td>16.09</td>\n",
       "      <td>16.09</td>\n",
       "      <td>15.42</td>\n",
       "      <td>14.96</td>\n",
       "      <td>14.45</td>\n",
       "      <td>14.48</td>\n",
       "      <td>14.35</td>\n",
       "      <td>14.31</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 1446 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   196101     10.26     10.49     11.06    11.06.1     11.96     11.32  \\\n",
       "0  196102       NaN       NaN       NaN        NaN       NaN       NaN   \n",
       "1  196103     13.15     13.93     13.74      13.74     14.85     14.51   \n",
       "2  196104     15.57     16.59     16.35      16.35     17.90     17.40   \n",
       "3  196105     19.03     20.43     19.84      19.84     21.90     21.68   \n",
       "4  196106     24.28     26.15     25.31      25.31     28.28     27.82   \n",
       "\n",
       "       8.99     12.01     13.31  ...      8.65     8.84.8     9.63.6  \\\n",
       "0       NaN       NaN       NaN  ...       NaN        NaN        NaN   \n",
       "1     12.49     14.73     15.26  ...      8.20       8.43       9.15   \n",
       "2     15.04     17.39     18.29  ...     10.03      10.28      11.09   \n",
       "3     19.23     21.01     21.57  ...     11.90      12.13      12.76   \n",
       "4     25.09     26.43     28.12  ...     14.93      15.23      16.09   \n",
       "\n",
       "      9.63.7     8.92.3     8.52.3     8.13.2     9.63.8     9.29.4     9.10.3  \n",
       "0        NaN        NaN        NaN        NaN        NaN        NaN        NaN  \n",
       "1       9.15       8.49       8.01       7.57       8.99       8.66       8.43  \n",
       "2      11.09      10.45       9.95       9.34      10.31      10.07       9.89  \n",
       "3      12.76      12.28      11.87      11.51      11.98      11.79      11.74  \n",
       "4      16.09      15.42      14.96      14.45      14.48      14.35      14.31  \n",
       "\n",
       "[5 rows x 1446 columns]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "a89f0fcf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>196101</th>\n",
       "      <th>10.26</th>\n",
       "      <th>10.49</th>\n",
       "      <th>11.06</th>\n",
       "      <th>11.06.1</th>\n",
       "      <th>11.96</th>\n",
       "      <th>11.32</th>\n",
       "      <th>8.99</th>\n",
       "      <th>12.01</th>\n",
       "      <th>13.31</th>\n",
       "      <th>...</th>\n",
       "      <th>8.65</th>\n",
       "      <th>8.84.8</th>\n",
       "      <th>9.63.6</th>\n",
       "      <th>9.63.7</th>\n",
       "      <th>8.92.3</th>\n",
       "      <th>8.52.3</th>\n",
       "      <th>8.13.2</th>\n",
       "      <th>9.63.8</th>\n",
       "      <th>9.29.4</th>\n",
       "      <th>9.10.3</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>196104</td>\n",
       "      <td>15.57</td>\n",
       "      <td>16.59</td>\n",
       "      <td>16.35</td>\n",
       "      <td>16.35</td>\n",
       "      <td>17.90</td>\n",
       "      <td>17.40</td>\n",
       "      <td>15.04</td>\n",
       "      <td>17.39</td>\n",
       "      <td>18.29</td>\n",
       "      <td>...</td>\n",
       "      <td>10.03</td>\n",
       "      <td>10.28</td>\n",
       "      <td>11.09</td>\n",
       "      <td>11.09</td>\n",
       "      <td>10.45</td>\n",
       "      <td>9.95</td>\n",
       "      <td>9.34</td>\n",
       "      <td>10.31</td>\n",
       "      <td>10.07</td>\n",
       "      <td>9.89</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>196105</td>\n",
       "      <td>19.03</td>\n",
       "      <td>20.43</td>\n",
       "      <td>19.84</td>\n",
       "      <td>19.84</td>\n",
       "      <td>21.90</td>\n",
       "      <td>21.68</td>\n",
       "      <td>19.23</td>\n",
       "      <td>21.01</td>\n",
       "      <td>21.57</td>\n",
       "      <td>...</td>\n",
       "      <td>11.90</td>\n",
       "      <td>12.13</td>\n",
       "      <td>12.76</td>\n",
       "      <td>12.76</td>\n",
       "      <td>12.28</td>\n",
       "      <td>11.87</td>\n",
       "      <td>11.51</td>\n",
       "      <td>11.98</td>\n",
       "      <td>11.79</td>\n",
       "      <td>11.74</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>196106</td>\n",
       "      <td>24.28</td>\n",
       "      <td>26.15</td>\n",
       "      <td>25.31</td>\n",
       "      <td>25.31</td>\n",
       "      <td>28.28</td>\n",
       "      <td>27.82</td>\n",
       "      <td>25.09</td>\n",
       "      <td>26.43</td>\n",
       "      <td>28.12</td>\n",
       "      <td>...</td>\n",
       "      <td>14.93</td>\n",
       "      <td>15.23</td>\n",
       "      <td>16.09</td>\n",
       "      <td>16.09</td>\n",
       "      <td>15.42</td>\n",
       "      <td>14.96</td>\n",
       "      <td>14.45</td>\n",
       "      <td>14.48</td>\n",
       "      <td>14.35</td>\n",
       "      <td>14.31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>196107</td>\n",
       "      <td>30.75</td>\n",
       "      <td>32.01</td>\n",
       "      <td>32.59</td>\n",
       "      <td>32.59</td>\n",
       "      <td>35.23</td>\n",
       "      <td>33.81</td>\n",
       "      <td>30.54</td>\n",
       "      <td>34.61</td>\n",
       "      <td>36.72</td>\n",
       "      <td>...</td>\n",
       "      <td>18.31</td>\n",
       "      <td>18.73</td>\n",
       "      <td>19.39</td>\n",
       "      <td>19.39</td>\n",
       "      <td>18.90</td>\n",
       "      <td>18.43</td>\n",
       "      <td>17.92</td>\n",
       "      <td>17.11</td>\n",
       "      <td>17.08</td>\n",
       "      <td>17.01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>196108</td>\n",
       "      <td>30.95</td>\n",
       "      <td>32.05</td>\n",
       "      <td>32.31</td>\n",
       "      <td>32.31</td>\n",
       "      <td>34.94</td>\n",
       "      <td>33.47</td>\n",
       "      <td>30.97</td>\n",
       "      <td>33.66</td>\n",
       "      <td>35.66</td>\n",
       "      <td>...</td>\n",
       "      <td>19.69</td>\n",
       "      <td>20.11</td>\n",
       "      <td>20.89</td>\n",
       "      <td>20.89</td>\n",
       "      <td>20.53</td>\n",
       "      <td>20.20</td>\n",
       "      <td>19.86</td>\n",
       "      <td>18.55</td>\n",
       "      <td>18.48</td>\n",
       "      <td>18.45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>474</th>\n",
       "      <td>200008</td>\n",
       "      <td>29.63</td>\n",
       "      <td>31.05</td>\n",
       "      <td>31.02</td>\n",
       "      <td>31.02</td>\n",
       "      <td>33.83</td>\n",
       "      <td>32.63</td>\n",
       "      <td>29.66</td>\n",
       "      <td>32.65</td>\n",
       "      <td>34.83</td>\n",
       "      <td>...</td>\n",
       "      <td>19.29</td>\n",
       "      <td>19.55</td>\n",
       "      <td>20.16</td>\n",
       "      <td>20.16</td>\n",
       "      <td>19.83</td>\n",
       "      <td>19.49</td>\n",
       "      <td>19.15</td>\n",
       "      <td>18.93</td>\n",
       "      <td>18.83</td>\n",
       "      <td>18.79</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>475</th>\n",
       "      <td>200009</td>\n",
       "      <td>27.89</td>\n",
       "      <td>28.92</td>\n",
       "      <td>29.39</td>\n",
       "      <td>29.39</td>\n",
       "      <td>31.72</td>\n",
       "      <td>30.25</td>\n",
       "      <td>27.39</td>\n",
       "      <td>31.16</td>\n",
       "      <td>32.78</td>\n",
       "      <td>...</td>\n",
       "      <td>19.31</td>\n",
       "      <td>19.53</td>\n",
       "      <td>20.25</td>\n",
       "      <td>20.25</td>\n",
       "      <td>19.92</td>\n",
       "      <td>19.55</td>\n",
       "      <td>19.14</td>\n",
       "      <td>19.27</td>\n",
       "      <td>19.14</td>\n",
       "      <td>19.06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>476</th>\n",
       "      <td>200010</td>\n",
       "      <td>20.74</td>\n",
       "      <td>20.90</td>\n",
       "      <td>22.06</td>\n",
       "      <td>22.06</td>\n",
       "      <td>22.77</td>\n",
       "      <td>21.54</td>\n",
       "      <td>19.57</td>\n",
       "      <td>23.82</td>\n",
       "      <td>24.52</td>\n",
       "      <td>...</td>\n",
       "      <td>16.40</td>\n",
       "      <td>16.54</td>\n",
       "      <td>17.40</td>\n",
       "      <td>17.40</td>\n",
       "      <td>16.79</td>\n",
       "      <td>16.35</td>\n",
       "      <td>15.85</td>\n",
       "      <td>16.81</td>\n",
       "      <td>16.62</td>\n",
       "      <td>16.49</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>477</th>\n",
       "      <td>200011</td>\n",
       "      <td>16.66</td>\n",
       "      <td>16.91</td>\n",
       "      <td>16.96</td>\n",
       "      <td>16.96</td>\n",
       "      <td>17.48</td>\n",
       "      <td>16.99</td>\n",
       "      <td>15.48</td>\n",
       "      <td>17.43</td>\n",
       "      <td>17.68</td>\n",
       "      <td>...</td>\n",
       "      <td>12.95</td>\n",
       "      <td>13.09</td>\n",
       "      <td>13.87</td>\n",
       "      <td>13.87</td>\n",
       "      <td>13.30</td>\n",
       "      <td>12.91</td>\n",
       "      <td>12.54</td>\n",
       "      <td>13.84</td>\n",
       "      <td>13.52</td>\n",
       "      <td>13.35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>478</th>\n",
       "      <td>200012</td>\n",
       "      <td>13.56</td>\n",
       "      <td>14.06</td>\n",
       "      <td>13.92</td>\n",
       "      <td>13.92</td>\n",
       "      <td>14.86</td>\n",
       "      <td>14.51</td>\n",
       "      <td>12.43</td>\n",
       "      <td>14.48</td>\n",
       "      <td>15.20</td>\n",
       "      <td>...</td>\n",
       "      <td>11.87</td>\n",
       "      <td>12.00</td>\n",
       "      <td>12.68</td>\n",
       "      <td>12.68</td>\n",
       "      <td>12.01</td>\n",
       "      <td>11.64</td>\n",
       "      <td>11.32</td>\n",
       "      <td>12.67</td>\n",
       "      <td>12.39</td>\n",
       "      <td>12.26</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>477 rows × 1446 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     196101     10.26     10.49     11.06    11.06.1     11.96     11.32  \\\n",
       "2    196104     15.57     16.59     16.35      16.35     17.90     17.40   \n",
       "3    196105     19.03     20.43     19.84      19.84     21.90     21.68   \n",
       "4    196106     24.28     26.15     25.31      25.31     28.28     27.82   \n",
       "5    196107     30.75     32.01     32.59      32.59     35.23     33.81   \n",
       "6    196108     30.95     32.05     32.31      32.31     34.94     33.47   \n",
       "..      ...       ...       ...       ...        ...       ...       ...   \n",
       "474  200008     29.63     31.05     31.02      31.02     33.83     32.63   \n",
       "475  200009     27.89     28.92     29.39      29.39     31.72     30.25   \n",
       "476  200010     20.74     20.90     22.06      22.06     22.77     21.54   \n",
       "477  200011     16.66     16.91     16.96      16.96     17.48     16.99   \n",
       "478  200012     13.56     14.06     13.92      13.92     14.86     14.51   \n",
       "\n",
       "         8.99     12.01     13.31  ...      8.65     8.84.8     9.63.6  \\\n",
       "2       15.04     17.39     18.29  ...     10.03      10.28      11.09   \n",
       "3       19.23     21.01     21.57  ...     11.90      12.13      12.76   \n",
       "4       25.09     26.43     28.12  ...     14.93      15.23      16.09   \n",
       "5       30.54     34.61     36.72  ...     18.31      18.73      19.39   \n",
       "6       30.97     33.66     35.66  ...     19.69      20.11      20.89   \n",
       "..        ...       ...       ...  ...       ...        ...        ...   \n",
       "474     29.66     32.65     34.83  ...     19.29      19.55      20.16   \n",
       "475     27.39     31.16     32.78  ...     19.31      19.53      20.25   \n",
       "476     19.57     23.82     24.52  ...     16.40      16.54      17.40   \n",
       "477     15.48     17.43     17.68  ...     12.95      13.09      13.87   \n",
       "478     12.43     14.48     15.20  ...     11.87      12.00      12.68   \n",
       "\n",
       "        9.63.7     8.92.3     8.52.3     8.13.2     9.63.8     9.29.4  \\\n",
       "2        11.09      10.45       9.95       9.34      10.31      10.07   \n",
       "3        12.76      12.28      11.87      11.51      11.98      11.79   \n",
       "4        16.09      15.42      14.96      14.45      14.48      14.35   \n",
       "5        19.39      18.90      18.43      17.92      17.11      17.08   \n",
       "6        20.89      20.53      20.20      19.86      18.55      18.48   \n",
       "..         ...        ...        ...        ...        ...        ...   \n",
       "474      20.16      19.83      19.49      19.15      18.93      18.83   \n",
       "475      20.25      19.92      19.55      19.14      19.27      19.14   \n",
       "476      17.40      16.79      16.35      15.85      16.81      16.62   \n",
       "477      13.87      13.30      12.91      12.54      13.84      13.52   \n",
       "478      12.68      12.01      11.64      11.32      12.67      12.39   \n",
       "\n",
       "        9.10.3  \n",
       "2         9.89  \n",
       "3        11.74  \n",
       "4        14.31  \n",
       "5        17.01  \n",
       "6        18.45  \n",
       "..         ...  \n",
       "474      18.79  \n",
       "475      19.06  \n",
       "476      16.49  \n",
       "477      13.35  \n",
       "478      12.26  \n",
       "\n",
       "[477 rows x 1446 columns]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data[2:]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "2e8951d7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>196101</th>\n",
       "      <th>10.26</th>\n",
       "      <th>10.49</th>\n",
       "      <th>11.06</th>\n",
       "      <th>11.06.1</th>\n",
       "      <th>11.96</th>\n",
       "      <th>11.32</th>\n",
       "      <th>8.99</th>\n",
       "      <th>12.01</th>\n",
       "      <th>13.31</th>\n",
       "      <th>...</th>\n",
       "      <th>8.65</th>\n",
       "      <th>8.84.8</th>\n",
       "      <th>9.63.6</th>\n",
       "      <th>9.63.7</th>\n",
       "      <th>8.92.3</th>\n",
       "      <th>8.52.3</th>\n",
       "      <th>8.13.2</th>\n",
       "      <th>9.63.8</th>\n",
       "      <th>9.29.4</th>\n",
       "      <th>9.10.3</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>196102</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>196103</td>\n",
       "      <td>13.15</td>\n",
       "      <td>13.93</td>\n",
       "      <td>13.74</td>\n",
       "      <td>13.74</td>\n",
       "      <td>14.85</td>\n",
       "      <td>14.51</td>\n",
       "      <td>12.49</td>\n",
       "      <td>14.73</td>\n",
       "      <td>15.26</td>\n",
       "      <td>...</td>\n",
       "      <td>8.20</td>\n",
       "      <td>8.43</td>\n",
       "      <td>9.15</td>\n",
       "      <td>9.15</td>\n",
       "      <td>8.49</td>\n",
       "      <td>8.01</td>\n",
       "      <td>7.57</td>\n",
       "      <td>8.99</td>\n",
       "      <td>8.66</td>\n",
       "      <td>8.43</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>196104</td>\n",
       "      <td>15.57</td>\n",
       "      <td>16.59</td>\n",
       "      <td>16.35</td>\n",
       "      <td>16.35</td>\n",
       "      <td>17.90</td>\n",
       "      <td>17.40</td>\n",
       "      <td>15.04</td>\n",
       "      <td>17.39</td>\n",
       "      <td>18.29</td>\n",
       "      <td>...</td>\n",
       "      <td>10.03</td>\n",
       "      <td>10.28</td>\n",
       "      <td>11.09</td>\n",
       "      <td>11.09</td>\n",
       "      <td>10.45</td>\n",
       "      <td>9.95</td>\n",
       "      <td>9.34</td>\n",
       "      <td>10.31</td>\n",
       "      <td>10.07</td>\n",
       "      <td>9.89</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>196105</td>\n",
       "      <td>19.03</td>\n",
       "      <td>20.43</td>\n",
       "      <td>19.84</td>\n",
       "      <td>19.84</td>\n",
       "      <td>21.90</td>\n",
       "      <td>21.68</td>\n",
       "      <td>19.23</td>\n",
       "      <td>21.01</td>\n",
       "      <td>21.57</td>\n",
       "      <td>...</td>\n",
       "      <td>11.90</td>\n",
       "      <td>12.13</td>\n",
       "      <td>12.76</td>\n",
       "      <td>12.76</td>\n",
       "      <td>12.28</td>\n",
       "      <td>11.87</td>\n",
       "      <td>11.51</td>\n",
       "      <td>11.98</td>\n",
       "      <td>11.79</td>\n",
       "      <td>11.74</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>196106</td>\n",
       "      <td>24.28</td>\n",
       "      <td>26.15</td>\n",
       "      <td>25.31</td>\n",
       "      <td>25.31</td>\n",
       "      <td>28.28</td>\n",
       "      <td>27.82</td>\n",
       "      <td>25.09</td>\n",
       "      <td>26.43</td>\n",
       "      <td>28.12</td>\n",
       "      <td>...</td>\n",
       "      <td>14.93</td>\n",
       "      <td>15.23</td>\n",
       "      <td>16.09</td>\n",
       "      <td>16.09</td>\n",
       "      <td>15.42</td>\n",
       "      <td>14.96</td>\n",
       "      <td>14.45</td>\n",
       "      <td>14.48</td>\n",
       "      <td>14.35</td>\n",
       "      <td>14.31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>196107</td>\n",
       "      <td>30.75</td>\n",
       "      <td>32.01</td>\n",
       "      <td>32.59</td>\n",
       "      <td>32.59</td>\n",
       "      <td>35.23</td>\n",
       "      <td>33.81</td>\n",
       "      <td>30.54</td>\n",
       "      <td>34.61</td>\n",
       "      <td>36.72</td>\n",
       "      <td>...</td>\n",
       "      <td>18.31</td>\n",
       "      <td>18.73</td>\n",
       "      <td>19.39</td>\n",
       "      <td>19.39</td>\n",
       "      <td>18.90</td>\n",
       "      <td>18.43</td>\n",
       "      <td>17.92</td>\n",
       "      <td>17.11</td>\n",
       "      <td>17.08</td>\n",
       "      <td>17.01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>196108</td>\n",
       "      <td>30.95</td>\n",
       "      <td>32.05</td>\n",
       "      <td>32.31</td>\n",
       "      <td>32.31</td>\n",
       "      <td>34.94</td>\n",
       "      <td>33.47</td>\n",
       "      <td>30.97</td>\n",
       "      <td>33.66</td>\n",
       "      <td>35.66</td>\n",
       "      <td>...</td>\n",
       "      <td>19.69</td>\n",
       "      <td>20.11</td>\n",
       "      <td>20.89</td>\n",
       "      <td>20.89</td>\n",
       "      <td>20.53</td>\n",
       "      <td>20.20</td>\n",
       "      <td>19.86</td>\n",
       "      <td>18.55</td>\n",
       "      <td>18.48</td>\n",
       "      <td>18.45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>196109</td>\n",
       "      <td>26.46</td>\n",
       "      <td>27.47</td>\n",
       "      <td>27.56</td>\n",
       "      <td>27.56</td>\n",
       "      <td>29.80</td>\n",
       "      <td>28.80</td>\n",
       "      <td>26.16</td>\n",
       "      <td>29.14</td>\n",
       "      <td>30.78</td>\n",
       "      <td>...</td>\n",
       "      <td>17.96</td>\n",
       "      <td>18.25</td>\n",
       "      <td>19.13</td>\n",
       "      <td>19.13</td>\n",
       "      <td>18.60</td>\n",
       "      <td>18.14</td>\n",
       "      <td>17.77</td>\n",
       "      <td>17.25</td>\n",
       "      <td>17.16</td>\n",
       "      <td>17.14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>196110</td>\n",
       "      <td>20.82</td>\n",
       "      <td>21.50</td>\n",
       "      <td>21.21</td>\n",
       "      <td>21.21</td>\n",
       "      <td>22.21</td>\n",
       "      <td>21.67</td>\n",
       "      <td>20.14</td>\n",
       "      <td>22.22</td>\n",
       "      <td>23.03</td>\n",
       "      <td>...</td>\n",
       "      <td>14.72</td>\n",
       "      <td>14.92</td>\n",
       "      <td>15.78</td>\n",
       "      <td>15.78</td>\n",
       "      <td>15.27</td>\n",
       "      <td>14.99</td>\n",
       "      <td>14.64</td>\n",
       "      <td>14.83</td>\n",
       "      <td>14.61</td>\n",
       "      <td>14.46</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>196111</td>\n",
       "      <td>15.95</td>\n",
       "      <td>16.38</td>\n",
       "      <td>16.64</td>\n",
       "      <td>16.64</td>\n",
       "      <td>17.74</td>\n",
       "      <td>17.02</td>\n",
       "      <td>14.78</td>\n",
       "      <td>17.64</td>\n",
       "      <td>18.80</td>\n",
       "      <td>...</td>\n",
       "      <td>11.44</td>\n",
       "      <td>11.60</td>\n",
       "      <td>12.45</td>\n",
       "      <td>12.45</td>\n",
       "      <td>11.72</td>\n",
       "      <td>11.33</td>\n",
       "      <td>10.86</td>\n",
       "      <td>12.27</td>\n",
       "      <td>11.95</td>\n",
       "      <td>11.74</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>10 rows × 1446 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   196101     10.26     10.49     11.06    11.06.1     11.96     11.32  \\\n",
       "0  196102       NaN       NaN       NaN        NaN       NaN       NaN   \n",
       "1  196103     13.15     13.93     13.74      13.74     14.85     14.51   \n",
       "2  196104     15.57     16.59     16.35      16.35     17.90     17.40   \n",
       "3  196105     19.03     20.43     19.84      19.84     21.90     21.68   \n",
       "4  196106     24.28     26.15     25.31      25.31     28.28     27.82   \n",
       "5  196107     30.75     32.01     32.59      32.59     35.23     33.81   \n",
       "6  196108     30.95     32.05     32.31      32.31     34.94     33.47   \n",
       "7  196109     26.46     27.47     27.56      27.56     29.80     28.80   \n",
       "8  196110     20.82     21.50     21.21      21.21     22.21     21.67   \n",
       "9  196111     15.95     16.38     16.64      16.64     17.74     17.02   \n",
       "\n",
       "       8.99     12.01     13.31  ...      8.65     8.84.8     9.63.6  \\\n",
       "0       NaN       NaN       NaN  ...       NaN        NaN        NaN   \n",
       "1     12.49     14.73     15.26  ...      8.20       8.43       9.15   \n",
       "2     15.04     17.39     18.29  ...     10.03      10.28      11.09   \n",
       "3     19.23     21.01     21.57  ...     11.90      12.13      12.76   \n",
       "4     25.09     26.43     28.12  ...     14.93      15.23      16.09   \n",
       "5     30.54     34.61     36.72  ...     18.31      18.73      19.39   \n",
       "6     30.97     33.66     35.66  ...     19.69      20.11      20.89   \n",
       "7     26.16     29.14     30.78  ...     17.96      18.25      19.13   \n",
       "8     20.14     22.22     23.03  ...     14.72      14.92      15.78   \n",
       "9     14.78     17.64     18.80  ...     11.44      11.60      12.45   \n",
       "\n",
       "      9.63.7     8.92.3     8.52.3     8.13.2     9.63.8     9.29.4     9.10.3  \n",
       "0        NaN        NaN        NaN        NaN        NaN        NaN        NaN  \n",
       "1       9.15       8.49       8.01       7.57       8.99       8.66       8.43  \n",
       "2      11.09      10.45       9.95       9.34      10.31      10.07       9.89  \n",
       "3      12.76      12.28      11.87      11.51      11.98      11.79      11.74  \n",
       "4      16.09      15.42      14.96      14.45      14.48      14.35      14.31  \n",
       "5      19.39      18.90      18.43      17.92      17.11      17.08      17.01  \n",
       "6      20.89      20.53      20.20      19.86      18.55      18.48      18.45  \n",
       "7      19.13      18.60      18.14      17.77      17.25      17.16      17.14  \n",
       "8      15.78      15.27      14.99      14.64      14.83      14.61      14.46  \n",
       "9      12.45      11.72      11.33      10.86      12.27      11.95      11.74  \n",
       "\n",
       "[10 rows x 1446 columns]"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "7a4e8067",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>196101</th>\n",
       "      <th>10.26</th>\n",
       "      <th>10.49</th>\n",
       "      <th>11.06</th>\n",
       "      <th>11.06.1</th>\n",
       "      <th>11.96</th>\n",
       "      <th>11.32</th>\n",
       "      <th>8.99</th>\n",
       "      <th>12.01</th>\n",
       "      <th>13.31</th>\n",
       "      <th>...</th>\n",
       "      <th>8.65</th>\n",
       "      <th>8.84.8</th>\n",
       "      <th>9.63.6</th>\n",
       "      <th>9.63.7</th>\n",
       "      <th>8.92.3</th>\n",
       "      <th>8.52.3</th>\n",
       "      <th>8.13.2</th>\n",
       "      <th>9.63.8</th>\n",
       "      <th>9.29.4</th>\n",
       "      <th>9.10.3</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>474</th>\n",
       "      <td>200008</td>\n",
       "      <td>29.63</td>\n",
       "      <td>31.05</td>\n",
       "      <td>31.02</td>\n",
       "      <td>31.02</td>\n",
       "      <td>33.83</td>\n",
       "      <td>32.63</td>\n",
       "      <td>29.66</td>\n",
       "      <td>32.65</td>\n",
       "      <td>34.83</td>\n",
       "      <td>...</td>\n",
       "      <td>19.29</td>\n",
       "      <td>19.55</td>\n",
       "      <td>20.16</td>\n",
       "      <td>20.16</td>\n",
       "      <td>19.83</td>\n",
       "      <td>19.49</td>\n",
       "      <td>19.15</td>\n",
       "      <td>18.93</td>\n",
       "      <td>18.83</td>\n",
       "      <td>18.79</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>475</th>\n",
       "      <td>200009</td>\n",
       "      <td>27.89</td>\n",
       "      <td>28.92</td>\n",
       "      <td>29.39</td>\n",
       "      <td>29.39</td>\n",
       "      <td>31.72</td>\n",
       "      <td>30.25</td>\n",
       "      <td>27.39</td>\n",
       "      <td>31.16</td>\n",
       "      <td>32.78</td>\n",
       "      <td>...</td>\n",
       "      <td>19.31</td>\n",
       "      <td>19.53</td>\n",
       "      <td>20.25</td>\n",
       "      <td>20.25</td>\n",
       "      <td>19.92</td>\n",
       "      <td>19.55</td>\n",
       "      <td>19.14</td>\n",
       "      <td>19.27</td>\n",
       "      <td>19.14</td>\n",
       "      <td>19.06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>476</th>\n",
       "      <td>200010</td>\n",
       "      <td>20.74</td>\n",
       "      <td>20.90</td>\n",
       "      <td>22.06</td>\n",
       "      <td>22.06</td>\n",
       "      <td>22.77</td>\n",
       "      <td>21.54</td>\n",
       "      <td>19.57</td>\n",
       "      <td>23.82</td>\n",
       "      <td>24.52</td>\n",
       "      <td>...</td>\n",
       "      <td>16.40</td>\n",
       "      <td>16.54</td>\n",
       "      <td>17.40</td>\n",
       "      <td>17.40</td>\n",
       "      <td>16.79</td>\n",
       "      <td>16.35</td>\n",
       "      <td>15.85</td>\n",
       "      <td>16.81</td>\n",
       "      <td>16.62</td>\n",
       "      <td>16.49</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>477</th>\n",
       "      <td>200011</td>\n",
       "      <td>16.66</td>\n",
       "      <td>16.91</td>\n",
       "      <td>16.96</td>\n",
       "      <td>16.96</td>\n",
       "      <td>17.48</td>\n",
       "      <td>16.99</td>\n",
       "      <td>15.48</td>\n",
       "      <td>17.43</td>\n",
       "      <td>17.68</td>\n",
       "      <td>...</td>\n",
       "      <td>12.95</td>\n",
       "      <td>13.09</td>\n",
       "      <td>13.87</td>\n",
       "      <td>13.87</td>\n",
       "      <td>13.30</td>\n",
       "      <td>12.91</td>\n",
       "      <td>12.54</td>\n",
       "      <td>13.84</td>\n",
       "      <td>13.52</td>\n",
       "      <td>13.35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>478</th>\n",
       "      <td>200012</td>\n",
       "      <td>13.56</td>\n",
       "      <td>14.06</td>\n",
       "      <td>13.92</td>\n",
       "      <td>13.92</td>\n",
       "      <td>14.86</td>\n",
       "      <td>14.51</td>\n",
       "      <td>12.43</td>\n",
       "      <td>14.48</td>\n",
       "      <td>15.20</td>\n",
       "      <td>...</td>\n",
       "      <td>11.87</td>\n",
       "      <td>12.00</td>\n",
       "      <td>12.68</td>\n",
       "      <td>12.68</td>\n",
       "      <td>12.01</td>\n",
       "      <td>11.64</td>\n",
       "      <td>11.32</td>\n",
       "      <td>12.67</td>\n",
       "      <td>12.39</td>\n",
       "      <td>12.26</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 1446 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     196101     10.26     10.49     11.06    11.06.1     11.96     11.32  \\\n",
       "474  200008     29.63     31.05     31.02      31.02     33.83     32.63   \n",
       "475  200009     27.89     28.92     29.39      29.39     31.72     30.25   \n",
       "476  200010     20.74     20.90     22.06      22.06     22.77     21.54   \n",
       "477  200011     16.66     16.91     16.96      16.96     17.48     16.99   \n",
       "478  200012     13.56     14.06     13.92      13.92     14.86     14.51   \n",
       "\n",
       "         8.99     12.01     13.31  ...      8.65     8.84.8     9.63.6  \\\n",
       "474     29.66     32.65     34.83  ...     19.29      19.55      20.16   \n",
       "475     27.39     31.16     32.78  ...     19.31      19.53      20.25   \n",
       "476     19.57     23.82     24.52  ...     16.40      16.54      17.40   \n",
       "477     15.48     17.43     17.68  ...     12.95      13.09      13.87   \n",
       "478     12.43     14.48     15.20  ...     11.87      12.00      12.68   \n",
       "\n",
       "        9.63.7     8.92.3     8.52.3     8.13.2     9.63.8     9.29.4  \\\n",
       "474      20.16      19.83      19.49      19.15      18.93      18.83   \n",
       "475      20.25      19.92      19.55      19.14      19.27      19.14   \n",
       "476      17.40      16.79      16.35      15.85      16.81      16.62   \n",
       "477      13.87      13.30      12.91      12.54      13.84      13.52   \n",
       "478      12.68      12.01      11.64      11.32      12.67      12.39   \n",
       "\n",
       "        9.10.3  \n",
       "474      18.79  \n",
       "475      19.06  \n",
       "476      16.49  \n",
       "477      13.35  \n",
       "478      12.26  \n",
       "\n",
       "[5 rows x 1446 columns]"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "4eafa455",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(479, 1446)"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "605750ed",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['CodigoAEMET', 'Localidad', 'Longitud', 'Latitud', 'Altura'], dtype='object')"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "8f69c321",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['196101', '   10.26', '   10.49', ..., '    9.63.8', '    9.29.4',\n",
       "       '    9.10.3'], dtype=object)"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.columns.values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "cebf3cfc",
   "metadata": {},
   "outputs": [],
   "source": [
    "data2=pd.read_csv(\"../Dataset/Fichero_Maestro.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "ddb4f38e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CodigoAEMET</th>\n",
       "      <th>Localidad</th>\n",
       "      <th>Longitud</th>\n",
       "      <th>Latitud</th>\n",
       "      <th>Altura</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0001</td>\n",
       "      <td>EL PERELLO</td>\n",
       "      <td>0.71667</td>\n",
       "      <td>40.8667</td>\n",
       "      <td>142.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0016B, REUS \"CENTRE LECTURA\", 1.1086, 41.1539,...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0017</td>\n",
       "      <td>VILASECA DE SOLCINA</td>\n",
       "      <td>1.14500</td>\n",
       "      <td>41.1117</td>\n",
       "      <td>53.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0019, VIMBODI \"RIUDABELLA\", 1.0411, 41.3722, 590</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0020O, VIMBODI \"MONESTIR DE POBLET\", 1.0786, 4...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                         CodigoAEMET             Localidad  \\\n",
       "0                                               0001            EL PERELLO   \n",
       "1  0016B, REUS \"CENTRE LECTURA\", 1.1086, 41.1539,...                   NaN   \n",
       "2                                               0017   VILASECA DE SOLCINA   \n",
       "3   0019, VIMBODI \"RIUDABELLA\", 1.0411, 41.3722, 590                   NaN   \n",
       "4  0020O, VIMBODI \"MONESTIR DE POBLET\", 1.0786, 4...                   NaN   \n",
       "\n",
       "    Longitud   Latitud   Altura  \n",
       "0    0.71667   40.8667    142.0  \n",
       "1        NaN       NaN      NaN  \n",
       "2    1.14500   41.1117     53.0  \n",
       "3        NaN       NaN      NaN  \n",
       "4        NaN       NaN      NaN  "
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data2.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "0b2cbafb",
   "metadata": {},
   "outputs": [],
   "source": [
    "data2_mod=pd.read_csv(\"../Dataset/Fichero_Maestro_modificado.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "248a2aa4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CodigoAEMET</th>\n",
       "      <th>Localidad</th>\n",
       "      <th>Longitud</th>\n",
       "      <th>Latitud</th>\n",
       "      <th>Altura</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>EL PERELLO</td>\n",
       "      <td>71.667</td>\n",
       "      <td>408.667</td>\n",
       "      <td>142.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>160000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>17</td>\n",
       "      <td>VILASECA DE SOLCINA</td>\n",
       "      <td>1.145</td>\n",
       "      <td>411.117</td>\n",
       "      <td>53.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>19</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>200000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   CodigoAEMET            Localidad  Longitud  Latitud  Altura\n",
       "0            1           EL PERELLO    71.667  408.667   142.0\n",
       "1       160000                  NaN       NaN      NaN     NaN\n",
       "2           17  VILASECA DE SOLCINA     1.145  411.117    53.0\n",
       "3           19                  NaN       NaN      NaN     NaN\n",
       "4       200000                  NaN       NaN      NaN     NaN"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data2_mod.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7af038b4",
   "metadata": {},
   "source": [
    "Identificación de Localidad a partir del Codigo AEMET"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "d90f0c0c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(374, 5)"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data2.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "7517bb23",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CodigoAEMET</th>\n",
       "      <th>Localidad</th>\n",
       "      <th>Longitud</th>\n",
       "      <th>Latitud</th>\n",
       "      <th>Altura</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>369</th>\n",
       "      <td>C449G</td>\n",
       "      <td>ANAGA-SAN ANDRES</td>\n",
       "      <td>-16.1839</td>\n",
       "      <td>28.4967</td>\n",
       "      <td>20.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>370</th>\n",
       "      <td>C458A</td>\n",
       "      <td>TACORONTE-A . S.E.A.</td>\n",
       "      <td>-16.4092</td>\n",
       "      <td>28.4864</td>\n",
       "      <td>327.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>371</th>\n",
       "      <td>C649I</td>\n",
       "      <td>TELDE/AEROPUERTO DE G.CANARIA (GANDO)</td>\n",
       "      <td>-15.3889</td>\n",
       "      <td>27.9292</td>\n",
       "      <td>24.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>372</th>\n",
       "      <td>C659P</td>\n",
       "      <td>LAS PALMAS DE GRAN CANARIA-JUNTA DE OBRAS DEL...</td>\n",
       "      <td>-15.4167</td>\n",
       "      <td>28.1500</td>\n",
       "      <td>15.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>373</th>\n",
       "      <td>C665I</td>\n",
       "      <td>VALLESECO-CASCO</td>\n",
       "      <td>-15.5736</td>\n",
       "      <td>28.0472</td>\n",
       "      <td>980.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    CodigoAEMET                                          Localidad   Longitud  \\\n",
       "369       C449G                                   ANAGA-SAN ANDRES   -16.1839   \n",
       "370       C458A                               TACORONTE-A . S.E.A.   -16.4092   \n",
       "371       C649I              TELDE/AEROPUERTO DE G.CANARIA (GANDO)   -15.3889   \n",
       "372       C659P   LAS PALMAS DE GRAN CANARIA-JUNTA DE OBRAS DEL...   -15.4167   \n",
       "373       C665I                                    VALLESECO-CASCO   -15.5736   \n",
       "\n",
       "      Latitud   Altura  \n",
       "369   28.4967     20.0  \n",
       "370   28.4864    327.0  \n",
       "371   27.9292     24.0  \n",
       "372   28.1500     15.0  \n",
       "373   28.0472    980.0  "
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data2.tail()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "377869db",
   "metadata": {},
   "source": [
    "### Borrado de valores que faltan o no son números"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "466e1c41",
   "metadata": {},
   "outputs": [],
   "source": [
    "data=pd.read_csv(\"../Dataset/TXMM_RCA_HADCM3Q0_20C3M_196101_200012.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "3f933857",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>196101</th>\n",
       "      <th>10.26</th>\n",
       "      <th>10.49</th>\n",
       "      <th>11.06</th>\n",
       "      <th>11.06.1</th>\n",
       "      <th>11.96</th>\n",
       "      <th>11.32</th>\n",
       "      <th>8.99</th>\n",
       "      <th>12.01</th>\n",
       "      <th>13.31</th>\n",
       "      <th>...</th>\n",
       "      <th>8.65</th>\n",
       "      <th>8.84.8</th>\n",
       "      <th>9.63.6</th>\n",
       "      <th>9.63.7</th>\n",
       "      <th>8.92.3</th>\n",
       "      <th>8.52.3</th>\n",
       "      <th>8.13.2</th>\n",
       "      <th>9.63.8</th>\n",
       "      <th>9.29.4</th>\n",
       "      <th>9.10.3</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>196102</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>196103</td>\n",
       "      <td>13.15</td>\n",
       "      <td>13.93</td>\n",
       "      <td>13.74</td>\n",
       "      <td>13.74</td>\n",
       "      <td>14.85</td>\n",
       "      <td>14.51</td>\n",
       "      <td>12.49</td>\n",
       "      <td>14.73</td>\n",
       "      <td>15.26</td>\n",
       "      <td>...</td>\n",
       "      <td>8.20</td>\n",
       "      <td>8.43</td>\n",
       "      <td>9.15</td>\n",
       "      <td>9.15</td>\n",
       "      <td>8.49</td>\n",
       "      <td>8.01</td>\n",
       "      <td>7.57</td>\n",
       "      <td>8.99</td>\n",
       "      <td>8.66</td>\n",
       "      <td>8.43</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>196104</td>\n",
       "      <td>15.57</td>\n",
       "      <td>16.59</td>\n",
       "      <td>16.35</td>\n",
       "      <td>16.35</td>\n",
       "      <td>17.90</td>\n",
       "      <td>17.40</td>\n",
       "      <td>15.04</td>\n",
       "      <td>17.39</td>\n",
       "      <td>18.29</td>\n",
       "      <td>...</td>\n",
       "      <td>10.03</td>\n",
       "      <td>10.28</td>\n",
       "      <td>11.09</td>\n",
       "      <td>11.09</td>\n",
       "      <td>10.45</td>\n",
       "      <td>9.95</td>\n",
       "      <td>9.34</td>\n",
       "      <td>10.31</td>\n",
       "      <td>10.07</td>\n",
       "      <td>9.89</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>196105</td>\n",
       "      <td>19.03</td>\n",
       "      <td>20.43</td>\n",
       "      <td>19.84</td>\n",
       "      <td>19.84</td>\n",
       "      <td>21.90</td>\n",
       "      <td>21.68</td>\n",
       "      <td>19.23</td>\n",
       "      <td>21.01</td>\n",
       "      <td>21.57</td>\n",
       "      <td>...</td>\n",
       "      <td>11.90</td>\n",
       "      <td>12.13</td>\n",
       "      <td>12.76</td>\n",
       "      <td>12.76</td>\n",
       "      <td>12.28</td>\n",
       "      <td>11.87</td>\n",
       "      <td>11.51</td>\n",
       "      <td>11.98</td>\n",
       "      <td>11.79</td>\n",
       "      <td>11.74</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>196106</td>\n",
       "      <td>24.28</td>\n",
       "      <td>26.15</td>\n",
       "      <td>25.31</td>\n",
       "      <td>25.31</td>\n",
       "      <td>28.28</td>\n",
       "      <td>27.82</td>\n",
       "      <td>25.09</td>\n",
       "      <td>26.43</td>\n",
       "      <td>28.12</td>\n",
       "      <td>...</td>\n",
       "      <td>14.93</td>\n",
       "      <td>15.23</td>\n",
       "      <td>16.09</td>\n",
       "      <td>16.09</td>\n",
       "      <td>15.42</td>\n",
       "      <td>14.96</td>\n",
       "      <td>14.45</td>\n",
       "      <td>14.48</td>\n",
       "      <td>14.35</td>\n",
       "      <td>14.31</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 1446 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   196101     10.26     10.49     11.06    11.06.1     11.96     11.32  \\\n",
       "0  196102       NaN       NaN       NaN        NaN       NaN       NaN   \n",
       "1  196103     13.15     13.93     13.74      13.74     14.85     14.51   \n",
       "2  196104     15.57     16.59     16.35      16.35     17.90     17.40   \n",
       "3  196105     19.03     20.43     19.84      19.84     21.90     21.68   \n",
       "4  196106     24.28     26.15     25.31      25.31     28.28     27.82   \n",
       "\n",
       "       8.99     12.01     13.31  ...      8.65     8.84.8     9.63.6  \\\n",
       "0       NaN       NaN       NaN  ...       NaN        NaN        NaN   \n",
       "1     12.49     14.73     15.26  ...      8.20       8.43       9.15   \n",
       "2     15.04     17.39     18.29  ...     10.03      10.28      11.09   \n",
       "3     19.23     21.01     21.57  ...     11.90      12.13      12.76   \n",
       "4     25.09     26.43     28.12  ...     14.93      15.23      16.09   \n",
       "\n",
       "      9.63.7     8.92.3     8.52.3     8.13.2     9.63.8     9.29.4     9.10.3  \n",
       "0        NaN        NaN        NaN        NaN        NaN        NaN        NaN  \n",
       "1       9.15       8.49       8.01       7.57       8.99       8.66       8.43  \n",
       "2      11.09      10.45       9.95       9.34      10.31      10.07       9.89  \n",
       "3      12.76      12.28      11.87      11.51      11.98      11.79      11.74  \n",
       "4      16.09      15.42      14.96      14.45      14.48      14.35      14.31  \n",
       "\n",
       "[5 rows x 1446 columns]"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1e87105a",
   "metadata": {},
   "source": [
    "Con esta operación borra las filas que tengan algun valor NaN"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "a3e74a08",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>196101</th>\n",
       "      <th>10.26</th>\n",
       "      <th>10.49</th>\n",
       "      <th>11.06</th>\n",
       "      <th>11.06.1</th>\n",
       "      <th>11.96</th>\n",
       "      <th>11.32</th>\n",
       "      <th>8.99</th>\n",
       "      <th>12.01</th>\n",
       "      <th>13.31</th>\n",
       "      <th>...</th>\n",
       "      <th>8.65</th>\n",
       "      <th>8.84.8</th>\n",
       "      <th>9.63.6</th>\n",
       "      <th>9.63.7</th>\n",
       "      <th>8.92.3</th>\n",
       "      <th>8.52.3</th>\n",
       "      <th>8.13.2</th>\n",
       "      <th>9.63.8</th>\n",
       "      <th>9.29.4</th>\n",
       "      <th>9.10.3</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>196102</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>196103</td>\n",
       "      <td>13.15</td>\n",
       "      <td>13.93</td>\n",
       "      <td>13.74</td>\n",
       "      <td>13.74</td>\n",
       "      <td>14.85</td>\n",
       "      <td>14.51</td>\n",
       "      <td>12.49</td>\n",
       "      <td>14.73</td>\n",
       "      <td>15.26</td>\n",
       "      <td>...</td>\n",
       "      <td>8.20</td>\n",
       "      <td>8.43</td>\n",
       "      <td>9.15</td>\n",
       "      <td>9.15</td>\n",
       "      <td>8.49</td>\n",
       "      <td>8.01</td>\n",
       "      <td>7.57</td>\n",
       "      <td>8.99</td>\n",
       "      <td>8.66</td>\n",
       "      <td>8.43</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>196104</td>\n",
       "      <td>15.57</td>\n",
       "      <td>16.59</td>\n",
       "      <td>16.35</td>\n",
       "      <td>16.35</td>\n",
       "      <td>17.90</td>\n",
       "      <td>17.40</td>\n",
       "      <td>15.04</td>\n",
       "      <td>17.39</td>\n",
       "      <td>18.29</td>\n",
       "      <td>...</td>\n",
       "      <td>10.03</td>\n",
       "      <td>10.28</td>\n",
       "      <td>11.09</td>\n",
       "      <td>11.09</td>\n",
       "      <td>10.45</td>\n",
       "      <td>9.95</td>\n",
       "      <td>9.34</td>\n",
       "      <td>10.31</td>\n",
       "      <td>10.07</td>\n",
       "      <td>9.89</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>196105</td>\n",
       "      <td>19.03</td>\n",
       "      <td>20.43</td>\n",
       "      <td>19.84</td>\n",
       "      <td>19.84</td>\n",
       "      <td>21.90</td>\n",
       "      <td>21.68</td>\n",
       "      <td>19.23</td>\n",
       "      <td>21.01</td>\n",
       "      <td>21.57</td>\n",
       "      <td>...</td>\n",
       "      <td>11.90</td>\n",
       "      <td>12.13</td>\n",
       "      <td>12.76</td>\n",
       "      <td>12.76</td>\n",
       "      <td>12.28</td>\n",
       "      <td>11.87</td>\n",
       "      <td>11.51</td>\n",
       "      <td>11.98</td>\n",
       "      <td>11.79</td>\n",
       "      <td>11.74</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>196106</td>\n",
       "      <td>24.28</td>\n",
       "      <td>26.15</td>\n",
       "      <td>25.31</td>\n",
       "      <td>25.31</td>\n",
       "      <td>28.28</td>\n",
       "      <td>27.82</td>\n",
       "      <td>25.09</td>\n",
       "      <td>26.43</td>\n",
       "      <td>28.12</td>\n",
       "      <td>...</td>\n",
       "      <td>14.93</td>\n",
       "      <td>15.23</td>\n",
       "      <td>16.09</td>\n",
       "      <td>16.09</td>\n",
       "      <td>15.42</td>\n",
       "      <td>14.96</td>\n",
       "      <td>14.45</td>\n",
       "      <td>14.48</td>\n",
       "      <td>14.35</td>\n",
       "      <td>14.31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>474</th>\n",
       "      <td>200008</td>\n",
       "      <td>29.63</td>\n",
       "      <td>31.05</td>\n",
       "      <td>31.02</td>\n",
       "      <td>31.02</td>\n",
       "      <td>33.83</td>\n",
       "      <td>32.63</td>\n",
       "      <td>29.66</td>\n",
       "      <td>32.65</td>\n",
       "      <td>34.83</td>\n",
       "      <td>...</td>\n",
       "      <td>19.29</td>\n",
       "      <td>19.55</td>\n",
       "      <td>20.16</td>\n",
       "      <td>20.16</td>\n",
       "      <td>19.83</td>\n",
       "      <td>19.49</td>\n",
       "      <td>19.15</td>\n",
       "      <td>18.93</td>\n",
       "      <td>18.83</td>\n",
       "      <td>18.79</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>475</th>\n",
       "      <td>200009</td>\n",
       "      <td>27.89</td>\n",
       "      <td>28.92</td>\n",
       "      <td>29.39</td>\n",
       "      <td>29.39</td>\n",
       "      <td>31.72</td>\n",
       "      <td>30.25</td>\n",
       "      <td>27.39</td>\n",
       "      <td>31.16</td>\n",
       "      <td>32.78</td>\n",
       "      <td>...</td>\n",
       "      <td>19.31</td>\n",
       "      <td>19.53</td>\n",
       "      <td>20.25</td>\n",
       "      <td>20.25</td>\n",
       "      <td>19.92</td>\n",
       "      <td>19.55</td>\n",
       "      <td>19.14</td>\n",
       "      <td>19.27</td>\n",
       "      <td>19.14</td>\n",
       "      <td>19.06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>476</th>\n",
       "      <td>200010</td>\n",
       "      <td>20.74</td>\n",
       "      <td>20.90</td>\n",
       "      <td>22.06</td>\n",
       "      <td>22.06</td>\n",
       "      <td>22.77</td>\n",
       "      <td>21.54</td>\n",
       "      <td>19.57</td>\n",
       "      <td>23.82</td>\n",
       "      <td>24.52</td>\n",
       "      <td>...</td>\n",
       "      <td>16.40</td>\n",
       "      <td>16.54</td>\n",
       "      <td>17.40</td>\n",
       "      <td>17.40</td>\n",
       "      <td>16.79</td>\n",
       "      <td>16.35</td>\n",
       "      <td>15.85</td>\n",
       "      <td>16.81</td>\n",
       "      <td>16.62</td>\n",
       "      <td>16.49</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>477</th>\n",
       "      <td>200011</td>\n",
       "      <td>16.66</td>\n",
       "      <td>16.91</td>\n",
       "      <td>16.96</td>\n",
       "      <td>16.96</td>\n",
       "      <td>17.48</td>\n",
       "      <td>16.99</td>\n",
       "      <td>15.48</td>\n",
       "      <td>17.43</td>\n",
       "      <td>17.68</td>\n",
       "      <td>...</td>\n",
       "      <td>12.95</td>\n",
       "      <td>13.09</td>\n",
       "      <td>13.87</td>\n",
       "      <td>13.87</td>\n",
       "      <td>13.30</td>\n",
       "      <td>12.91</td>\n",
       "      <td>12.54</td>\n",
       "      <td>13.84</td>\n",
       "      <td>13.52</td>\n",
       "      <td>13.35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>478</th>\n",
       "      <td>200012</td>\n",
       "      <td>13.56</td>\n",
       "      <td>14.06</td>\n",
       "      <td>13.92</td>\n",
       "      <td>13.92</td>\n",
       "      <td>14.86</td>\n",
       "      <td>14.51</td>\n",
       "      <td>12.43</td>\n",
       "      <td>14.48</td>\n",
       "      <td>15.20</td>\n",
       "      <td>...</td>\n",
       "      <td>11.87</td>\n",
       "      <td>12.00</td>\n",
       "      <td>12.68</td>\n",
       "      <td>12.68</td>\n",
       "      <td>12.01</td>\n",
       "      <td>11.64</td>\n",
       "      <td>11.32</td>\n",
       "      <td>12.67</td>\n",
       "      <td>12.39</td>\n",
       "      <td>12.26</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>479 rows × 1446 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     196101     10.26     10.49     11.06    11.06.1     11.96     11.32  \\\n",
       "0    196102       NaN       NaN       NaN        NaN       NaN       NaN   \n",
       "1    196103     13.15     13.93     13.74      13.74     14.85     14.51   \n",
       "2    196104     15.57     16.59     16.35      16.35     17.90     17.40   \n",
       "3    196105     19.03     20.43     19.84      19.84     21.90     21.68   \n",
       "4    196106     24.28     26.15     25.31      25.31     28.28     27.82   \n",
       "..      ...       ...       ...       ...        ...       ...       ...   \n",
       "474  200008     29.63     31.05     31.02      31.02     33.83     32.63   \n",
       "475  200009     27.89     28.92     29.39      29.39     31.72     30.25   \n",
       "476  200010     20.74     20.90     22.06      22.06     22.77     21.54   \n",
       "477  200011     16.66     16.91     16.96      16.96     17.48     16.99   \n",
       "478  200012     13.56     14.06     13.92      13.92     14.86     14.51   \n",
       "\n",
       "         8.99     12.01     13.31  ...      8.65     8.84.8     9.63.6  \\\n",
       "0         NaN       NaN       NaN  ...       NaN        NaN        NaN   \n",
       "1       12.49     14.73     15.26  ...      8.20       8.43       9.15   \n",
       "2       15.04     17.39     18.29  ...     10.03      10.28      11.09   \n",
       "3       19.23     21.01     21.57  ...     11.90      12.13      12.76   \n",
       "4       25.09     26.43     28.12  ...     14.93      15.23      16.09   \n",
       "..        ...       ...       ...  ...       ...        ...        ...   \n",
       "474     29.66     32.65     34.83  ...     19.29      19.55      20.16   \n",
       "475     27.39     31.16     32.78  ...     19.31      19.53      20.25   \n",
       "476     19.57     23.82     24.52  ...     16.40      16.54      17.40   \n",
       "477     15.48     17.43     17.68  ...     12.95      13.09      13.87   \n",
       "478     12.43     14.48     15.20  ...     11.87      12.00      12.68   \n",
       "\n",
       "        9.63.7     8.92.3     8.52.3     8.13.2     9.63.8     9.29.4  \\\n",
       "0          NaN        NaN        NaN        NaN        NaN        NaN   \n",
       "1         9.15       8.49       8.01       7.57       8.99       8.66   \n",
       "2        11.09      10.45       9.95       9.34      10.31      10.07   \n",
       "3        12.76      12.28      11.87      11.51      11.98      11.79   \n",
       "4        16.09      15.42      14.96      14.45      14.48      14.35   \n",
       "..         ...        ...        ...        ...        ...        ...   \n",
       "474      20.16      19.83      19.49      19.15      18.93      18.83   \n",
       "475      20.25      19.92      19.55      19.14      19.27      19.14   \n",
       "476      17.40      16.79      16.35      15.85      16.81      16.62   \n",
       "477      13.87      13.30      12.91      12.54      13.84      13.52   \n",
       "478      12.68      12.01      11.64      11.32      12.67      12.39   \n",
       "\n",
       "        9.10.3  \n",
       "0          NaN  \n",
       "1         8.43  \n",
       "2         9.89  \n",
       "3        11.74  \n",
       "4        14.31  \n",
       "..         ...  \n",
       "474      18.79  \n",
       "475      19.06  \n",
       "476      16.49  \n",
       "477      13.35  \n",
       "478      12.26  \n",
       "\n",
       "[479 rows x 1446 columns]"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.dropna(axis=0,how=\"all\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e55158d0",
   "metadata": {},
   "source": [
    "Con esta operación borra las filas que tengan algun valor NaN, aunque ahora tampoco me sale"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "b4d3a0dd",
   "metadata": {},
   "outputs": [],
   "source": [
    "datax=data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "944993ef",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>196101</th>\n",
       "      <th>10.26</th>\n",
       "      <th>10.49</th>\n",
       "      <th>11.06</th>\n",
       "      <th>11.06.1</th>\n",
       "      <th>11.96</th>\n",
       "      <th>11.32</th>\n",
       "      <th>8.99</th>\n",
       "      <th>12.01</th>\n",
       "      <th>13.31</th>\n",
       "      <th>...</th>\n",
       "      <th>8.65</th>\n",
       "      <th>8.84.8</th>\n",
       "      <th>9.63.6</th>\n",
       "      <th>9.63.7</th>\n",
       "      <th>8.92.3</th>\n",
       "      <th>8.52.3</th>\n",
       "      <th>8.13.2</th>\n",
       "      <th>9.63.8</th>\n",
       "      <th>9.29.4</th>\n",
       "      <th>9.10.3</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>196102</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>196103</td>\n",
       "      <td>13.15</td>\n",
       "      <td>13.93</td>\n",
       "      <td>13.74</td>\n",
       "      <td>13.74</td>\n",
       "      <td>14.85</td>\n",
       "      <td>14.51</td>\n",
       "      <td>12.49</td>\n",
       "      <td>14.73</td>\n",
       "      <td>15.26</td>\n",
       "      <td>...</td>\n",
       "      <td>8.20</td>\n",
       "      <td>8.43</td>\n",
       "      <td>9.15</td>\n",
       "      <td>9.15</td>\n",
       "      <td>8.49</td>\n",
       "      <td>8.01</td>\n",
       "      <td>7.57</td>\n",
       "      <td>8.99</td>\n",
       "      <td>8.66</td>\n",
       "      <td>8.43</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>196104</td>\n",
       "      <td>15.57</td>\n",
       "      <td>16.59</td>\n",
       "      <td>16.35</td>\n",
       "      <td>16.35</td>\n",
       "      <td>17.90</td>\n",
       "      <td>17.40</td>\n",
       "      <td>15.04</td>\n",
       "      <td>17.39</td>\n",
       "      <td>18.29</td>\n",
       "      <td>...</td>\n",
       "      <td>10.03</td>\n",
       "      <td>10.28</td>\n",
       "      <td>11.09</td>\n",
       "      <td>11.09</td>\n",
       "      <td>10.45</td>\n",
       "      <td>9.95</td>\n",
       "      <td>9.34</td>\n",
       "      <td>10.31</td>\n",
       "      <td>10.07</td>\n",
       "      <td>9.89</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>196105</td>\n",
       "      <td>19.03</td>\n",
       "      <td>20.43</td>\n",
       "      <td>19.84</td>\n",
       "      <td>19.84</td>\n",
       "      <td>21.90</td>\n",
       "      <td>21.68</td>\n",
       "      <td>19.23</td>\n",
       "      <td>21.01</td>\n",
       "      <td>21.57</td>\n",
       "      <td>...</td>\n",
       "      <td>11.90</td>\n",
       "      <td>12.13</td>\n",
       "      <td>12.76</td>\n",
       "      <td>12.76</td>\n",
       "      <td>12.28</td>\n",
       "      <td>11.87</td>\n",
       "      <td>11.51</td>\n",
       "      <td>11.98</td>\n",
       "      <td>11.79</td>\n",
       "      <td>11.74</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>196106</td>\n",
       "      <td>24.28</td>\n",
       "      <td>26.15</td>\n",
       "      <td>25.31</td>\n",
       "      <td>25.31</td>\n",
       "      <td>28.28</td>\n",
       "      <td>27.82</td>\n",
       "      <td>25.09</td>\n",
       "      <td>26.43</td>\n",
       "      <td>28.12</td>\n",
       "      <td>...</td>\n",
       "      <td>14.93</td>\n",
       "      <td>15.23</td>\n",
       "      <td>16.09</td>\n",
       "      <td>16.09</td>\n",
       "      <td>15.42</td>\n",
       "      <td>14.96</td>\n",
       "      <td>14.45</td>\n",
       "      <td>14.48</td>\n",
       "      <td>14.35</td>\n",
       "      <td>14.31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>474</th>\n",
       "      <td>200008</td>\n",
       "      <td>29.63</td>\n",
       "      <td>31.05</td>\n",
       "      <td>31.02</td>\n",
       "      <td>31.02</td>\n",
       "      <td>33.83</td>\n",
       "      <td>32.63</td>\n",
       "      <td>29.66</td>\n",
       "      <td>32.65</td>\n",
       "      <td>34.83</td>\n",
       "      <td>...</td>\n",
       "      <td>19.29</td>\n",
       "      <td>19.55</td>\n",
       "      <td>20.16</td>\n",
       "      <td>20.16</td>\n",
       "      <td>19.83</td>\n",
       "      <td>19.49</td>\n",
       "      <td>19.15</td>\n",
       "      <td>18.93</td>\n",
       "      <td>18.83</td>\n",
       "      <td>18.79</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>475</th>\n",
       "      <td>200009</td>\n",
       "      <td>27.89</td>\n",
       "      <td>28.92</td>\n",
       "      <td>29.39</td>\n",
       "      <td>29.39</td>\n",
       "      <td>31.72</td>\n",
       "      <td>30.25</td>\n",
       "      <td>27.39</td>\n",
       "      <td>31.16</td>\n",
       "      <td>32.78</td>\n",
       "      <td>...</td>\n",
       "      <td>19.31</td>\n",
       "      <td>19.53</td>\n",
       "      <td>20.25</td>\n",
       "      <td>20.25</td>\n",
       "      <td>19.92</td>\n",
       "      <td>19.55</td>\n",
       "      <td>19.14</td>\n",
       "      <td>19.27</td>\n",
       "      <td>19.14</td>\n",
       "      <td>19.06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>476</th>\n",
       "      <td>200010</td>\n",
       "      <td>20.74</td>\n",
       "      <td>20.90</td>\n",
       "      <td>22.06</td>\n",
       "      <td>22.06</td>\n",
       "      <td>22.77</td>\n",
       "      <td>21.54</td>\n",
       "      <td>19.57</td>\n",
       "      <td>23.82</td>\n",
       "      <td>24.52</td>\n",
       "      <td>...</td>\n",
       "      <td>16.40</td>\n",
       "      <td>16.54</td>\n",
       "      <td>17.40</td>\n",
       "      <td>17.40</td>\n",
       "      <td>16.79</td>\n",
       "      <td>16.35</td>\n",
       "      <td>15.85</td>\n",
       "      <td>16.81</td>\n",
       "      <td>16.62</td>\n",
       "      <td>16.49</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>477</th>\n",
       "      <td>200011</td>\n",
       "      <td>16.66</td>\n",
       "      <td>16.91</td>\n",
       "      <td>16.96</td>\n",
       "      <td>16.96</td>\n",
       "      <td>17.48</td>\n",
       "      <td>16.99</td>\n",
       "      <td>15.48</td>\n",
       "      <td>17.43</td>\n",
       "      <td>17.68</td>\n",
       "      <td>...</td>\n",
       "      <td>12.95</td>\n",
       "      <td>13.09</td>\n",
       "      <td>13.87</td>\n",
       "      <td>13.87</td>\n",
       "      <td>13.30</td>\n",
       "      <td>12.91</td>\n",
       "      <td>12.54</td>\n",
       "      <td>13.84</td>\n",
       "      <td>13.52</td>\n",
       "      <td>13.35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>478</th>\n",
       "      <td>200012</td>\n",
       "      <td>13.56</td>\n",
       "      <td>14.06</td>\n",
       "      <td>13.92</td>\n",
       "      <td>13.92</td>\n",
       "      <td>14.86</td>\n",
       "      <td>14.51</td>\n",
       "      <td>12.43</td>\n",
       "      <td>14.48</td>\n",
       "      <td>15.20</td>\n",
       "      <td>...</td>\n",
       "      <td>11.87</td>\n",
       "      <td>12.00</td>\n",
       "      <td>12.68</td>\n",
       "      <td>12.68</td>\n",
       "      <td>12.01</td>\n",
       "      <td>11.64</td>\n",
       "      <td>11.32</td>\n",
       "      <td>12.67</td>\n",
       "      <td>12.39</td>\n",
       "      <td>12.26</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>479 rows × 1446 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     196101     10.26     10.49     11.06    11.06.1     11.96     11.32  \\\n",
       "0    196102       NaN       NaN       NaN        NaN       NaN       NaN   \n",
       "1    196103     13.15     13.93     13.74      13.74     14.85     14.51   \n",
       "2    196104     15.57     16.59     16.35      16.35     17.90     17.40   \n",
       "3    196105     19.03     20.43     19.84      19.84     21.90     21.68   \n",
       "4    196106     24.28     26.15     25.31      25.31     28.28     27.82   \n",
       "..      ...       ...       ...       ...        ...       ...       ...   \n",
       "474  200008     29.63     31.05     31.02      31.02     33.83     32.63   \n",
       "475  200009     27.89     28.92     29.39      29.39     31.72     30.25   \n",
       "476  200010     20.74     20.90     22.06      22.06     22.77     21.54   \n",
       "477  200011     16.66     16.91     16.96      16.96     17.48     16.99   \n",
       "478  200012     13.56     14.06     13.92      13.92     14.86     14.51   \n",
       "\n",
       "         8.99     12.01     13.31  ...      8.65     8.84.8     9.63.6  \\\n",
       "0         NaN       NaN       NaN  ...       NaN        NaN        NaN   \n",
       "1       12.49     14.73     15.26  ...      8.20       8.43       9.15   \n",
       "2       15.04     17.39     18.29  ...     10.03      10.28      11.09   \n",
       "3       19.23     21.01     21.57  ...     11.90      12.13      12.76   \n",
       "4       25.09     26.43     28.12  ...     14.93      15.23      16.09   \n",
       "..        ...       ...       ...  ...       ...        ...        ...   \n",
       "474     29.66     32.65     34.83  ...     19.29      19.55      20.16   \n",
       "475     27.39     31.16     32.78  ...     19.31      19.53      20.25   \n",
       "476     19.57     23.82     24.52  ...     16.40      16.54      17.40   \n",
       "477     15.48     17.43     17.68  ...     12.95      13.09      13.87   \n",
       "478     12.43     14.48     15.20  ...     11.87      12.00      12.68   \n",
       "\n",
       "        9.63.7     8.92.3     8.52.3     8.13.2     9.63.8     9.29.4  \\\n",
       "0          NaN        NaN        NaN        NaN        NaN        NaN   \n",
       "1         9.15       8.49       8.01       7.57       8.99       8.66   \n",
       "2        11.09      10.45       9.95       9.34      10.31      10.07   \n",
       "3        12.76      12.28      11.87      11.51      11.98      11.79   \n",
       "4        16.09      15.42      14.96      14.45      14.48      14.35   \n",
       "..         ...        ...        ...        ...        ...        ...   \n",
       "474      20.16      19.83      19.49      19.15      18.93      18.83   \n",
       "475      20.25      19.92      19.55      19.14      19.27      19.14   \n",
       "476      17.40      16.79      16.35      15.85      16.81      16.62   \n",
       "477      13.87      13.30      12.91      12.54      13.84      13.52   \n",
       "478      12.68      12.01      11.64      11.32      12.67      12.39   \n",
       "\n",
       "        9.10.3  \n",
       "0          NaN  \n",
       "1         8.43  \n",
       "2         9.89  \n",
       "3        11.74  \n",
       "4        14.31  \n",
       "..         ...  \n",
       "474      18.79  \n",
       "475      19.06  \n",
       "476      16.49  \n",
       "477      13.35  \n",
       "478      12.26  \n",
       "\n",
       "[479 rows x 1446 columns]"
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "datax.dropna(axis=0,how=\"any\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "378341f4",
   "metadata": {},
   "source": [
    "# HISTÓRICO TEMPERATURAS MÁXIMAS EN ESPAÑA"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "889a2cbd",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "3b1a6682",
   "metadata": {},
   "outputs": [],
   "source": [
    "data1=pd.read_csv(\"../Dataset/TXMM_RCA_ECHAM5_20C3M_196101_200012 original.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "1e6083ab",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>FECHA</th>\n",
       "      <th>500</th>\n",
       "      <th>501</th>\n",
       "      <th>502</th>\n",
       "      <th>503</th>\n",
       "      <th>504</th>\n",
       "      <th>505</th>\n",
       "      <th>506</th>\n",
       "      <th>507</th>\n",
       "      <th>508</th>\n",
       "      <th>...</th>\n",
       "      <th>1935</th>\n",
       "      <th>1936</th>\n",
       "      <th>1937</th>\n",
       "      <th>1938</th>\n",
       "      <th>1939</th>\n",
       "      <th>1940</th>\n",
       "      <th>1941</th>\n",
       "      <th>1942</th>\n",
       "      <th>1943</th>\n",
       "      <th>1944</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>196101</td>\n",
       "      <td>16.08</td>\n",
       "      <td>16.33</td>\n",
       "      <td>16.08</td>\n",
       "      <td>16.08</td>\n",
       "      <td>16.22</td>\n",
       "      <td>16.12</td>\n",
       "      <td>16.01</td>\n",
       "      <td>16.36</td>\n",
       "      <td>16.50</td>\n",
       "      <td>...</td>\n",
       "      <td>11.79</td>\n",
       "      <td>11.79</td>\n",
       "      <td>12.54</td>\n",
       "      <td>12.54</td>\n",
       "      <td>11.36</td>\n",
       "      <td>10.84</td>\n",
       "      <td>10.26</td>\n",
       "      <td>13.19</td>\n",
       "      <td>13.00</td>\n",
       "      <td>12.98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>196102</td>\n",
       "      <td>15.29</td>\n",
       "      <td>15.45</td>\n",
       "      <td>15.56</td>\n",
       "      <td>15.56</td>\n",
       "      <td>15.56</td>\n",
       "      <td>15.31</td>\n",
       "      <td>14.84</td>\n",
       "      <td>16.13</td>\n",
       "      <td>16.09</td>\n",
       "      <td>...</td>\n",
       "      <td>10.76</td>\n",
       "      <td>10.70</td>\n",
       "      <td>11.37</td>\n",
       "      <td>11.37</td>\n",
       "      <td>10.34</td>\n",
       "      <td>9.81</td>\n",
       "      <td>9.34</td>\n",
       "      <td>12.40</td>\n",
       "      <td>12.23</td>\n",
       "      <td>12.13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>196103</td>\n",
       "      <td>15.88</td>\n",
       "      <td>16.35</td>\n",
       "      <td>16.64</td>\n",
       "      <td>16.64</td>\n",
       "      <td>17.47</td>\n",
       "      <td>17.03</td>\n",
       "      <td>15.89</td>\n",
       "      <td>17.33</td>\n",
       "      <td>18.14</td>\n",
       "      <td>...</td>\n",
       "      <td>11.03</td>\n",
       "      <td>11.03</td>\n",
       "      <td>11.69</td>\n",
       "      <td>11.69</td>\n",
       "      <td>10.63</td>\n",
       "      <td>9.96</td>\n",
       "      <td>9.35</td>\n",
       "      <td>12.55</td>\n",
       "      <td>12.35</td>\n",
       "      <td>12.18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>196104</td>\n",
       "      <td>16.13</td>\n",
       "      <td>17.15</td>\n",
       "      <td>16.57</td>\n",
       "      <td>16.57</td>\n",
       "      <td>17.96</td>\n",
       "      <td>17.82</td>\n",
       "      <td>16.24</td>\n",
       "      <td>17.27</td>\n",
       "      <td>17.71</td>\n",
       "      <td>...</td>\n",
       "      <td>11.55</td>\n",
       "      <td>11.71</td>\n",
       "      <td>12.47</td>\n",
       "      <td>12.47</td>\n",
       "      <td>11.16</td>\n",
       "      <td>10.46</td>\n",
       "      <td>9.68</td>\n",
       "      <td>12.65</td>\n",
       "      <td>12.36</td>\n",
       "      <td>12.30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>196105</td>\n",
       "      <td>18.68</td>\n",
       "      <td>20.01</td>\n",
       "      <td>20.31</td>\n",
       "      <td>20.31</td>\n",
       "      <td>23.24</td>\n",
       "      <td>22.28</td>\n",
       "      <td>18.15</td>\n",
       "      <td>22.17</td>\n",
       "      <td>23.90</td>\n",
       "      <td>...</td>\n",
       "      <td>13.10</td>\n",
       "      <td>13.18</td>\n",
       "      <td>14.29</td>\n",
       "      <td>14.29</td>\n",
       "      <td>12.56</td>\n",
       "      <td>11.63</td>\n",
       "      <td>10.63</td>\n",
       "      <td>14.28</td>\n",
       "      <td>14.13</td>\n",
       "      <td>14.06</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 1446 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    FECHA    500    501    502    503    504    505    506    507    508  ...  \\\n",
       "0  196101  16.08  16.33  16.08  16.08  16.22  16.12  16.01  16.36  16.50  ...   \n",
       "1  196102  15.29  15.45  15.56  15.56  15.56  15.31  14.84  16.13  16.09  ...   \n",
       "2  196103  15.88  16.35  16.64  16.64  17.47  17.03  15.89  17.33  18.14  ...   \n",
       "3  196104  16.13  17.15  16.57  16.57  17.96  17.82  16.24  17.27  17.71  ...   \n",
       "4  196105  18.68  20.01  20.31  20.31  23.24  22.28  18.15  22.17  23.90  ...   \n",
       "\n",
       "    1935   1936   1937   1938   1939   1940   1941   1942   1943   1944  \n",
       "0  11.79  11.79  12.54  12.54  11.36  10.84  10.26  13.19  13.00  12.98  \n",
       "1  10.76  10.70  11.37  11.37  10.34   9.81   9.34  12.40  12.23  12.13  \n",
       "2  11.03  11.03  11.69  11.69  10.63   9.96   9.35  12.55  12.35  12.18  \n",
       "3  11.55  11.71  12.47  12.47  11.16  10.46   9.68  12.65  12.36  12.30  \n",
       "4  13.10  13.18  14.29  14.29  12.56  11.63  10.63  14.28  14.13  14.06  \n",
       "\n",
       "[5 rows x 1446 columns]"
      ]
     },
     "execution_count": 62,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data1.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "1b24337a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(480, 1446)"
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data1.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "9bd8a383",
   "metadata": {},
   "outputs": [],
   "source": [
    "data10=data1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "962e8dcd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>FECHA</th>\n",
       "      <th>500</th>\n",
       "      <th>501</th>\n",
       "      <th>502</th>\n",
       "      <th>503</th>\n",
       "      <th>504</th>\n",
       "      <th>505</th>\n",
       "      <th>506</th>\n",
       "      <th>507</th>\n",
       "      <th>508</th>\n",
       "      <th>...</th>\n",
       "      <th>1935</th>\n",
       "      <th>1936</th>\n",
       "      <th>1937</th>\n",
       "      <th>1938</th>\n",
       "      <th>1939</th>\n",
       "      <th>1940</th>\n",
       "      <th>1941</th>\n",
       "      <th>1942</th>\n",
       "      <th>1943</th>\n",
       "      <th>1944</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>475</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>476</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>477</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>478</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>479</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>480 rows × 1446 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     FECHA    500    501    502    503    504    505    506    507    508  \\\n",
       "0    False  False  False  False  False  False  False  False  False  False   \n",
       "1    False  False  False  False  False  False  False  False  False  False   \n",
       "2    False  False  False  False  False  False  False  False  False  False   \n",
       "3    False  False  False  False  False  False  False  False  False  False   \n",
       "4    False  False  False  False  False  False  False  False  False  False   \n",
       "..     ...    ...    ...    ...    ...    ...    ...    ...    ...    ...   \n",
       "475  False  False  False  False  False  False  False  False  False  False   \n",
       "476  False  False  False  False  False  False  False  False  False  False   \n",
       "477  False  False  False  False  False  False  False  False  False  False   \n",
       "478  False  False  False  False  False  False  False  False  False  False   \n",
       "479  False  False  False  False  False  False  False  False  False  False   \n",
       "\n",
       "     ...   1935   1936   1937   1938   1939   1940   1941   1942   1943   1944  \n",
       "0    ...  False  False  False  False  False  False  False  False  False  False  \n",
       "1    ...  False  False  False  False  False  False  False  False  False  False  \n",
       "2    ...  False  False  False  False  False  False  False  False  False  False  \n",
       "3    ...  False  False  False  False  False  False  False  False  False  False  \n",
       "4    ...  False  False  False  False  False  False  False  False  False  False  \n",
       "..   ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...  \n",
       "475  ...  False  False  False  False  False  False  False  False  False  False  \n",
       "476  ...  False  False  False  False  False  False  False  False  False  False  \n",
       "477  ...  False  False  False  False  False  False  False  False  False  False  \n",
       "478  ...  False  False  False  False  False  False  False  False  False  False  \n",
       "479  ...  False  False  False  False  False  False  False  False  False  False  \n",
       "\n",
       "[480 rows x 1446 columns]"
      ]
     },
     "execution_count": 65,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.isnull(data10)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "03d80446",
   "metadata": {},
   "source": [
    "# Plots y visualización de los datos"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "578ac786",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "id": "60e27221",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>FECHA</th>\n",
       "      <th>500</th>\n",
       "      <th>501</th>\n",
       "      <th>502</th>\n",
       "      <th>503</th>\n",
       "      <th>504</th>\n",
       "      <th>505</th>\n",
       "      <th>506</th>\n",
       "      <th>507</th>\n",
       "      <th>508</th>\n",
       "      <th>...</th>\n",
       "      <th>1935</th>\n",
       "      <th>1936</th>\n",
       "      <th>1937</th>\n",
       "      <th>1938</th>\n",
       "      <th>1939</th>\n",
       "      <th>1940</th>\n",
       "      <th>1941</th>\n",
       "      <th>1942</th>\n",
       "      <th>1943</th>\n",
       "      <th>1944</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>196101</td>\n",
       "      <td>16.08</td>\n",
       "      <td>16.33</td>\n",
       "      <td>16.08</td>\n",
       "      <td>16.08</td>\n",
       "      <td>16.22</td>\n",
       "      <td>16.12</td>\n",
       "      <td>16.01</td>\n",
       "      <td>16.36</td>\n",
       "      <td>16.50</td>\n",
       "      <td>...</td>\n",
       "      <td>11.79</td>\n",
       "      <td>11.79</td>\n",
       "      <td>12.54</td>\n",
       "      <td>12.54</td>\n",
       "      <td>11.36</td>\n",
       "      <td>10.84</td>\n",
       "      <td>10.26</td>\n",
       "      <td>13.19</td>\n",
       "      <td>13.00</td>\n",
       "      <td>12.98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>196102</td>\n",
       "      <td>15.29</td>\n",
       "      <td>15.45</td>\n",
       "      <td>15.56</td>\n",
       "      <td>15.56</td>\n",
       "      <td>15.56</td>\n",
       "      <td>15.31</td>\n",
       "      <td>14.84</td>\n",
       "      <td>16.13</td>\n",
       "      <td>16.09</td>\n",
       "      <td>...</td>\n",
       "      <td>10.76</td>\n",
       "      <td>10.70</td>\n",
       "      <td>11.37</td>\n",
       "      <td>11.37</td>\n",
       "      <td>10.34</td>\n",
       "      <td>9.81</td>\n",
       "      <td>9.34</td>\n",
       "      <td>12.40</td>\n",
       "      <td>12.23</td>\n",
       "      <td>12.13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>196103</td>\n",
       "      <td>15.88</td>\n",
       "      <td>16.35</td>\n",
       "      <td>16.64</td>\n",
       "      <td>16.64</td>\n",
       "      <td>17.47</td>\n",
       "      <td>17.03</td>\n",
       "      <td>15.89</td>\n",
       "      <td>17.33</td>\n",
       "      <td>18.14</td>\n",
       "      <td>...</td>\n",
       "      <td>11.03</td>\n",
       "      <td>11.03</td>\n",
       "      <td>11.69</td>\n",
       "      <td>11.69</td>\n",
       "      <td>10.63</td>\n",
       "      <td>9.96</td>\n",
       "      <td>9.35</td>\n",
       "      <td>12.55</td>\n",
       "      <td>12.35</td>\n",
       "      <td>12.18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>196104</td>\n",
       "      <td>16.13</td>\n",
       "      <td>17.15</td>\n",
       "      <td>16.57</td>\n",
       "      <td>16.57</td>\n",
       "      <td>17.96</td>\n",
       "      <td>17.82</td>\n",
       "      <td>16.24</td>\n",
       "      <td>17.27</td>\n",
       "      <td>17.71</td>\n",
       "      <td>...</td>\n",
       "      <td>11.55</td>\n",
       "      <td>11.71</td>\n",
       "      <td>12.47</td>\n",
       "      <td>12.47</td>\n",
       "      <td>11.16</td>\n",
       "      <td>10.46</td>\n",
       "      <td>9.68</td>\n",
       "      <td>12.65</td>\n",
       "      <td>12.36</td>\n",
       "      <td>12.30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>196105</td>\n",
       "      <td>18.68</td>\n",
       "      <td>20.01</td>\n",
       "      <td>20.31</td>\n",
       "      <td>20.31</td>\n",
       "      <td>23.24</td>\n",
       "      <td>22.28</td>\n",
       "      <td>18.15</td>\n",
       "      <td>22.17</td>\n",
       "      <td>23.90</td>\n",
       "      <td>...</td>\n",
       "      <td>13.10</td>\n",
       "      <td>13.18</td>\n",
       "      <td>14.29</td>\n",
       "      <td>14.29</td>\n",
       "      <td>12.56</td>\n",
       "      <td>11.63</td>\n",
       "      <td>10.63</td>\n",
       "      <td>14.28</td>\n",
       "      <td>14.13</td>\n",
       "      <td>14.06</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 1446 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    FECHA    500    501    502    503    504    505    506    507    508  ...  \\\n",
       "0  196101  16.08  16.33  16.08  16.08  16.22  16.12  16.01  16.36  16.50  ...   \n",
       "1  196102  15.29  15.45  15.56  15.56  15.56  15.31  14.84  16.13  16.09  ...   \n",
       "2  196103  15.88  16.35  16.64  16.64  17.47  17.03  15.89  17.33  18.14  ...   \n",
       "3  196104  16.13  17.15  16.57  16.57  17.96  17.82  16.24  17.27  17.71  ...   \n",
       "4  196105  18.68  20.01  20.31  20.31  23.24  22.28  18.15  22.17  23.90  ...   \n",
       "\n",
       "    1935   1936   1937   1938   1939   1940   1941   1942   1943   1944  \n",
       "0  11.79  11.79  12.54  12.54  11.36  10.84  10.26  13.19  13.00  12.98  \n",
       "1  10.76  10.70  11.37  11.37  10.34   9.81   9.34  12.40  12.23  12.13  \n",
       "2  11.03  11.03  11.69  11.69  10.63   9.96   9.35  12.55  12.35  12.18  \n",
       "3  11.55  11.71  12.47  12.47  11.16  10.46   9.68  12.65  12.36  12.30  \n",
       "4  13.10  13.18  14.29  14.29  12.56  11.63  10.63  14.28  14.13  14.06  \n",
       "\n",
       "[5 rows x 1446 columns]"
      ]
     },
     "execution_count": 68,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data1.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "id": "1743ebf1",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "UsageError: Line magic function `%` not found.\n"
     ]
    }
   ],
   "source": [
    "% matplotlib inline\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e32935d6",
   "metadata": {},
   "source": [
    "Así se consigue que los gráficos queden alineados en una celda"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "410dd7d8",
   "metadata": {},
   "source": [
    "savefig(\"directorio donde quiero guardar la imagen.jpg) Se pueden salvar las imágenes generadas"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "id": "c4b93855",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>FECHA</th>\n",
       "      <th>500</th>\n",
       "      <th>501</th>\n",
       "      <th>502</th>\n",
       "      <th>503</th>\n",
       "      <th>504</th>\n",
       "      <th>505</th>\n",
       "      <th>506</th>\n",
       "      <th>507</th>\n",
       "      <th>508</th>\n",
       "      <th>...</th>\n",
       "      <th>1935</th>\n",
       "      <th>1936</th>\n",
       "      <th>1937</th>\n",
       "      <th>1938</th>\n",
       "      <th>1939</th>\n",
       "      <th>1940</th>\n",
       "      <th>1941</th>\n",
       "      <th>1942</th>\n",
       "      <th>1943</th>\n",
       "      <th>1944</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>196101</td>\n",
       "      <td>16.08</td>\n",
       "      <td>16.33</td>\n",
       "      <td>16.08</td>\n",
       "      <td>16.08</td>\n",
       "      <td>16.22</td>\n",
       "      <td>16.12</td>\n",
       "      <td>16.01</td>\n",
       "      <td>16.36</td>\n",
       "      <td>16.50</td>\n",
       "      <td>...</td>\n",
       "      <td>11.79</td>\n",
       "      <td>11.79</td>\n",
       "      <td>12.54</td>\n",
       "      <td>12.54</td>\n",
       "      <td>11.36</td>\n",
       "      <td>10.84</td>\n",
       "      <td>10.26</td>\n",
       "      <td>13.19</td>\n",
       "      <td>13.00</td>\n",
       "      <td>12.98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>196102</td>\n",
       "      <td>15.29</td>\n",
       "      <td>15.45</td>\n",
       "      <td>15.56</td>\n",
       "      <td>15.56</td>\n",
       "      <td>15.56</td>\n",
       "      <td>15.31</td>\n",
       "      <td>14.84</td>\n",
       "      <td>16.13</td>\n",
       "      <td>16.09</td>\n",
       "      <td>...</td>\n",
       "      <td>10.76</td>\n",
       "      <td>10.70</td>\n",
       "      <td>11.37</td>\n",
       "      <td>11.37</td>\n",
       "      <td>10.34</td>\n",
       "      <td>9.81</td>\n",
       "      <td>9.34</td>\n",
       "      <td>12.40</td>\n",
       "      <td>12.23</td>\n",
       "      <td>12.13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>196103</td>\n",
       "      <td>15.88</td>\n",
       "      <td>16.35</td>\n",
       "      <td>16.64</td>\n",
       "      <td>16.64</td>\n",
       "      <td>17.47</td>\n",
       "      <td>17.03</td>\n",
       "      <td>15.89</td>\n",
       "      <td>17.33</td>\n",
       "      <td>18.14</td>\n",
       "      <td>...</td>\n",
       "      <td>11.03</td>\n",
       "      <td>11.03</td>\n",
       "      <td>11.69</td>\n",
       "      <td>11.69</td>\n",
       "      <td>10.63</td>\n",
       "      <td>9.96</td>\n",
       "      <td>9.35</td>\n",
       "      <td>12.55</td>\n",
       "      <td>12.35</td>\n",
       "      <td>12.18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>196104</td>\n",
       "      <td>16.13</td>\n",
       "      <td>17.15</td>\n",
       "      <td>16.57</td>\n",
       "      <td>16.57</td>\n",
       "      <td>17.96</td>\n",
       "      <td>17.82</td>\n",
       "      <td>16.24</td>\n",
       "      <td>17.27</td>\n",
       "      <td>17.71</td>\n",
       "      <td>...</td>\n",
       "      <td>11.55</td>\n",
       "      <td>11.71</td>\n",
       "      <td>12.47</td>\n",
       "      <td>12.47</td>\n",
       "      <td>11.16</td>\n",
       "      <td>10.46</td>\n",
       "      <td>9.68</td>\n",
       "      <td>12.65</td>\n",
       "      <td>12.36</td>\n",
       "      <td>12.30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>196105</td>\n",
       "      <td>18.68</td>\n",
       "      <td>20.01</td>\n",
       "      <td>20.31</td>\n",
       "      <td>20.31</td>\n",
       "      <td>23.24</td>\n",
       "      <td>22.28</td>\n",
       "      <td>18.15</td>\n",
       "      <td>22.17</td>\n",
       "      <td>23.90</td>\n",
       "      <td>...</td>\n",
       "      <td>13.10</td>\n",
       "      <td>13.18</td>\n",
       "      <td>14.29</td>\n",
       "      <td>14.29</td>\n",
       "      <td>12.56</td>\n",
       "      <td>11.63</td>\n",
       "      <td>10.63</td>\n",
       "      <td>14.28</td>\n",
       "      <td>14.13</td>\n",
       "      <td>14.06</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 1446 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    FECHA    500    501    502    503    504    505    506    507    508  ...  \\\n",
       "0  196101  16.08  16.33  16.08  16.08  16.22  16.12  16.01  16.36  16.50  ...   \n",
       "1  196102  15.29  15.45  15.56  15.56  15.56  15.31  14.84  16.13  16.09  ...   \n",
       "2  196103  15.88  16.35  16.64  16.64  17.47  17.03  15.89  17.33  18.14  ...   \n",
       "3  196104  16.13  17.15  16.57  16.57  17.96  17.82  16.24  17.27  17.71  ...   \n",
       "4  196105  18.68  20.01  20.31  20.31  23.24  22.28  18.15  22.17  23.90  ...   \n",
       "\n",
       "    1935   1936   1937   1938   1939   1940   1941   1942   1943   1944  \n",
       "0  11.79  11.79  12.54  12.54  11.36  10.84  10.26  13.19  13.00  12.98  \n",
       "1  10.76  10.70  11.37  11.37  10.34   9.81   9.34  12.40  12.23  12.13  \n",
       "2  11.03  11.03  11.69  11.69  10.63   9.96   9.35  12.55  12.35  12.18  \n",
       "3  11.55  11.71  12.47  12.47  11.16  10.46   9.68  12.65  12.36  12.30  \n",
       "4  13.10  13.18  14.29  14.29  12.56  11.63  10.63  14.28  14.13  14.06  \n",
       "\n",
       "[5 rows x 1446 columns]"
      ]
     },
     "execution_count": 91,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data1.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e8fd9f38",
   "metadata": {},
   "source": [
    "## Scatterplot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "id": "40b300bc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='500', ylabel='1000'>"
      ]
     },
     "execution_count": 85,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "data1.plot(kind=\"scatter\", x=\"500\", y=\"1000\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "id": "c3adee1d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='500', ylabel='600'>"
      ]
     },
     "execution_count": 86,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "data1.plot(kind=\"scatter\", x=\"500\", y=\"600\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d4c19ac8",
   "metadata": {},
   "source": [
    "## Histograma"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "id": "bb14548e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([40., 97., 64., 51., 27., 28., 44., 29., 73., 25.]),\n",
       " array([13.35 , 14.689, 16.028, 17.367, 18.706, 20.045, 21.384, 22.723,\n",
       "        24.062, 25.401, 26.74 ]),\n",
       " <BarContainer object of 10 artists>)"
      ]
     },
     "execution_count": 87,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist(data1[\"500\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "id": "3b594f0b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([47., 98., 60., 45., 42., 32., 34., 47., 53., 20.]),\n",
       " array([ 8.08 , 10.841, 13.602, 16.363, 19.124, 21.885, 24.646, 27.407,\n",
       "        30.168, 32.929, 35.69 ]),\n",
       " <BarContainer object of 10 artists>)"
      ]
     },
     "execution_count": 90,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist(data1[\"1500\"])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "444bd573",
   "metadata": {},
   "source": [
    "## Boxplot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "id": "654e2aa1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'whiskers': [<matplotlib.lines.Line2D at 0x24331ed48b0>,\n",
       "  <matplotlib.lines.Line2D at 0x24331ed4bb0>],\n",
       " 'caps': [<matplotlib.lines.Line2D at 0x24331eda040>,\n",
       "  <matplotlib.lines.Line2D at 0x24331eda280>],\n",
       " 'boxes': [<matplotlib.lines.Line2D at 0x24331ed4520>],\n",
       " 'medians': [<matplotlib.lines.Line2D at 0x24331eda610>],\n",
       " 'fliers': [<matplotlib.lines.Line2D at 0x24331eda910>],\n",
       " 'means': []}"
      ]
     },
     "execution_count": 93,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.boxplot(data1[\"1000\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "id": "7a808247",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['FECHA', '500', '501', '502', '503', '504', '505', '506', '507', '508',\n",
       "       ...\n",
       "       '1935', '1936', '1937', '1938', '1939', '1940', '1941', '1942', '1943',\n",
       "       '1944'],\n",
       "      dtype='object', length=1446)"
      ]
     },
     "execution_count": 96,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data1.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "id": "e6351e2d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['FECHA', '500', '501', ..., '1942', '1943', '1944'], dtype=object)"
      ]
     },
     "execution_count": 97,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data1.columns.values"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "58f63383",
   "metadata": {},
   "source": [
    "## Resumen estadísticos básicos"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "id": "1a766e2c",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>FECHA</th>\n",
       "      <th>500</th>\n",
       "      <th>501</th>\n",
       "      <th>502</th>\n",
       "      <th>503</th>\n",
       "      <th>504</th>\n",
       "      <th>505</th>\n",
       "      <th>506</th>\n",
       "      <th>507</th>\n",
       "      <th>508</th>\n",
       "      <th>...</th>\n",
       "      <th>1935</th>\n",
       "      <th>1936</th>\n",
       "      <th>1937</th>\n",
       "      <th>1938</th>\n",
       "      <th>1939</th>\n",
       "      <th>1940</th>\n",
       "      <th>1941</th>\n",
       "      <th>1942</th>\n",
       "      <th>1943</th>\n",
       "      <th>1944</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>480.000000</td>\n",
       "      <td>478.000000</td>\n",
       "      <td>478.000000</td>\n",
       "      <td>478.000000</td>\n",
       "      <td>478.000000</td>\n",
       "      <td>478.000000</td>\n",
       "      <td>478.000000</td>\n",
       "      <td>478.000000</td>\n",
       "      <td>478.000000</td>\n",
       "      <td>478.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>478.000000</td>\n",
       "      <td>478.000000</td>\n",
       "      <td>478.000000</td>\n",
       "      <td>478.000000</td>\n",
       "      <td>478.000000</td>\n",
       "      <td>478.000000</td>\n",
       "      <td>478.000000</td>\n",
       "      <td>478.000000</td>\n",
       "      <td>478.000000</td>\n",
       "      <td>478.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>198056.500000</td>\n",
       "      <td>19.310523</td>\n",
       "      <td>19.963473</td>\n",
       "      <td>20.317134</td>\n",
       "      <td>20.317134</td>\n",
       "      <td>21.854017</td>\n",
       "      <td>21.047176</td>\n",
       "      <td>18.801799</td>\n",
       "      <td>21.557385</td>\n",
       "      <td>22.767134</td>\n",
       "      <td>...</td>\n",
       "      <td>13.250188</td>\n",
       "      <td>13.240544</td>\n",
       "      <td>13.995230</td>\n",
       "      <td>13.995230</td>\n",
       "      <td>12.684979</td>\n",
       "      <td>12.005711</td>\n",
       "      <td>11.338222</td>\n",
       "      <td>14.520983</td>\n",
       "      <td>14.350293</td>\n",
       "      <td>14.271820</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>1155.549124</td>\n",
       "      <td>3.911835</td>\n",
       "      <td>4.300915</td>\n",
       "      <td>4.726629</td>\n",
       "      <td>4.726629</td>\n",
       "      <td>6.100403</td>\n",
       "      <td>5.366503</td>\n",
       "      <td>3.601067</td>\n",
       "      <td>5.572594</td>\n",
       "      <td>6.810156</td>\n",
       "      <td>...</td>\n",
       "      <td>2.192408</td>\n",
       "      <td>2.219370</td>\n",
       "      <td>2.438556</td>\n",
       "      <td>2.438556</td>\n",
       "      <td>2.063873</td>\n",
       "      <td>1.922460</td>\n",
       "      <td>1.741689</td>\n",
       "      <td>2.031716</td>\n",
       "      <td>2.079870</td>\n",
       "      <td>2.090318</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>196101.000000</td>\n",
       "      <td>13.350000</td>\n",
       "      <td>13.280000</td>\n",
       "      <td>13.150000</td>\n",
       "      <td>13.150000</td>\n",
       "      <td>12.700000</td>\n",
       "      <td>12.930000</td>\n",
       "      <td>13.280000</td>\n",
       "      <td>13.140000</td>\n",
       "      <td>12.820000</td>\n",
       "      <td>...</td>\n",
       "      <td>8.800000</td>\n",
       "      <td>8.940000</td>\n",
       "      <td>9.220000</td>\n",
       "      <td>9.220000</td>\n",
       "      <td>8.630000</td>\n",
       "      <td>8.190000</td>\n",
       "      <td>7.910000</td>\n",
       "      <td>10.520000</td>\n",
       "      <td>10.140000</td>\n",
       "      <td>9.920000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>197078.750000</td>\n",
       "      <td>15.840000</td>\n",
       "      <td>16.027500</td>\n",
       "      <td>15.990000</td>\n",
       "      <td>15.990000</td>\n",
       "      <td>16.067500</td>\n",
       "      <td>15.947500</td>\n",
       "      <td>15.540000</td>\n",
       "      <td>16.415000</td>\n",
       "      <td>16.507500</td>\n",
       "      <td>...</td>\n",
       "      <td>11.372500</td>\n",
       "      <td>11.370000</td>\n",
       "      <td>11.880000</td>\n",
       "      <td>11.880000</td>\n",
       "      <td>10.905000</td>\n",
       "      <td>10.360000</td>\n",
       "      <td>9.840000</td>\n",
       "      <td>12.785000</td>\n",
       "      <td>12.585000</td>\n",
       "      <td>12.502500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>198056.500000</td>\n",
       "      <td>18.430000</td>\n",
       "      <td>19.055000</td>\n",
       "      <td>19.245000</td>\n",
       "      <td>19.245000</td>\n",
       "      <td>20.430000</td>\n",
       "      <td>20.010000</td>\n",
       "      <td>18.075000</td>\n",
       "      <td>20.190000</td>\n",
       "      <td>20.990000</td>\n",
       "      <td>...</td>\n",
       "      <td>12.820000</td>\n",
       "      <td>12.790000</td>\n",
       "      <td>13.520000</td>\n",
       "      <td>13.520000</td>\n",
       "      <td>12.265000</td>\n",
       "      <td>11.575000</td>\n",
       "      <td>10.910000</td>\n",
       "      <td>14.035000</td>\n",
       "      <td>13.875000</td>\n",
       "      <td>13.850000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>199034.250000</td>\n",
       "      <td>23.045000</td>\n",
       "      <td>24.045000</td>\n",
       "      <td>25.250000</td>\n",
       "      <td>25.250000</td>\n",
       "      <td>27.970000</td>\n",
       "      <td>26.487500</td>\n",
       "      <td>22.307500</td>\n",
       "      <td>27.180000</td>\n",
       "      <td>29.520000</td>\n",
       "      <td>...</td>\n",
       "      <td>15.280000</td>\n",
       "      <td>15.257500</td>\n",
       "      <td>16.195000</td>\n",
       "      <td>16.195000</td>\n",
       "      <td>14.527500</td>\n",
       "      <td>13.692500</td>\n",
       "      <td>12.927500</td>\n",
       "      <td>16.390000</td>\n",
       "      <td>16.240000</td>\n",
       "      <td>16.140000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>200012.000000</td>\n",
       "      <td>26.740000</td>\n",
       "      <td>28.030000</td>\n",
       "      <td>29.350000</td>\n",
       "      <td>29.350000</td>\n",
       "      <td>33.310000</td>\n",
       "      <td>30.910000</td>\n",
       "      <td>25.890000</td>\n",
       "      <td>31.990000</td>\n",
       "      <td>35.540000</td>\n",
       "      <td>...</td>\n",
       "      <td>17.900000</td>\n",
       "      <td>17.950000</td>\n",
       "      <td>19.240000</td>\n",
       "      <td>19.240000</td>\n",
       "      <td>17.010000</td>\n",
       "      <td>16.040000</td>\n",
       "      <td>15.200000</td>\n",
       "      <td>19.380000</td>\n",
       "      <td>19.260000</td>\n",
       "      <td>19.100000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8 rows × 1446 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "               FECHA         500         501         502         503  \\\n",
       "count     480.000000  478.000000  478.000000  478.000000  478.000000   \n",
       "mean   198056.500000   19.310523   19.963473   20.317134   20.317134   \n",
       "std      1155.549124    3.911835    4.300915    4.726629    4.726629   \n",
       "min    196101.000000   13.350000   13.280000   13.150000   13.150000   \n",
       "25%    197078.750000   15.840000   16.027500   15.990000   15.990000   \n",
       "50%    198056.500000   18.430000   19.055000   19.245000   19.245000   \n",
       "75%    199034.250000   23.045000   24.045000   25.250000   25.250000   \n",
       "max    200012.000000   26.740000   28.030000   29.350000   29.350000   \n",
       "\n",
       "              504         505         506         507         508  ...  \\\n",
       "count  478.000000  478.000000  478.000000  478.000000  478.000000  ...   \n",
       "mean    21.854017   21.047176   18.801799   21.557385   22.767134  ...   \n",
       "std      6.100403    5.366503    3.601067    5.572594    6.810156  ...   \n",
       "min     12.700000   12.930000   13.280000   13.140000   12.820000  ...   \n",
       "25%     16.067500   15.947500   15.540000   16.415000   16.507500  ...   \n",
       "50%     20.430000   20.010000   18.075000   20.190000   20.990000  ...   \n",
       "75%     27.970000   26.487500   22.307500   27.180000   29.520000  ...   \n",
       "max     33.310000   30.910000   25.890000   31.990000   35.540000  ...   \n",
       "\n",
       "             1935        1936        1937        1938        1939        1940  \\\n",
       "count  478.000000  478.000000  478.000000  478.000000  478.000000  478.000000   \n",
       "mean    13.250188   13.240544   13.995230   13.995230   12.684979   12.005711   \n",
       "std      2.192408    2.219370    2.438556    2.438556    2.063873    1.922460   \n",
       "min      8.800000    8.940000    9.220000    9.220000    8.630000    8.190000   \n",
       "25%     11.372500   11.370000   11.880000   11.880000   10.905000   10.360000   \n",
       "50%     12.820000   12.790000   13.520000   13.520000   12.265000   11.575000   \n",
       "75%     15.280000   15.257500   16.195000   16.195000   14.527500   13.692500   \n",
       "max     17.900000   17.950000   19.240000   19.240000   17.010000   16.040000   \n",
       "\n",
       "             1941        1942        1943        1944  \n",
       "count  478.000000  478.000000  478.000000  478.000000  \n",
       "mean    11.338222   14.520983   14.350293   14.271820  \n",
       "std      1.741689    2.031716    2.079870    2.090318  \n",
       "min      7.910000   10.520000   10.140000    9.920000  \n",
       "25%      9.840000   12.785000   12.585000   12.502500  \n",
       "50%     10.910000   14.035000   13.875000   13.850000  \n",
       "75%     12.927500   16.390000   16.240000   16.140000  \n",
       "max     15.200000   19.380000   19.260000   19.100000  \n",
       "\n",
       "[8 rows x 1446 columns]"
      ]
     },
     "execution_count": 98,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data1.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "id": "58ad199f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "FECHA      int64\n",
       "500      float64\n",
       "501      float64\n",
       "502      float64\n",
       "503      float64\n",
       "          ...   \n",
       "1940     float64\n",
       "1941     float64\n",
       "1942     float64\n",
       "1943     float64\n",
       "1944     float64\n",
       "Length: 1446, dtype: object"
      ]
     },
     "execution_count": 99,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data1.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "id": "c8cb383d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>196101</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>479.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>198060.582463</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>1153.286877</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>196102.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>197101.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>198101.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>199056.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>200012.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              196101\n",
       "count     479.000000\n",
       "mean   198060.582463\n",
       "std      1153.286877\n",
       "min    196102.000000\n",
       "25%    197101.500000\n",
       "50%    198101.000000\n",
       "75%    199056.500000\n",
       "max    200012.000000"
      ]
     },
     "execution_count": 103,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "id": "1e4f9e2f",
   "metadata": {},
   "outputs": [],
   "source": [
    "data10=pd.read_csv(\"../Dataset/Copia de TXMM_RCA_ECHAM5_20C3M_19610_sinfecha1_200012 original.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "id": "8dd0928c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>500</th>\n",
       "      <th>501</th>\n",
       "      <th>502</th>\n",
       "      <th>503</th>\n",
       "      <th>504</th>\n",
       "      <th>505</th>\n",
       "      <th>506</th>\n",
       "      <th>507</th>\n",
       "      <th>508</th>\n",
       "      <th>509</th>\n",
       "      <th>...</th>\n",
       "      <th>1935</th>\n",
       "      <th>1936</th>\n",
       "      <th>1937</th>\n",
       "      <th>1938</th>\n",
       "      <th>1939</th>\n",
       "      <th>1940</th>\n",
       "      <th>1941</th>\n",
       "      <th>1942</th>\n",
       "      <th>1943</th>\n",
       "      <th>1944</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>16.08</td>\n",
       "      <td>16.33</td>\n",
       "      <td>16.08</td>\n",
       "      <td>16.08</td>\n",
       "      <td>16.22</td>\n",
       "      <td>16.12</td>\n",
       "      <td>16.01</td>\n",
       "      <td>16.36</td>\n",
       "      <td>16.50</td>\n",
       "      <td>16.50</td>\n",
       "      <td>...</td>\n",
       "      <td>11.79</td>\n",
       "      <td>11.79</td>\n",
       "      <td>12.54</td>\n",
       "      <td>12.54</td>\n",
       "      <td>11.36</td>\n",
       "      <td>10.84</td>\n",
       "      <td>10.26</td>\n",
       "      <td>13.19</td>\n",
       "      <td>13.00</td>\n",
       "      <td>12.98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>15.29</td>\n",
       "      <td>15.45</td>\n",
       "      <td>15.56</td>\n",
       "      <td>15.56</td>\n",
       "      <td>15.56</td>\n",
       "      <td>15.31</td>\n",
       "      <td>14.84</td>\n",
       "      <td>16.13</td>\n",
       "      <td>16.09</td>\n",
       "      <td>16.09</td>\n",
       "      <td>...</td>\n",
       "      <td>10.76</td>\n",
       "      <td>10.70</td>\n",
       "      <td>11.37</td>\n",
       "      <td>11.37</td>\n",
       "      <td>10.34</td>\n",
       "      <td>9.81</td>\n",
       "      <td>9.34</td>\n",
       "      <td>12.40</td>\n",
       "      <td>12.23</td>\n",
       "      <td>12.13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>15.88</td>\n",
       "      <td>16.35</td>\n",
       "      <td>16.64</td>\n",
       "      <td>16.64</td>\n",
       "      <td>17.47</td>\n",
       "      <td>17.03</td>\n",
       "      <td>15.89</td>\n",
       "      <td>17.33</td>\n",
       "      <td>18.14</td>\n",
       "      <td>18.14</td>\n",
       "      <td>...</td>\n",
       "      <td>11.03</td>\n",
       "      <td>11.03</td>\n",
       "      <td>11.69</td>\n",
       "      <td>11.69</td>\n",
       "      <td>10.63</td>\n",
       "      <td>9.96</td>\n",
       "      <td>9.35</td>\n",
       "      <td>12.55</td>\n",
       "      <td>12.35</td>\n",
       "      <td>12.18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>16.13</td>\n",
       "      <td>17.15</td>\n",
       "      <td>16.57</td>\n",
       "      <td>16.57</td>\n",
       "      <td>17.96</td>\n",
       "      <td>17.82</td>\n",
       "      <td>16.24</td>\n",
       "      <td>17.27</td>\n",
       "      <td>17.71</td>\n",
       "      <td>17.71</td>\n",
       "      <td>...</td>\n",
       "      <td>11.55</td>\n",
       "      <td>11.71</td>\n",
       "      <td>12.47</td>\n",
       "      <td>12.47</td>\n",
       "      <td>11.16</td>\n",
       "      <td>10.46</td>\n",
       "      <td>9.68</td>\n",
       "      <td>12.65</td>\n",
       "      <td>12.36</td>\n",
       "      <td>12.30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>18.68</td>\n",
       "      <td>20.01</td>\n",
       "      <td>20.31</td>\n",
       "      <td>20.31</td>\n",
       "      <td>23.24</td>\n",
       "      <td>22.28</td>\n",
       "      <td>18.15</td>\n",
       "      <td>22.17</td>\n",
       "      <td>23.90</td>\n",
       "      <td>23.90</td>\n",
       "      <td>...</td>\n",
       "      <td>13.10</td>\n",
       "      <td>13.18</td>\n",
       "      <td>14.29</td>\n",
       "      <td>14.29</td>\n",
       "      <td>12.56</td>\n",
       "      <td>11.63</td>\n",
       "      <td>10.63</td>\n",
       "      <td>14.28</td>\n",
       "      <td>14.13</td>\n",
       "      <td>14.06</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 1445 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     500    501    502    503    504    505    506    507    508    509  ...  \\\n",
       "0  16.08  16.33  16.08  16.08  16.22  16.12  16.01  16.36  16.50  16.50  ...   \n",
       "1  15.29  15.45  15.56  15.56  15.56  15.31  14.84  16.13  16.09  16.09  ...   \n",
       "2  15.88  16.35  16.64  16.64  17.47  17.03  15.89  17.33  18.14  18.14  ...   \n",
       "3  16.13  17.15  16.57  16.57  17.96  17.82  16.24  17.27  17.71  17.71  ...   \n",
       "4  18.68  20.01  20.31  20.31  23.24  22.28  18.15  22.17  23.90  23.90  ...   \n",
       "\n",
       "    1935   1936   1937   1938   1939   1940   1941   1942   1943   1944  \n",
       "0  11.79  11.79  12.54  12.54  11.36  10.84  10.26  13.19  13.00  12.98  \n",
       "1  10.76  10.70  11.37  11.37  10.34   9.81   9.34  12.40  12.23  12.13  \n",
       "2  11.03  11.03  11.69  11.69  10.63   9.96   9.35  12.55  12.35  12.18  \n",
       "3  11.55  11.71  12.47  12.47  11.16  10.46   9.68  12.65  12.36  12.30  \n",
       "4  13.10  13.18  14.29  14.29  12.56  11.63  10.63  14.28  14.13  14.06  \n",
       "\n",
       "[5 rows x 1445 columns]"
      ]
     },
     "execution_count": 107,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data10.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 109,
   "id": "0f420979",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>500</th>\n",
       "      <th>501</th>\n",
       "      <th>502</th>\n",
       "      <th>503</th>\n",
       "      <th>504</th>\n",
       "      <th>505</th>\n",
       "      <th>506</th>\n",
       "      <th>507</th>\n",
       "      <th>508</th>\n",
       "      <th>509</th>\n",
       "      <th>...</th>\n",
       "      <th>1935</th>\n",
       "      <th>1936</th>\n",
       "      <th>1937</th>\n",
       "      <th>1938</th>\n",
       "      <th>1939</th>\n",
       "      <th>1940</th>\n",
       "      <th>1941</th>\n",
       "      <th>1942</th>\n",
       "      <th>1943</th>\n",
       "      <th>1944</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>478.000000</td>\n",
       "      <td>478.000000</td>\n",
       "      <td>478.000000</td>\n",
       "      <td>478.000000</td>\n",
       "      <td>478.000000</td>\n",
       "      <td>478.000000</td>\n",
       "      <td>478.000000</td>\n",
       "      <td>478.000000</td>\n",
       "      <td>478.000000</td>\n",
       "      <td>478.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>478.000000</td>\n",
       "      <td>478.000000</td>\n",
       "      <td>478.000000</td>\n",
       "      <td>478.000000</td>\n",
       "      <td>478.000000</td>\n",
       "      <td>478.000000</td>\n",
       "      <td>478.000000</td>\n",
       "      <td>478.000000</td>\n",
       "      <td>478.000000</td>\n",
       "      <td>478.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>19.310523</td>\n",
       "      <td>19.963473</td>\n",
       "      <td>20.317134</td>\n",
       "      <td>20.317134</td>\n",
       "      <td>21.854017</td>\n",
       "      <td>21.047176</td>\n",
       "      <td>18.801799</td>\n",
       "      <td>21.557385</td>\n",
       "      <td>22.767134</td>\n",
       "      <td>22.767134</td>\n",
       "      <td>...</td>\n",
       "      <td>13.250188</td>\n",
       "      <td>13.240544</td>\n",
       "      <td>13.995230</td>\n",
       "      <td>13.995230</td>\n",
       "      <td>12.684979</td>\n",
       "      <td>12.005711</td>\n",
       "      <td>11.338222</td>\n",
       "      <td>14.520983</td>\n",
       "      <td>14.350293</td>\n",
       "      <td>14.271820</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>3.911835</td>\n",
       "      <td>4.300915</td>\n",
       "      <td>4.726629</td>\n",
       "      <td>4.726629</td>\n",
       "      <td>6.100403</td>\n",
       "      <td>5.366503</td>\n",
       "      <td>3.601067</td>\n",
       "      <td>5.572594</td>\n",
       "      <td>6.810156</td>\n",
       "      <td>6.810156</td>\n",
       "      <td>...</td>\n",
       "      <td>2.192408</td>\n",
       "      <td>2.219370</td>\n",
       "      <td>2.438556</td>\n",
       "      <td>2.438556</td>\n",
       "      <td>2.063873</td>\n",
       "      <td>1.922460</td>\n",
       "      <td>1.741689</td>\n",
       "      <td>2.031716</td>\n",
       "      <td>2.079870</td>\n",
       "      <td>2.090318</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>13.350000</td>\n",
       "      <td>13.280000</td>\n",
       "      <td>13.150000</td>\n",
       "      <td>13.150000</td>\n",
       "      <td>12.700000</td>\n",
       "      <td>12.930000</td>\n",
       "      <td>13.280000</td>\n",
       "      <td>13.140000</td>\n",
       "      <td>12.820000</td>\n",
       "      <td>12.820000</td>\n",
       "      <td>...</td>\n",
       "      <td>8.800000</td>\n",
       "      <td>8.940000</td>\n",
       "      <td>9.220000</td>\n",
       "      <td>9.220000</td>\n",
       "      <td>8.630000</td>\n",
       "      <td>8.190000</td>\n",
       "      <td>7.910000</td>\n",
       "      <td>10.520000</td>\n",
       "      <td>10.140000</td>\n",
       "      <td>9.920000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>15.840000</td>\n",
       "      <td>16.027500</td>\n",
       "      <td>15.990000</td>\n",
       "      <td>15.990000</td>\n",
       "      <td>16.067500</td>\n",
       "      <td>15.947500</td>\n",
       "      <td>15.540000</td>\n",
       "      <td>16.415000</td>\n",
       "      <td>16.507500</td>\n",
       "      <td>16.507500</td>\n",
       "      <td>...</td>\n",
       "      <td>11.372500</td>\n",
       "      <td>11.370000</td>\n",
       "      <td>11.880000</td>\n",
       "      <td>11.880000</td>\n",
       "      <td>10.905000</td>\n",
       "      <td>10.360000</td>\n",
       "      <td>9.840000</td>\n",
       "      <td>12.785000</td>\n",
       "      <td>12.585000</td>\n",
       "      <td>12.502500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>18.430000</td>\n",
       "      <td>19.055000</td>\n",
       "      <td>19.245000</td>\n",
       "      <td>19.245000</td>\n",
       "      <td>20.430000</td>\n",
       "      <td>20.010000</td>\n",
       "      <td>18.075000</td>\n",
       "      <td>20.190000</td>\n",
       "      <td>20.990000</td>\n",
       "      <td>20.990000</td>\n",
       "      <td>...</td>\n",
       "      <td>12.820000</td>\n",
       "      <td>12.790000</td>\n",
       "      <td>13.520000</td>\n",
       "      <td>13.520000</td>\n",
       "      <td>12.265000</td>\n",
       "      <td>11.575000</td>\n",
       "      <td>10.910000</td>\n",
       "      <td>14.035000</td>\n",
       "      <td>13.875000</td>\n",
       "      <td>13.850000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>23.045000</td>\n",
       "      <td>24.045000</td>\n",
       "      <td>25.250000</td>\n",
       "      <td>25.250000</td>\n",
       "      <td>27.970000</td>\n",
       "      <td>26.487500</td>\n",
       "      <td>22.307500</td>\n",
       "      <td>27.180000</td>\n",
       "      <td>29.520000</td>\n",
       "      <td>29.520000</td>\n",
       "      <td>...</td>\n",
       "      <td>15.280000</td>\n",
       "      <td>15.257500</td>\n",
       "      <td>16.195000</td>\n",
       "      <td>16.195000</td>\n",
       "      <td>14.527500</td>\n",
       "      <td>13.692500</td>\n",
       "      <td>12.927500</td>\n",
       "      <td>16.390000</td>\n",
       "      <td>16.240000</td>\n",
       "      <td>16.140000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>26.740000</td>\n",
       "      <td>28.030000</td>\n",
       "      <td>29.350000</td>\n",
       "      <td>29.350000</td>\n",
       "      <td>33.310000</td>\n",
       "      <td>30.910000</td>\n",
       "      <td>25.890000</td>\n",
       "      <td>31.990000</td>\n",
       "      <td>35.540000</td>\n",
       "      <td>35.540000</td>\n",
       "      <td>...</td>\n",
       "      <td>17.900000</td>\n",
       "      <td>17.950000</td>\n",
       "      <td>19.240000</td>\n",
       "      <td>19.240000</td>\n",
       "      <td>17.010000</td>\n",
       "      <td>16.040000</td>\n",
       "      <td>15.200000</td>\n",
       "      <td>19.380000</td>\n",
       "      <td>19.260000</td>\n",
       "      <td>19.100000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8 rows × 1445 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "              500         501         502         503         504         505  \\\n",
       "count  478.000000  478.000000  478.000000  478.000000  478.000000  478.000000   \n",
       "mean    19.310523   19.963473   20.317134   20.317134   21.854017   21.047176   \n",
       "std      3.911835    4.300915    4.726629    4.726629    6.100403    5.366503   \n",
       "min     13.350000   13.280000   13.150000   13.150000   12.700000   12.930000   \n",
       "25%     15.840000   16.027500   15.990000   15.990000   16.067500   15.947500   \n",
       "50%     18.430000   19.055000   19.245000   19.245000   20.430000   20.010000   \n",
       "75%     23.045000   24.045000   25.250000   25.250000   27.970000   26.487500   \n",
       "max     26.740000   28.030000   29.350000   29.350000   33.310000   30.910000   \n",
       "\n",
       "              506         507         508         509  ...        1935  \\\n",
       "count  478.000000  478.000000  478.000000  478.000000  ...  478.000000   \n",
       "mean    18.801799   21.557385   22.767134   22.767134  ...   13.250188   \n",
       "std      3.601067    5.572594    6.810156    6.810156  ...    2.192408   \n",
       "min     13.280000   13.140000   12.820000   12.820000  ...    8.800000   \n",
       "25%     15.540000   16.415000   16.507500   16.507500  ...   11.372500   \n",
       "50%     18.075000   20.190000   20.990000   20.990000  ...   12.820000   \n",
       "75%     22.307500   27.180000   29.520000   29.520000  ...   15.280000   \n",
       "max     25.890000   31.990000   35.540000   35.540000  ...   17.900000   \n",
       "\n",
       "             1936        1937        1938        1939        1940        1941  \\\n",
       "count  478.000000  478.000000  478.000000  478.000000  478.000000  478.000000   \n",
       "mean    13.240544   13.995230   13.995230   12.684979   12.005711   11.338222   \n",
       "std      2.219370    2.438556    2.438556    2.063873    1.922460    1.741689   \n",
       "min      8.940000    9.220000    9.220000    8.630000    8.190000    7.910000   \n",
       "25%     11.370000   11.880000   11.880000   10.905000   10.360000    9.840000   \n",
       "50%     12.790000   13.520000   13.520000   12.265000   11.575000   10.910000   \n",
       "75%     15.257500   16.195000   16.195000   14.527500   13.692500   12.927500   \n",
       "max     17.950000   19.240000   19.240000   17.010000   16.040000   15.200000   \n",
       "\n",
       "             1942        1943        1944  \n",
       "count  478.000000  478.000000  478.000000  \n",
       "mean    14.520983   14.350293   14.271820  \n",
       "std      2.031716    2.079870    2.090318  \n",
       "min     10.520000   10.140000    9.920000  \n",
       "25%     12.785000   12.585000   12.502500  \n",
       "50%     14.035000   13.875000   13.850000  \n",
       "75%     16.390000   16.240000   16.140000  \n",
       "max     19.380000   19.260000   19.100000  \n",
       "\n",
       "[8 rows x 1445 columns]"
      ]
     },
     "execution_count": 109,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data10.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "id": "1b79f582",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "500     float64\n",
       "501     float64\n",
       "502     float64\n",
       "503     float64\n",
       "504     float64\n",
       "         ...   \n",
       "1940    float64\n",
       "1941    float64\n",
       "1942    float64\n",
       "1943    float64\n",
       "1944    float64\n",
       "Length: 1445, dtype: object"
      ]
     },
     "execution_count": 114,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data10.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "id": "6446b417",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0      False\n",
       "1      False\n",
       "2      False\n",
       "3      False\n",
       "4      False\n",
       "       ...  \n",
       "475    False\n",
       "476    False\n",
       "477    False\n",
       "478    False\n",
       "479    False\n",
       "Name: 500, Length: 480, dtype: bool"
      ]
     },
     "execution_count": 115,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.isnull(data10[\"500\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "id": "f5d5264a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<function matplotlib.pyplot.show(close=None, block=None)>"
      ]
     },
     "execution_count": 126,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.boxplot(data10[\"1500\"])\n",
    "plt.ylabel(\"Evolución temperaturas\")\n",
    "plt.title(\"Boxplot de temperaturas\")\n",
    "plt.show"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 131,
   "id": "d9f2f8d6",
   "metadata": {},
   "outputs": [],
   "source": [
    "data15=pd.read_csv(\"../Dataset/TXMM_RCA_ECHAM5_20C3M_19610_sinfecha1_1961.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 132,
   "id": "569764b1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>16.08</th>\n",
       "      <th>16.33</th>\n",
       "      <th>16.08.1</th>\n",
       "      <th>16.08.2</th>\n",
       "      <th>16.22</th>\n",
       "      <th>16.12</th>\n",
       "      <th>16.01</th>\n",
       "      <th>16.36</th>\n",
       "      <th>16.50</th>\n",
       "      <th>16.50.1</th>\n",
       "      <th>...</th>\n",
       "      <th>11.79.4</th>\n",
       "      <th>11.79.5</th>\n",
       "      <th>12.54.3</th>\n",
       "      <th>12.54.4</th>\n",
       "      <th>11.36.3</th>\n",
       "      <th>10.84.1</th>\n",
       "      <th>10.26</th>\n",
       "      <th>13.19.2</th>\n",
       "      <th>13.00.1</th>\n",
       "      <th>12.98</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>15.29</td>\n",
       "      <td>15.45</td>\n",
       "      <td>15.56</td>\n",
       "      <td>15.56</td>\n",
       "      <td>15.56</td>\n",
       "      <td>15.31</td>\n",
       "      <td>14.84</td>\n",
       "      <td>16.13</td>\n",
       "      <td>16.09</td>\n",
       "      <td>16.09</td>\n",
       "      <td>...</td>\n",
       "      <td>10.76</td>\n",
       "      <td>10.70</td>\n",
       "      <td>11.37</td>\n",
       "      <td>11.37</td>\n",
       "      <td>10.34</td>\n",
       "      <td>9.81</td>\n",
       "      <td>9.34</td>\n",
       "      <td>12.40</td>\n",
       "      <td>12.23</td>\n",
       "      <td>12.13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>15.88</td>\n",
       "      <td>16.35</td>\n",
       "      <td>16.64</td>\n",
       "      <td>16.64</td>\n",
       "      <td>17.47</td>\n",
       "      <td>17.03</td>\n",
       "      <td>15.89</td>\n",
       "      <td>17.33</td>\n",
       "      <td>18.14</td>\n",
       "      <td>18.14</td>\n",
       "      <td>...</td>\n",
       "      <td>11.03</td>\n",
       "      <td>11.03</td>\n",
       "      <td>11.69</td>\n",
       "      <td>11.69</td>\n",
       "      <td>10.63</td>\n",
       "      <td>9.96</td>\n",
       "      <td>9.35</td>\n",
       "      <td>12.55</td>\n",
       "      <td>12.35</td>\n",
       "      <td>12.18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>16.13</td>\n",
       "      <td>17.15</td>\n",
       "      <td>16.57</td>\n",
       "      <td>16.57</td>\n",
       "      <td>17.96</td>\n",
       "      <td>17.82</td>\n",
       "      <td>16.24</td>\n",
       "      <td>17.27</td>\n",
       "      <td>17.71</td>\n",
       "      <td>17.71</td>\n",
       "      <td>...</td>\n",
       "      <td>11.55</td>\n",
       "      <td>11.71</td>\n",
       "      <td>12.47</td>\n",
       "      <td>12.47</td>\n",
       "      <td>11.16</td>\n",
       "      <td>10.46</td>\n",
       "      <td>9.68</td>\n",
       "      <td>12.65</td>\n",
       "      <td>12.36</td>\n",
       "      <td>12.30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>18.68</td>\n",
       "      <td>20.01</td>\n",
       "      <td>20.31</td>\n",
       "      <td>20.31</td>\n",
       "      <td>23.24</td>\n",
       "      <td>22.28</td>\n",
       "      <td>18.15</td>\n",
       "      <td>22.17</td>\n",
       "      <td>23.90</td>\n",
       "      <td>23.90</td>\n",
       "      <td>...</td>\n",
       "      <td>13.10</td>\n",
       "      <td>13.18</td>\n",
       "      <td>14.29</td>\n",
       "      <td>14.29</td>\n",
       "      <td>12.56</td>\n",
       "      <td>11.63</td>\n",
       "      <td>10.63</td>\n",
       "      <td>14.28</td>\n",
       "      <td>14.13</td>\n",
       "      <td>14.06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>22.32</td>\n",
       "      <td>22.93</td>\n",
       "      <td>24.75</td>\n",
       "      <td>24.75</td>\n",
       "      <td>27.97</td>\n",
       "      <td>25.82</td>\n",
       "      <td>20.41</td>\n",
       "      <td>27.83</td>\n",
       "      <td>30.61</td>\n",
       "      <td>30.61</td>\n",
       "      <td>...</td>\n",
       "      <td>15.39</td>\n",
       "      <td>15.38</td>\n",
       "      <td>16.39</td>\n",
       "      <td>16.39</td>\n",
       "      <td>14.53</td>\n",
       "      <td>13.57</td>\n",
       "      <td>12.53</td>\n",
       "      <td>16.33</td>\n",
       "      <td>16.13</td>\n",
       "      <td>15.85</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 1445 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   16.08  16.33  16.08.1  16.08.2  16.22  16.12  16.01  16.36  16.50  16.50.1  \\\n",
       "0  15.29  15.45    15.56    15.56  15.56  15.31  14.84  16.13  16.09    16.09   \n",
       "1  15.88  16.35    16.64    16.64  17.47  17.03  15.89  17.33  18.14    18.14   \n",
       "2  16.13  17.15    16.57    16.57  17.96  17.82  16.24  17.27  17.71    17.71   \n",
       "3  18.68  20.01    20.31    20.31  23.24  22.28  18.15  22.17  23.90    23.90   \n",
       "4  22.32  22.93    24.75    24.75  27.97  25.82  20.41  27.83  30.61    30.61   \n",
       "\n",
       "   ...  11.79.4  11.79.5  12.54.3  12.54.4  11.36.3  10.84.1  10.26  13.19.2  \\\n",
       "0  ...    10.76    10.70    11.37    11.37    10.34     9.81   9.34    12.40   \n",
       "1  ...    11.03    11.03    11.69    11.69    10.63     9.96   9.35    12.55   \n",
       "2  ...    11.55    11.71    12.47    12.47    11.16    10.46   9.68    12.65   \n",
       "3  ...    13.10    13.18    14.29    14.29    12.56    11.63  10.63    14.28   \n",
       "4  ...    15.39    15.38    16.39    16.39    14.53    13.57  12.53    16.33   \n",
       "\n",
       "   13.00.1  12.98  \n",
       "0    12.23  12.13  \n",
       "1    12.35  12.18  \n",
       "2    12.36  12.30  \n",
       "3    14.13  14.06  \n",
       "4    16.13  15.85  \n",
       "\n",
       "[5 rows x 1445 columns]"
      ]
     },
     "execution_count": 132,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data15.head()"
   ]
  },
  {
   "cell_type": "raw",
   "id": "436dd92c",
   "metadata": {},
   "source": [
    "Creo que tengo que poner el numero de la estación en el encabezado"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "250da9f6",
   "metadata": {},
   "outputs": [],
   "source": [
    "plt.boxplot(data15[\"1500\"])\n",
    "plt.ylabel(\"Evolución temperaturas\")\n",
    "plt.title(\"Boxplot de temperaturas\")\n",
    "plt.show"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4cb91da7",
   "metadata": {},
   "source": [
    "### No me sale el boxplot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 220,
   "id": "ad734b1e",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "UsageError: Line magic function `%` not found.\n"
     ]
    }
   ],
   "source": [
    "%  matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "98e3d21b",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "ba5cb1f8",
   "metadata": {},
   "source": [
    "## Regresión lineal"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 232,
   "id": "838addbd",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import statistics\n",
    "import statsmodels.formula.api as sfn"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 229,
   "id": "c71a6119",
   "metadata": {},
   "outputs": [],
   "source": [
    "data1=pd.read_csv(\"../Dataset/TXMM_RCA_ECHAM5_20C3M_196101_200012 original.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 231,
   "id": "8510c0f7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>FECHA</th>\n",
       "      <th>500</th>\n",
       "      <th>501</th>\n",
       "      <th>502</th>\n",
       "      <th>503</th>\n",
       "      <th>504</th>\n",
       "      <th>505</th>\n",
       "      <th>506</th>\n",
       "      <th>507</th>\n",
       "      <th>508</th>\n",
       "      <th>...</th>\n",
       "      <th>1935</th>\n",
       "      <th>1936</th>\n",
       "      <th>1937</th>\n",
       "      <th>1938</th>\n",
       "      <th>1939</th>\n",
       "      <th>1940</th>\n",
       "      <th>1941</th>\n",
       "      <th>1942</th>\n",
       "      <th>1943</th>\n",
       "      <th>1944</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>196101</td>\n",
       "      <td>16.08</td>\n",
       "      <td>16.33</td>\n",
       "      <td>16.08</td>\n",
       "      <td>16.08</td>\n",
       "      <td>16.22</td>\n",
       "      <td>16.12</td>\n",
       "      <td>16.01</td>\n",
       "      <td>16.36</td>\n",
       "      <td>16.50</td>\n",
       "      <td>...</td>\n",
       "      <td>11.79</td>\n",
       "      <td>11.79</td>\n",
       "      <td>12.54</td>\n",
       "      <td>12.54</td>\n",
       "      <td>11.36</td>\n",
       "      <td>10.84</td>\n",
       "      <td>10.26</td>\n",
       "      <td>13.19</td>\n",
       "      <td>13.00</td>\n",
       "      <td>12.98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>196102</td>\n",
       "      <td>15.29</td>\n",
       "      <td>15.45</td>\n",
       "      <td>15.56</td>\n",
       "      <td>15.56</td>\n",
       "      <td>15.56</td>\n",
       "      <td>15.31</td>\n",
       "      <td>14.84</td>\n",
       "      <td>16.13</td>\n",
       "      <td>16.09</td>\n",
       "      <td>...</td>\n",
       "      <td>10.76</td>\n",
       "      <td>10.70</td>\n",
       "      <td>11.37</td>\n",
       "      <td>11.37</td>\n",
       "      <td>10.34</td>\n",
       "      <td>9.81</td>\n",
       "      <td>9.34</td>\n",
       "      <td>12.40</td>\n",
       "      <td>12.23</td>\n",
       "      <td>12.13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>196103</td>\n",
       "      <td>15.88</td>\n",
       "      <td>16.35</td>\n",
       "      <td>16.64</td>\n",
       "      <td>16.64</td>\n",
       "      <td>17.47</td>\n",
       "      <td>17.03</td>\n",
       "      <td>15.89</td>\n",
       "      <td>17.33</td>\n",
       "      <td>18.14</td>\n",
       "      <td>...</td>\n",
       "      <td>11.03</td>\n",
       "      <td>11.03</td>\n",
       "      <td>11.69</td>\n",
       "      <td>11.69</td>\n",
       "      <td>10.63</td>\n",
       "      <td>9.96</td>\n",
       "      <td>9.35</td>\n",
       "      <td>12.55</td>\n",
       "      <td>12.35</td>\n",
       "      <td>12.18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>196104</td>\n",
       "      <td>16.13</td>\n",
       "      <td>17.15</td>\n",
       "      <td>16.57</td>\n",
       "      <td>16.57</td>\n",
       "      <td>17.96</td>\n",
       "      <td>17.82</td>\n",
       "      <td>16.24</td>\n",
       "      <td>17.27</td>\n",
       "      <td>17.71</td>\n",
       "      <td>...</td>\n",
       "      <td>11.55</td>\n",
       "      <td>11.71</td>\n",
       "      <td>12.47</td>\n",
       "      <td>12.47</td>\n",
       "      <td>11.16</td>\n",
       "      <td>10.46</td>\n",
       "      <td>9.68</td>\n",
       "      <td>12.65</td>\n",
       "      <td>12.36</td>\n",
       "      <td>12.30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>196105</td>\n",
       "      <td>18.68</td>\n",
       "      <td>20.01</td>\n",
       "      <td>20.31</td>\n",
       "      <td>20.31</td>\n",
       "      <td>23.24</td>\n",
       "      <td>22.28</td>\n",
       "      <td>18.15</td>\n",
       "      <td>22.17</td>\n",
       "      <td>23.90</td>\n",
       "      <td>...</td>\n",
       "      <td>13.10</td>\n",
       "      <td>13.18</td>\n",
       "      <td>14.29</td>\n",
       "      <td>14.29</td>\n",
       "      <td>12.56</td>\n",
       "      <td>11.63</td>\n",
       "      <td>10.63</td>\n",
       "      <td>14.28</td>\n",
       "      <td>14.13</td>\n",
       "      <td>14.06</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 1446 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    FECHA    500    501    502    503    504    505    506    507    508  ...  \\\n",
       "0  196101  16.08  16.33  16.08  16.08  16.22  16.12  16.01  16.36  16.50  ...   \n",
       "1  196102  15.29  15.45  15.56  15.56  15.56  15.31  14.84  16.13  16.09  ...   \n",
       "2  196103  15.88  16.35  16.64  16.64  17.47  17.03  15.89  17.33  18.14  ...   \n",
       "3  196104  16.13  17.15  16.57  16.57  17.96  17.82  16.24  17.27  17.71  ...   \n",
       "4  196105  18.68  20.01  20.31  20.31  23.24  22.28  18.15  22.17  23.90  ...   \n",
       "\n",
       "    1935   1936   1937   1938   1939   1940   1941   1942   1943   1944  \n",
       "0  11.79  11.79  12.54  12.54  11.36  10.84  10.26  13.19  13.00  12.98  \n",
       "1  10.76  10.70  11.37  11.37  10.34   9.81   9.34  12.40  12.23  12.13  \n",
       "2  11.03  11.03  11.69  11.69  10.63   9.96   9.35  12.55  12.35  12.18  \n",
       "3  11.55  11.71  12.47  12.47  11.16  10.46   9.68  12.65  12.36  12.30  \n",
       "4  13.10  13.18  14.29  14.29  12.56  11.63  10.63  14.28  14.13  14.06  \n",
       "\n",
       "[5 rows x 1446 columns]"
      ]
     },
     "execution_count": 231,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data1.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "49b58a97",
   "metadata": {},
   "source": [
    "Ahora creo una columna con el valor medio de todas la demás columnas, que es con el que se va a trabajar"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "da6d19c6",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.insert(0,\"Temp_media\",)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 238,
   "id": "b7271e53",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>FECHA</th>\n",
       "      <th>500</th>\n",
       "      <th>501</th>\n",
       "      <th>502</th>\n",
       "      <th>503</th>\n",
       "      <th>504</th>\n",
       "      <th>505</th>\n",
       "      <th>506</th>\n",
       "      <th>507</th>\n",
       "      <th>508</th>\n",
       "      <th>...</th>\n",
       "      <th>1935</th>\n",
       "      <th>1936</th>\n",
       "      <th>1937</th>\n",
       "      <th>1938</th>\n",
       "      <th>1939</th>\n",
       "      <th>1940</th>\n",
       "      <th>1941</th>\n",
       "      <th>1942</th>\n",
       "      <th>1943</th>\n",
       "      <th>1944</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>196101</td>\n",
       "      <td>16.08</td>\n",
       "      <td>16.33</td>\n",
       "      <td>16.08</td>\n",
       "      <td>16.08</td>\n",
       "      <td>16.22</td>\n",
       "      <td>16.12</td>\n",
       "      <td>16.01</td>\n",
       "      <td>16.36</td>\n",
       "      <td>16.50</td>\n",
       "      <td>...</td>\n",
       "      <td>11.79</td>\n",
       "      <td>11.79</td>\n",
       "      <td>12.54</td>\n",
       "      <td>12.54</td>\n",
       "      <td>11.36</td>\n",
       "      <td>10.84</td>\n",
       "      <td>10.26</td>\n",
       "      <td>13.19</td>\n",
       "      <td>13.00</td>\n",
       "      <td>12.98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>196102</td>\n",
       "      <td>15.29</td>\n",
       "      <td>15.45</td>\n",
       "      <td>15.56</td>\n",
       "      <td>15.56</td>\n",
       "      <td>15.56</td>\n",
       "      <td>15.31</td>\n",
       "      <td>14.84</td>\n",
       "      <td>16.13</td>\n",
       "      <td>16.09</td>\n",
       "      <td>...</td>\n",
       "      <td>10.76</td>\n",
       "      <td>10.70</td>\n",
       "      <td>11.37</td>\n",
       "      <td>11.37</td>\n",
       "      <td>10.34</td>\n",
       "      <td>9.81</td>\n",
       "      <td>9.34</td>\n",
       "      <td>12.40</td>\n",
       "      <td>12.23</td>\n",
       "      <td>12.13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>196103</td>\n",
       "      <td>15.88</td>\n",
       "      <td>16.35</td>\n",
       "      <td>16.64</td>\n",
       "      <td>16.64</td>\n",
       "      <td>17.47</td>\n",
       "      <td>17.03</td>\n",
       "      <td>15.89</td>\n",
       "      <td>17.33</td>\n",
       "      <td>18.14</td>\n",
       "      <td>...</td>\n",
       "      <td>11.03</td>\n",
       "      <td>11.03</td>\n",
       "      <td>11.69</td>\n",
       "      <td>11.69</td>\n",
       "      <td>10.63</td>\n",
       "      <td>9.96</td>\n",
       "      <td>9.35</td>\n",
       "      <td>12.55</td>\n",
       "      <td>12.35</td>\n",
       "      <td>12.18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>196104</td>\n",
       "      <td>16.13</td>\n",
       "      <td>17.15</td>\n",
       "      <td>16.57</td>\n",
       "      <td>16.57</td>\n",
       "      <td>17.96</td>\n",
       "      <td>17.82</td>\n",
       "      <td>16.24</td>\n",
       "      <td>17.27</td>\n",
       "      <td>17.71</td>\n",
       "      <td>...</td>\n",
       "      <td>11.55</td>\n",
       "      <td>11.71</td>\n",
       "      <td>12.47</td>\n",
       "      <td>12.47</td>\n",
       "      <td>11.16</td>\n",
       "      <td>10.46</td>\n",
       "      <td>9.68</td>\n",
       "      <td>12.65</td>\n",
       "      <td>12.36</td>\n",
       "      <td>12.30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>196105</td>\n",
       "      <td>18.68</td>\n",
       "      <td>20.01</td>\n",
       "      <td>20.31</td>\n",
       "      <td>20.31</td>\n",
       "      <td>23.24</td>\n",
       "      <td>22.28</td>\n",
       "      <td>18.15</td>\n",
       "      <td>22.17</td>\n",
       "      <td>23.90</td>\n",
       "      <td>...</td>\n",
       "      <td>13.10</td>\n",
       "      <td>13.18</td>\n",
       "      <td>14.29</td>\n",
       "      <td>14.29</td>\n",
       "      <td>12.56</td>\n",
       "      <td>11.63</td>\n",
       "      <td>10.63</td>\n",
       "      <td>14.28</td>\n",
       "      <td>14.13</td>\n",
       "      <td>14.06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>475</th>\n",
       "      <td>200008</td>\n",
       "      <td>25.85</td>\n",
       "      <td>26.10</td>\n",
       "      <td>27.93</td>\n",
       "      <td>27.93</td>\n",
       "      <td>30.26</td>\n",
       "      <td>28.23</td>\n",
       "      <td>24.23</td>\n",
       "      <td>30.41</td>\n",
       "      <td>32.54</td>\n",
       "      <td>...</td>\n",
       "      <td>17.02</td>\n",
       "      <td>17.13</td>\n",
       "      <td>17.76</td>\n",
       "      <td>17.76</td>\n",
       "      <td>16.27</td>\n",
       "      <td>15.51</td>\n",
       "      <td>14.73</td>\n",
       "      <td>18.02</td>\n",
       "      <td>17.83</td>\n",
       "      <td>17.74</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>476</th>\n",
       "      <td>200009</td>\n",
       "      <td>23.85</td>\n",
       "      <td>23.96</td>\n",
       "      <td>24.68</td>\n",
       "      <td>24.68</td>\n",
       "      <td>25.41</td>\n",
       "      <td>24.74</td>\n",
       "      <td>23.13</td>\n",
       "      <td>26.15</td>\n",
       "      <td>26.24</td>\n",
       "      <td>...</td>\n",
       "      <td>16.65</td>\n",
       "      <td>16.65</td>\n",
       "      <td>17.66</td>\n",
       "      <td>17.66</td>\n",
       "      <td>16.10</td>\n",
       "      <td>15.27</td>\n",
       "      <td>14.49</td>\n",
       "      <td>18.02</td>\n",
       "      <td>17.90</td>\n",
       "      <td>17.76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>477</th>\n",
       "      <td>200010</td>\n",
       "      <td>22.34</td>\n",
       "      <td>22.46</td>\n",
       "      <td>22.61</td>\n",
       "      <td>22.61</td>\n",
       "      <td>23.28</td>\n",
       "      <td>22.86</td>\n",
       "      <td>21.68</td>\n",
       "      <td>23.28</td>\n",
       "      <td>23.46</td>\n",
       "      <td>...</td>\n",
       "      <td>15.29</td>\n",
       "      <td>15.25</td>\n",
       "      <td>15.90</td>\n",
       "      <td>15.90</td>\n",
       "      <td>14.76</td>\n",
       "      <td>14.14</td>\n",
       "      <td>13.57</td>\n",
       "      <td>16.62</td>\n",
       "      <td>16.43</td>\n",
       "      <td>16.40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>478</th>\n",
       "      <td>200011</td>\n",
       "      <td>18.06</td>\n",
       "      <td>18.09</td>\n",
       "      <td>17.82</td>\n",
       "      <td>17.82</td>\n",
       "      <td>17.67</td>\n",
       "      <td>17.76</td>\n",
       "      <td>17.96</td>\n",
       "      <td>17.95</td>\n",
       "      <td>17.76</td>\n",
       "      <td>...</td>\n",
       "      <td>13.46</td>\n",
       "      <td>13.45</td>\n",
       "      <td>13.95</td>\n",
       "      <td>13.95</td>\n",
       "      <td>13.12</td>\n",
       "      <td>12.67</td>\n",
       "      <td>12.25</td>\n",
       "      <td>14.85</td>\n",
       "      <td>14.65</td>\n",
       "      <td>14.59</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>479</th>\n",
       "      <td>200012</td>\n",
       "      <td>16.23</td>\n",
       "      <td>16.12</td>\n",
       "      <td>16.05</td>\n",
       "      <td>16.05</td>\n",
       "      <td>15.72</td>\n",
       "      <td>15.80</td>\n",
       "      <td>16.09</td>\n",
       "      <td>16.11</td>\n",
       "      <td>15.78</td>\n",
       "      <td>...</td>\n",
       "      <td>11.94</td>\n",
       "      <td>11.84</td>\n",
       "      <td>12.25</td>\n",
       "      <td>12.25</td>\n",
       "      <td>11.48</td>\n",
       "      <td>11.06</td>\n",
       "      <td>10.76</td>\n",
       "      <td>13.61</td>\n",
       "      <td>13.36</td>\n",
       "      <td>13.26</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>480 rows × 1446 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      FECHA    500    501    502    503    504    505    506    507    508  \\\n",
       "0    196101  16.08  16.33  16.08  16.08  16.22  16.12  16.01  16.36  16.50   \n",
       "1    196102  15.29  15.45  15.56  15.56  15.56  15.31  14.84  16.13  16.09   \n",
       "2    196103  15.88  16.35  16.64  16.64  17.47  17.03  15.89  17.33  18.14   \n",
       "3    196104  16.13  17.15  16.57  16.57  17.96  17.82  16.24  17.27  17.71   \n",
       "4    196105  18.68  20.01  20.31  20.31  23.24  22.28  18.15  22.17  23.90   \n",
       "..      ...    ...    ...    ...    ...    ...    ...    ...    ...    ...   \n",
       "475  200008  25.85  26.10  27.93  27.93  30.26  28.23  24.23  30.41  32.54   \n",
       "476  200009  23.85  23.96  24.68  24.68  25.41  24.74  23.13  26.15  26.24   \n",
       "477  200010  22.34  22.46  22.61  22.61  23.28  22.86  21.68  23.28  23.46   \n",
       "478  200011  18.06  18.09  17.82  17.82  17.67  17.76  17.96  17.95  17.76   \n",
       "479  200012  16.23  16.12  16.05  16.05  15.72  15.80  16.09  16.11  15.78   \n",
       "\n",
       "     ...   1935   1936   1937   1938   1939   1940   1941   1942   1943   1944  \n",
       "0    ...  11.79  11.79  12.54  12.54  11.36  10.84  10.26  13.19  13.00  12.98  \n",
       "1    ...  10.76  10.70  11.37  11.37  10.34   9.81   9.34  12.40  12.23  12.13  \n",
       "2    ...  11.03  11.03  11.69  11.69  10.63   9.96   9.35  12.55  12.35  12.18  \n",
       "3    ...  11.55  11.71  12.47  12.47  11.16  10.46   9.68  12.65  12.36  12.30  \n",
       "4    ...  13.10  13.18  14.29  14.29  12.56  11.63  10.63  14.28  14.13  14.06  \n",
       "..   ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...  \n",
       "475  ...  17.02  17.13  17.76  17.76  16.27  15.51  14.73  18.02  17.83  17.74  \n",
       "476  ...  16.65  16.65  17.66  17.66  16.10  15.27  14.49  18.02  17.90  17.76  \n",
       "477  ...  15.29  15.25  15.90  15.90  14.76  14.14  13.57  16.62  16.43  16.40  \n",
       "478  ...  13.46  13.45  13.95  13.95  13.12  12.67  12.25  14.85  14.65  14.59  \n",
       "479  ...  11.94  11.84  12.25  12.25  11.48  11.06  10.76  13.61  13.36  13.26  \n",
       "\n",
       "[480 rows x 1446 columns]"
      ]
     },
     "execution_count": 238,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data1"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6637c1bf",
   "metadata": {},
   "source": [
    "Voy a crear columna de temperaturas promedio"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 245,
   "id": "f8377a5f",
   "metadata": {},
   "outputs": [],
   "source": [
    "data1[\"Media\"]=(data1[\"500\"]+data1[\"501\"]+data1[\"502\"])/3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 246,
   "id": "9399fc2a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0      16.163333\n",
       "1      15.433333\n",
       "2      16.290000\n",
       "3      16.616667\n",
       "4      19.666667\n",
       "         ...    \n",
       "475    26.626667\n",
       "476    24.163333\n",
       "477    22.470000\n",
       "478    17.990000\n",
       "479    16.133333\n",
       "Name: Media, Length: 480, dtype: float64"
      ]
     },
     "execution_count": 246,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data1[\"Media\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 247,
   "id": "a7ee74a3",
   "metadata": {},
   "outputs": [],
   "source": [
    "data1[\"Promedio\"]=(data1[\"500\"]+data1[\"550\"]+data1[\"600\"]+data1[\"650\"]+data1[\"700\"]+data1[\"750\"]++data1[\"800\"]+data1[\"850\"]+data1[\"900\"]+data1[\"950\"]+data1[\"1000\"]+data1[\"1050\"]+data1[\"1100\"]+data1[\"1150\"]+data1[\"1200\"]+data1[\"1250\"]+data1[\"1300\"]+data1[\"1350\"]+data1[\"1400\"]+data1[\"1446\"])/20"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 248,
   "id": "0f9d4740",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0      13.1600\n",
       "1      12.3620\n",
       "2      14.6330\n",
       "3      15.4610\n",
       "4      20.7055\n",
       "        ...   \n",
       "475    30.9920\n",
       "476    24.5885\n",
       "477    19.8430\n",
       "478    14.0285\n",
       "479    11.6935\n",
       "Name: Promedio, Length: 480, dtype: float64"
      ]
     },
     "execution_count": 248,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data1[\"Promedio\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 249,
   "id": "292a0c0b",
   "metadata": {},
   "outputs": [],
   "source": [
    "dataprom=data1[\"Promedio\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 252,
   "id": "9e51b011",
   "metadata": {},
   "outputs": [
    {
     "ename": "AttributeError",
     "evalue": "'Series' object has no attribute 'type'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
      "Input \u001b[1;32mIn [252]\u001b[0m, in \u001b[0;36m<cell line: 1>\u001b[1;34m()\u001b[0m\n\u001b[1;32m----> 1\u001b[0m \u001b[43mdataprom\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mtype\u001b[49m\n",
      "File \u001b[1;32m~\\anaconda3\\envs\\Ciberseguridad\\lib\\site-packages\\pandas\\core\\generic.py:5575\u001b[0m, in \u001b[0;36mNDFrame.__getattr__\u001b[1;34m(self, name)\u001b[0m\n\u001b[0;32m   5568\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m (\n\u001b[0;32m   5569\u001b[0m     name \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_internal_names_set\n\u001b[0;32m   5570\u001b[0m     \u001b[38;5;129;01mand\u001b[39;00m name \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_metadata\n\u001b[0;32m   5571\u001b[0m     \u001b[38;5;129;01mand\u001b[39;00m name \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_accessors\n\u001b[0;32m   5572\u001b[0m     \u001b[38;5;129;01mand\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_info_axis\u001b[38;5;241m.\u001b[39m_can_hold_identifiers_and_holds_name(name)\n\u001b[0;32m   5573\u001b[0m ):\n\u001b[0;32m   5574\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m[name]\n\u001b[1;32m-> 5575\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mobject\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[38;5;21;43m__getattribute__\u001b[39;49m\u001b[43m(\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mname\u001b[49m\u001b[43m)\u001b[49m\n",
      "\u001b[1;31mAttributeError\u001b[0m: 'Series' object has no attribute 'type'"
     ]
    }
   ],
   "source": [
    "dataprom.type"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9b20e15f",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b72214e9",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "bd2b19f7",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "bd015ad9",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0b2590c5",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9151c42a",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5ad53349",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7182733a",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "31e30408",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "68a0f87a",
   "metadata": {},
   "outputs": [],
   "source": [
    "lm=smf.ols(formula=temperatura~)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a76133ac",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2d721599",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "691e5a72",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "aeb66919",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "860affaf",
   "metadata": {},
   "source": [
    "### Crear un subconjunto de datos"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "id": "4308f0c3",
   "metadata": {},
   "outputs": [],
   "source": [
    "Estacion500=data1_1961[\"500\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "id": "e9414537",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    16.08\n",
       "1    15.29\n",
       "2    15.88\n",
       "3    16.13\n",
       "4    18.68\n",
       "Name: 500, dtype: float64"
      ]
     },
     "execution_count": 77,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Estacion500.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "id": "803f2ca4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "pandas.core.series.Series"
      ]
     },
     "execution_count": 99,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(Estacion500)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "id": "8d251b66",
   "metadata": {},
   "outputs": [],
   "source": [
    "subset=data1_1961[[\"500\",\"600\",\"700\"]]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "id": "ddbcd7fa",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>500</th>\n",
       "      <th>600</th>\n",
       "      <th>700</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>16.08</td>\n",
       "      <td>18.09</td>\n",
       "      <td>18.86</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>15.29</td>\n",
       "      <td>14.18</td>\n",
       "      <td>16.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>15.88</td>\n",
       "      <td>18.35</td>\n",
       "      <td>19.96</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>16.13</td>\n",
       "      <td>21.63</td>\n",
       "      <td>22.58</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>18.68</td>\n",
       "      <td>24.34</td>\n",
       "      <td>24.84</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     500    600    700\n",
       "0  16.08  18.09  18.86\n",
       "1  15.29  14.18  16.10\n",
       "2  15.88  18.35  19.96\n",
       "3  16.13  21.63  22.58\n",
       "4  18.68  24.34  24.84"
      ]
     },
     "execution_count": 101,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "subset.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "id": "f4a940c3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "pandas.core.frame.DataFrame"
      ]
     },
     "execution_count": 102,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(subset)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "c5d82a2b",
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'data1_1961' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Input \u001b[1;32mIn [24]\u001b[0m, in \u001b[0;36m<cell line: 2>\u001b[1;34m()\u001b[0m\n\u001b[0;32m      1\u001b[0m desired_columns\u001b[38;5;241m=\u001b[39m[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m500\u001b[39m\u001b[38;5;124m\"\u001b[39m,\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m1000\u001b[39m\u001b[38;5;124m\"\u001b[39m,\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m1500\u001b[39m\u001b[38;5;124m\"\u001b[39m,\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m1944\u001b[39m\u001b[38;5;124m\"\u001b[39m]\n\u001b[1;32m----> 2\u001b[0m subset\u001b[38;5;241m=\u001b[39m\u001b[43mdata1_1961\u001b[49m[desired_columns]\n\u001b[0;32m      3\u001b[0m subset\u001b[38;5;241m.\u001b[39mhead()\n",
      "\u001b[1;31mNameError\u001b[0m: name 'data1_1961' is not defined"
     ]
    }
   ],
   "source": [
    "desired_columns=[\"500\",\"1000\",\"1500\",\"1944\"]\n",
    "subset=data1_1961[desired_columns]\n",
    "subset.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "a8495199",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['500',\n",
       " '600',\n",
       " '700',\n",
       " '800',\n",
       " '900',\n",
       " '1000',\n",
       " '1100',\n",
       " '1200',\n",
       " '1300',\n",
       " '1400',\n",
       " '1500',\n",
       " '1600',\n",
       " '1700',\n",
       " '1800',\n",
       " '1900',\n",
       " '2000',\n",
       " '2100',\n",
       " '2200',\n",
       " '2300',\n",
       " '2400',\n",
       " '2500',\n",
       " '2600',\n",
       " '2700',\n",
       " '2800',\n",
       " '2900']"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "desired_columns=[\"500\",\"600\",\"700\",\"800\",\"900\",\"1000\",\"1100\",\"1200\",\"1300\",\"1400\",\"1500\",\"1600\",\"1700\",\"1800\",\"1900\",\"2000\",\"2100\",\"2200\",\"2300\",\"2400\",\"2500\",\"2600\",\"2700\",\"2800\",\"2900\"]\n",
    "desired_columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "c829e285",
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'data1_1961' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Input \u001b[1;32mIn [23]\u001b[0m, in \u001b[0;36m<cell line: 1>\u001b[1;34m()\u001b[0m\n\u001b[1;32m----> 1\u001b[0m all_columns_list\u001b[38;5;241m=\u001b[39m\u001b[43mdata1_1961\u001b[49m\u001b[38;5;241m.\u001b[39mvalues\u001b[38;5;241m.\u001b[39mtolist()\n",
      "\u001b[1;31mNameError\u001b[0m: name 'data1_1961' is not defined"
     ]
    }
   ],
   "source": [
    "all_columns_list=data1_1961.values.tolist()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 219,
   "id": "59a09be7",
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'all_columns_list' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Input \u001b[1;32mIn [219]\u001b[0m, in \u001b[0;36m<cell line: 1>\u001b[1;34m()\u001b[0m\n\u001b[1;32m----> 1\u001b[0m \u001b[43mall_columns_list\u001b[49m\n",
      "\u001b[1;31mNameError\u001b[0m: name 'all_columns_list' is not defined"
     ]
    }
   ],
   "source": [
    "all_columns_list"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c002cdc6",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "a9484976",
   "metadata": {},
   "source": [
    "### Matriz de distancias en Python"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 218,
   "id": "af2cb5b4",
   "metadata": {},
   "outputs": [
    {
     "ename": "FileNotFoundError",
     "evalue": "[Errno 2] No such file or directory: 'TXMM_RCA_ECHAM5_20C3M_196101_200012 original.csv'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)",
      "Input \u001b[1;32mIn [218]\u001b[0m, in \u001b[0;36m<cell line: 6>\u001b[1;34m()\u001b[0m\n\u001b[0;32m      3\u001b[0m \u001b[38;5;28;01mimport\u001b[39;00m \u001b[38;5;21;01mos\u001b[39;00m\n\u001b[0;32m      4\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01msklearn\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m preprocessing \u001b[38;5;28;01mimport\u001b[39;00m \u001b[38;5;21;01mMinMaxScaler\u001b[39;00m\n\u001b[1;32m----> 6\u001b[0m data \u001b[38;5;241m=\u001b[39m \u001b[43mpd\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mread_csv\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mTXMM_RCA_ECHAM5_20C3M_196101_200012 original.csv\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m)\u001b[49m \u001b[38;5;66;03m# dataset\u001b[39;00m\n\u001b[0;32m      7\u001b[0m scaler \u001b[38;5;241m=\u001b[39m MinMaxScaler()\n",
      "File \u001b[1;32m~\\anaconda3\\envs\\Ciberseguridad\\lib\\site-packages\\pandas\\util\\_decorators.py:311\u001b[0m, in \u001b[0;36mdeprecate_nonkeyword_arguments.<locals>.decorate.<locals>.wrapper\u001b[1;34m(*args, **kwargs)\u001b[0m\n\u001b[0;32m    305\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mlen\u001b[39m(args) \u001b[38;5;241m>\u001b[39m num_allow_args:\n\u001b[0;32m    306\u001b[0m     warnings\u001b[38;5;241m.\u001b[39mwarn(\n\u001b[0;32m    307\u001b[0m         msg\u001b[38;5;241m.\u001b[39mformat(arguments\u001b[38;5;241m=\u001b[39marguments),\n\u001b[0;32m    308\u001b[0m         \u001b[38;5;167;01mFutureWarning\u001b[39;00m,\n\u001b[0;32m    309\u001b[0m         stacklevel\u001b[38;5;241m=\u001b[39mstacklevel,\n\u001b[0;32m    310\u001b[0m     )\n\u001b[1;32m--> 311\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m func(\u001b[38;5;241m*\u001b[39margs, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs)\n",
      "File \u001b[1;32m~\\anaconda3\\envs\\Ciberseguridad\\lib\\site-packages\\pandas\\io\\parsers\\readers.py:678\u001b[0m, in \u001b[0;36mread_csv\u001b[1;34m(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, squeeze, prefix, mangle_dupe_cols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, error_bad_lines, warn_bad_lines, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options)\u001b[0m\n\u001b[0;32m    663\u001b[0m kwds_defaults \u001b[38;5;241m=\u001b[39m _refine_defaults_read(\n\u001b[0;32m    664\u001b[0m     dialect,\n\u001b[0;32m    665\u001b[0m     delimiter,\n\u001b[1;32m   (...)\u001b[0m\n\u001b[0;32m    674\u001b[0m     defaults\u001b[38;5;241m=\u001b[39m{\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mdelimiter\u001b[39m\u001b[38;5;124m\"\u001b[39m: \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m,\u001b[39m\u001b[38;5;124m\"\u001b[39m},\n\u001b[0;32m    675\u001b[0m )\n\u001b[0;32m    676\u001b[0m kwds\u001b[38;5;241m.\u001b[39mupdate(kwds_defaults)\n\u001b[1;32m--> 678\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43m_read\u001b[49m\u001b[43m(\u001b[49m\u001b[43mfilepath_or_buffer\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mkwds\u001b[49m\u001b[43m)\u001b[49m\n",
      "File \u001b[1;32m~\\anaconda3\\envs\\Ciberseguridad\\lib\\site-packages\\pandas\\io\\parsers\\readers.py:575\u001b[0m, in \u001b[0;36m_read\u001b[1;34m(filepath_or_buffer, kwds)\u001b[0m\n\u001b[0;32m    572\u001b[0m _validate_names(kwds\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mnames\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m))\n\u001b[0;32m    574\u001b[0m \u001b[38;5;66;03m# Create the parser.\u001b[39;00m\n\u001b[1;32m--> 575\u001b[0m parser \u001b[38;5;241m=\u001b[39m TextFileReader(filepath_or_buffer, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwds)\n\u001b[0;32m    577\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m chunksize \u001b[38;5;129;01mor\u001b[39;00m iterator:\n\u001b[0;32m    578\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m parser\n",
      "File \u001b[1;32m~\\anaconda3\\envs\\Ciberseguridad\\lib\\site-packages\\pandas\\io\\parsers\\readers.py:932\u001b[0m, in \u001b[0;36mTextFileReader.__init__\u001b[1;34m(self, f, engine, **kwds)\u001b[0m\n\u001b[0;32m    929\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mhas_index_names\u001b[39m\u001b[38;5;124m\"\u001b[39m] \u001b[38;5;241m=\u001b[39m kwds[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mhas_index_names\u001b[39m\u001b[38;5;124m\"\u001b[39m]\n\u001b[0;32m    931\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles: IOHandles \u001b[38;5;241m|\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[1;32m--> 932\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_engine \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_make_engine\u001b[49m\u001b[43m(\u001b[49m\u001b[43mf\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mengine\u001b[49m\u001b[43m)\u001b[49m\n",
      "File \u001b[1;32m~\\anaconda3\\envs\\Ciberseguridad\\lib\\site-packages\\pandas\\io\\parsers\\readers.py:1216\u001b[0m, in \u001b[0;36mTextFileReader._make_engine\u001b[1;34m(self, f, engine)\u001b[0m\n\u001b[0;32m   1212\u001b[0m     mode \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mrb\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m   1213\u001b[0m \u001b[38;5;66;03m# error: No overload variant of \"get_handle\" matches argument types\u001b[39;00m\n\u001b[0;32m   1214\u001b[0m \u001b[38;5;66;03m# \"Union[str, PathLike[str], ReadCsvBuffer[bytes], ReadCsvBuffer[str]]\"\u001b[39;00m\n\u001b[0;32m   1215\u001b[0m \u001b[38;5;66;03m# , \"str\", \"bool\", \"Any\", \"Any\", \"Any\", \"Any\", \"Any\"\u001b[39;00m\n\u001b[1;32m-> 1216\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles \u001b[38;5;241m=\u001b[39m \u001b[43mget_handle\u001b[49m\u001b[43m(\u001b[49m\u001b[43m  \u001b[49m\u001b[38;5;66;43;03m# type: ignore[call-overload]\u001b[39;49;00m\n\u001b[0;32m   1217\u001b[0m \u001b[43m    \u001b[49m\u001b[43mf\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m   1218\u001b[0m \u001b[43m    \u001b[49m\u001b[43mmode\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m   1219\u001b[0m \u001b[43m    \u001b[49m\u001b[43mencoding\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43moptions\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mencoding\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mNone\u001b[39;49;00m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m   1220\u001b[0m \u001b[43m    \u001b[49m\u001b[43mcompression\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43moptions\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mcompression\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mNone\u001b[39;49;00m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m   1221\u001b[0m \u001b[43m    \u001b[49m\u001b[43mmemory_map\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43moptions\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mmemory_map\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mFalse\u001b[39;49;00m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m   1222\u001b[0m \u001b[43m    \u001b[49m\u001b[43mis_text\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mis_text\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m   1223\u001b[0m \u001b[43m    \u001b[49m\u001b[43merrors\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43moptions\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mencoding_errors\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mstrict\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m   1224\u001b[0m \u001b[43m    \u001b[49m\u001b[43mstorage_options\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43moptions\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mstorage_options\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mNone\u001b[39;49;00m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m   1225\u001b[0m \u001b[43m\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m   1226\u001b[0m \u001b[38;5;28;01massert\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[0;32m   1227\u001b[0m f \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles\u001b[38;5;241m.\u001b[39mhandle\n",
      "File \u001b[1;32m~\\anaconda3\\envs\\Ciberseguridad\\lib\\site-packages\\pandas\\io\\common.py:786\u001b[0m, in \u001b[0;36mget_handle\u001b[1;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)\u001b[0m\n\u001b[0;32m    781\u001b[0m \u001b[38;5;28;01melif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(handle, \u001b[38;5;28mstr\u001b[39m):\n\u001b[0;32m    782\u001b[0m     \u001b[38;5;66;03m# Check whether the filename is to be opened in binary mode.\u001b[39;00m\n\u001b[0;32m    783\u001b[0m     \u001b[38;5;66;03m# Binary mode does not support 'encoding' and 'newline'.\u001b[39;00m\n\u001b[0;32m    784\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m ioargs\u001b[38;5;241m.\u001b[39mencoding \u001b[38;5;129;01mand\u001b[39;00m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mb\u001b[39m\u001b[38;5;124m\"\u001b[39m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;129;01min\u001b[39;00m ioargs\u001b[38;5;241m.\u001b[39mmode:\n\u001b[0;32m    785\u001b[0m         \u001b[38;5;66;03m# Encoding\u001b[39;00m\n\u001b[1;32m--> 786\u001b[0m         handle \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mopen\u001b[39;49m\u001b[43m(\u001b[49m\n\u001b[0;32m    787\u001b[0m \u001b[43m            \u001b[49m\u001b[43mhandle\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m    788\u001b[0m \u001b[43m            \u001b[49m\u001b[43mioargs\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mmode\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m    789\u001b[0m \u001b[43m            \u001b[49m\u001b[43mencoding\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mioargs\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mencoding\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m    790\u001b[0m \u001b[43m            \u001b[49m\u001b[43merrors\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43merrors\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m    791\u001b[0m \u001b[43m            \u001b[49m\u001b[43mnewline\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\n\u001b[0;32m    792\u001b[0m \u001b[43m        \u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m    793\u001b[0m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[0;32m    794\u001b[0m         \u001b[38;5;66;03m# Binary mode\u001b[39;00m\n\u001b[0;32m    795\u001b[0m         handle \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mopen\u001b[39m(handle, ioargs\u001b[38;5;241m.\u001b[39mmode)\n",
      "\u001b[1;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: 'TXMM_RCA_ECHAM5_20C3M_196101_200012 original.csv'"
     ]
    }
   ],
   "source": [
    "from scipy.spatial import distance_matrix\n",
    "import pandas as pd\n",
    "import os\n",
    "from sklearn. preprocessing import MinMaxScaler\n",
    "\n",
    "data = pd.read_csv(\"TXMM_RCA_ECHAM5_20C3M_196101_200012 original.csv\") # dataset\n",
    "scaler = MinMaxScaler()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "00ba7e96",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "084adce8",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "34014643",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b330be50",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import os\n",
    "from sklearn.preprocessing import MinMaxScaler\n",
    "#Changing the working directory to the specified path--\n",
    "os.chdir(\"D:/Normalize - Loan_Defaulter\")\n",
    " \n",
    "data = pd.read_csv(\"bank-loan.csv\") # dataset\n",
    "scaler = MinMaxScaler()\n",
    " \n",
    "loan=pd.DataFrame(scaler.fit_transform(data),\n",
    "            columns=data.columns, index=data.index) \n",
    "print(loan)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 209,
   "id": "8615f7d5",
   "metadata": {},
   "outputs": [],
   "source": [
    "data1=pd.read_csv(\"../Dataset/TXMM_RCA_ECHAM5_20C3M_196101_200012 original.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 210,
   "id": "c2437ad8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>FECHA</th>\n",
       "      <th>500</th>\n",
       "      <th>501</th>\n",
       "      <th>502</th>\n",
       "      <th>503</th>\n",
       "      <th>504</th>\n",
       "      <th>505</th>\n",
       "      <th>506</th>\n",
       "      <th>507</th>\n",
       "      <th>508</th>\n",
       "      <th>...</th>\n",
       "      <th>1935</th>\n",
       "      <th>1936</th>\n",
       "      <th>1937</th>\n",
       "      <th>1938</th>\n",
       "      <th>1939</th>\n",
       "      <th>1940</th>\n",
       "      <th>1941</th>\n",
       "      <th>1942</th>\n",
       "      <th>1943</th>\n",
       "      <th>1944</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>196101</td>\n",
       "      <td>16.08</td>\n",
       "      <td>16.33</td>\n",
       "      <td>16.08</td>\n",
       "      <td>16.08</td>\n",
       "      <td>16.22</td>\n",
       "      <td>16.12</td>\n",
       "      <td>16.01</td>\n",
       "      <td>16.36</td>\n",
       "      <td>16.50</td>\n",
       "      <td>...</td>\n",
       "      <td>11.79</td>\n",
       "      <td>11.79</td>\n",
       "      <td>12.54</td>\n",
       "      <td>12.54</td>\n",
       "      <td>11.36</td>\n",
       "      <td>10.84</td>\n",
       "      <td>10.26</td>\n",
       "      <td>13.19</td>\n",
       "      <td>13.00</td>\n",
       "      <td>12.98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>196102</td>\n",
       "      <td>15.29</td>\n",
       "      <td>15.45</td>\n",
       "      <td>15.56</td>\n",
       "      <td>15.56</td>\n",
       "      <td>15.56</td>\n",
       "      <td>15.31</td>\n",
       "      <td>14.84</td>\n",
       "      <td>16.13</td>\n",
       "      <td>16.09</td>\n",
       "      <td>...</td>\n",
       "      <td>10.76</td>\n",
       "      <td>10.70</td>\n",
       "      <td>11.37</td>\n",
       "      <td>11.37</td>\n",
       "      <td>10.34</td>\n",
       "      <td>9.81</td>\n",
       "      <td>9.34</td>\n",
       "      <td>12.40</td>\n",
       "      <td>12.23</td>\n",
       "      <td>12.13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>196103</td>\n",
       "      <td>15.88</td>\n",
       "      <td>16.35</td>\n",
       "      <td>16.64</td>\n",
       "      <td>16.64</td>\n",
       "      <td>17.47</td>\n",
       "      <td>17.03</td>\n",
       "      <td>15.89</td>\n",
       "      <td>17.33</td>\n",
       "      <td>18.14</td>\n",
       "      <td>...</td>\n",
       "      <td>11.03</td>\n",
       "      <td>11.03</td>\n",
       "      <td>11.69</td>\n",
       "      <td>11.69</td>\n",
       "      <td>10.63</td>\n",
       "      <td>9.96</td>\n",
       "      <td>9.35</td>\n",
       "      <td>12.55</td>\n",
       "      <td>12.35</td>\n",
       "      <td>12.18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>196104</td>\n",
       "      <td>16.13</td>\n",
       "      <td>17.15</td>\n",
       "      <td>16.57</td>\n",
       "      <td>16.57</td>\n",
       "      <td>17.96</td>\n",
       "      <td>17.82</td>\n",
       "      <td>16.24</td>\n",
       "      <td>17.27</td>\n",
       "      <td>17.71</td>\n",
       "      <td>...</td>\n",
       "      <td>11.55</td>\n",
       "      <td>11.71</td>\n",
       "      <td>12.47</td>\n",
       "      <td>12.47</td>\n",
       "      <td>11.16</td>\n",
       "      <td>10.46</td>\n",
       "      <td>9.68</td>\n",
       "      <td>12.65</td>\n",
       "      <td>12.36</td>\n",
       "      <td>12.30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>196105</td>\n",
       "      <td>18.68</td>\n",
       "      <td>20.01</td>\n",
       "      <td>20.31</td>\n",
       "      <td>20.31</td>\n",
       "      <td>23.24</td>\n",
       "      <td>22.28</td>\n",
       "      <td>18.15</td>\n",
       "      <td>22.17</td>\n",
       "      <td>23.90</td>\n",
       "      <td>...</td>\n",
       "      <td>13.10</td>\n",
       "      <td>13.18</td>\n",
       "      <td>14.29</td>\n",
       "      <td>14.29</td>\n",
       "      <td>12.56</td>\n",
       "      <td>11.63</td>\n",
       "      <td>10.63</td>\n",
       "      <td>14.28</td>\n",
       "      <td>14.13</td>\n",
       "      <td>14.06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>475</th>\n",
       "      <td>200008</td>\n",
       "      <td>25.85</td>\n",
       "      <td>26.10</td>\n",
       "      <td>27.93</td>\n",
       "      <td>27.93</td>\n",
       "      <td>30.26</td>\n",
       "      <td>28.23</td>\n",
       "      <td>24.23</td>\n",
       "      <td>30.41</td>\n",
       "      <td>32.54</td>\n",
       "      <td>...</td>\n",
       "      <td>17.02</td>\n",
       "      <td>17.13</td>\n",
       "      <td>17.76</td>\n",
       "      <td>17.76</td>\n",
       "      <td>16.27</td>\n",
       "      <td>15.51</td>\n",
       "      <td>14.73</td>\n",
       "      <td>18.02</td>\n",
       "      <td>17.83</td>\n",
       "      <td>17.74</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>476</th>\n",
       "      <td>200009</td>\n",
       "      <td>23.85</td>\n",
       "      <td>23.96</td>\n",
       "      <td>24.68</td>\n",
       "      <td>24.68</td>\n",
       "      <td>25.41</td>\n",
       "      <td>24.74</td>\n",
       "      <td>23.13</td>\n",
       "      <td>26.15</td>\n",
       "      <td>26.24</td>\n",
       "      <td>...</td>\n",
       "      <td>16.65</td>\n",
       "      <td>16.65</td>\n",
       "      <td>17.66</td>\n",
       "      <td>17.66</td>\n",
       "      <td>16.10</td>\n",
       "      <td>15.27</td>\n",
       "      <td>14.49</td>\n",
       "      <td>18.02</td>\n",
       "      <td>17.90</td>\n",
       "      <td>17.76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>477</th>\n",
       "      <td>200010</td>\n",
       "      <td>22.34</td>\n",
       "      <td>22.46</td>\n",
       "      <td>22.61</td>\n",
       "      <td>22.61</td>\n",
       "      <td>23.28</td>\n",
       "      <td>22.86</td>\n",
       "      <td>21.68</td>\n",
       "      <td>23.28</td>\n",
       "      <td>23.46</td>\n",
       "      <td>...</td>\n",
       "      <td>15.29</td>\n",
       "      <td>15.25</td>\n",
       "      <td>15.90</td>\n",
       "      <td>15.90</td>\n",
       "      <td>14.76</td>\n",
       "      <td>14.14</td>\n",
       "      <td>13.57</td>\n",
       "      <td>16.62</td>\n",
       "      <td>16.43</td>\n",
       "      <td>16.40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>478</th>\n",
       "      <td>200011</td>\n",
       "      <td>18.06</td>\n",
       "      <td>18.09</td>\n",
       "      <td>17.82</td>\n",
       "      <td>17.82</td>\n",
       "      <td>17.67</td>\n",
       "      <td>17.76</td>\n",
       "      <td>17.96</td>\n",
       "      <td>17.95</td>\n",
       "      <td>17.76</td>\n",
       "      <td>...</td>\n",
       "      <td>13.46</td>\n",
       "      <td>13.45</td>\n",
       "      <td>13.95</td>\n",
       "      <td>13.95</td>\n",
       "      <td>13.12</td>\n",
       "      <td>12.67</td>\n",
       "      <td>12.25</td>\n",
       "      <td>14.85</td>\n",
       "      <td>14.65</td>\n",
       "      <td>14.59</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>479</th>\n",
       "      <td>200012</td>\n",
       "      <td>16.23</td>\n",
       "      <td>16.12</td>\n",
       "      <td>16.05</td>\n",
       "      <td>16.05</td>\n",
       "      <td>15.72</td>\n",
       "      <td>15.80</td>\n",
       "      <td>16.09</td>\n",
       "      <td>16.11</td>\n",
       "      <td>15.78</td>\n",
       "      <td>...</td>\n",
       "      <td>11.94</td>\n",
       "      <td>11.84</td>\n",
       "      <td>12.25</td>\n",
       "      <td>12.25</td>\n",
       "      <td>11.48</td>\n",
       "      <td>11.06</td>\n",
       "      <td>10.76</td>\n",
       "      <td>13.61</td>\n",
       "      <td>13.36</td>\n",
       "      <td>13.26</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>480 rows × 1446 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      FECHA    500    501    502    503    504    505    506    507    508  \\\n",
       "0    196101  16.08  16.33  16.08  16.08  16.22  16.12  16.01  16.36  16.50   \n",
       "1    196102  15.29  15.45  15.56  15.56  15.56  15.31  14.84  16.13  16.09   \n",
       "2    196103  15.88  16.35  16.64  16.64  17.47  17.03  15.89  17.33  18.14   \n",
       "3    196104  16.13  17.15  16.57  16.57  17.96  17.82  16.24  17.27  17.71   \n",
       "4    196105  18.68  20.01  20.31  20.31  23.24  22.28  18.15  22.17  23.90   \n",
       "..      ...    ...    ...    ...    ...    ...    ...    ...    ...    ...   \n",
       "475  200008  25.85  26.10  27.93  27.93  30.26  28.23  24.23  30.41  32.54   \n",
       "476  200009  23.85  23.96  24.68  24.68  25.41  24.74  23.13  26.15  26.24   \n",
       "477  200010  22.34  22.46  22.61  22.61  23.28  22.86  21.68  23.28  23.46   \n",
       "478  200011  18.06  18.09  17.82  17.82  17.67  17.76  17.96  17.95  17.76   \n",
       "479  200012  16.23  16.12  16.05  16.05  15.72  15.80  16.09  16.11  15.78   \n",
       "\n",
       "     ...   1935   1936   1937   1938   1939   1940   1941   1942   1943   1944  \n",
       "0    ...  11.79  11.79  12.54  12.54  11.36  10.84  10.26  13.19  13.00  12.98  \n",
       "1    ...  10.76  10.70  11.37  11.37  10.34   9.81   9.34  12.40  12.23  12.13  \n",
       "2    ...  11.03  11.03  11.69  11.69  10.63   9.96   9.35  12.55  12.35  12.18  \n",
       "3    ...  11.55  11.71  12.47  12.47  11.16  10.46   9.68  12.65  12.36  12.30  \n",
       "4    ...  13.10  13.18  14.29  14.29  12.56  11.63  10.63  14.28  14.13  14.06  \n",
       "..   ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...  \n",
       "475  ...  17.02  17.13  17.76  17.76  16.27  15.51  14.73  18.02  17.83  17.74  \n",
       "476  ...  16.65  16.65  17.66  17.66  16.10  15.27  14.49  18.02  17.90  17.76  \n",
       "477  ...  15.29  15.25  15.90  15.90  14.76  14.14  13.57  16.62  16.43  16.40  \n",
       "478  ...  13.46  13.45  13.95  13.95  13.12  12.67  12.25  14.85  14.65  14.59  \n",
       "479  ...  11.94  11.84  12.25  12.25  11.48  11.06  10.76  13.61  13.36  13.26  \n",
       "\n",
       "[480 rows x 1446 columns]"
      ]
     },
     "execution_count": 210,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 211,
   "id": "7e4d7a4c",
   "metadata": {},
   "outputs": [],
   "source": [
    "datascala=data1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 212,
   "id": "aaed899e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>FECHA</th>\n",
       "      <th>500</th>\n",
       "      <th>501</th>\n",
       "      <th>502</th>\n",
       "      <th>503</th>\n",
       "      <th>504</th>\n",
       "      <th>505</th>\n",
       "      <th>506</th>\n",
       "      <th>507</th>\n",
       "      <th>508</th>\n",
       "      <th>...</th>\n",
       "      <th>1935</th>\n",
       "      <th>1936</th>\n",
       "      <th>1937</th>\n",
       "      <th>1938</th>\n",
       "      <th>1939</th>\n",
       "      <th>1940</th>\n",
       "      <th>1941</th>\n",
       "      <th>1942</th>\n",
       "      <th>1943</th>\n",
       "      <th>1944</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>196101</td>\n",
       "      <td>16.08</td>\n",
       "      <td>16.33</td>\n",
       "      <td>16.08</td>\n",
       "      <td>16.08</td>\n",
       "      <td>16.22</td>\n",
       "      <td>16.12</td>\n",
       "      <td>16.01</td>\n",
       "      <td>16.36</td>\n",
       "      <td>16.50</td>\n",
       "      <td>...</td>\n",
       "      <td>11.79</td>\n",
       "      <td>11.79</td>\n",
       "      <td>12.54</td>\n",
       "      <td>12.54</td>\n",
       "      <td>11.36</td>\n",
       "      <td>10.84</td>\n",
       "      <td>10.26</td>\n",
       "      <td>13.19</td>\n",
       "      <td>13.00</td>\n",
       "      <td>12.98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>196102</td>\n",
       "      <td>15.29</td>\n",
       "      <td>15.45</td>\n",
       "      <td>15.56</td>\n",
       "      <td>15.56</td>\n",
       "      <td>15.56</td>\n",
       "      <td>15.31</td>\n",
       "      <td>14.84</td>\n",
       "      <td>16.13</td>\n",
       "      <td>16.09</td>\n",
       "      <td>...</td>\n",
       "      <td>10.76</td>\n",
       "      <td>10.70</td>\n",
       "      <td>11.37</td>\n",
       "      <td>11.37</td>\n",
       "      <td>10.34</td>\n",
       "      <td>9.81</td>\n",
       "      <td>9.34</td>\n",
       "      <td>12.40</td>\n",
       "      <td>12.23</td>\n",
       "      <td>12.13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>196103</td>\n",
       "      <td>15.88</td>\n",
       "      <td>16.35</td>\n",
       "      <td>16.64</td>\n",
       "      <td>16.64</td>\n",
       "      <td>17.47</td>\n",
       "      <td>17.03</td>\n",
       "      <td>15.89</td>\n",
       "      <td>17.33</td>\n",
       "      <td>18.14</td>\n",
       "      <td>...</td>\n",
       "      <td>11.03</td>\n",
       "      <td>11.03</td>\n",
       "      <td>11.69</td>\n",
       "      <td>11.69</td>\n",
       "      <td>10.63</td>\n",
       "      <td>9.96</td>\n",
       "      <td>9.35</td>\n",
       "      <td>12.55</td>\n",
       "      <td>12.35</td>\n",
       "      <td>12.18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>196104</td>\n",
       "      <td>16.13</td>\n",
       "      <td>17.15</td>\n",
       "      <td>16.57</td>\n",
       "      <td>16.57</td>\n",
       "      <td>17.96</td>\n",
       "      <td>17.82</td>\n",
       "      <td>16.24</td>\n",
       "      <td>17.27</td>\n",
       "      <td>17.71</td>\n",
       "      <td>...</td>\n",
       "      <td>11.55</td>\n",
       "      <td>11.71</td>\n",
       "      <td>12.47</td>\n",
       "      <td>12.47</td>\n",
       "      <td>11.16</td>\n",
       "      <td>10.46</td>\n",
       "      <td>9.68</td>\n",
       "      <td>12.65</td>\n",
       "      <td>12.36</td>\n",
       "      <td>12.30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>196105</td>\n",
       "      <td>18.68</td>\n",
       "      <td>20.01</td>\n",
       "      <td>20.31</td>\n",
       "      <td>20.31</td>\n",
       "      <td>23.24</td>\n",
       "      <td>22.28</td>\n",
       "      <td>18.15</td>\n",
       "      <td>22.17</td>\n",
       "      <td>23.90</td>\n",
       "      <td>...</td>\n",
       "      <td>13.10</td>\n",
       "      <td>13.18</td>\n",
       "      <td>14.29</td>\n",
       "      <td>14.29</td>\n",
       "      <td>12.56</td>\n",
       "      <td>11.63</td>\n",
       "      <td>10.63</td>\n",
       "      <td>14.28</td>\n",
       "      <td>14.13</td>\n",
       "      <td>14.06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>475</th>\n",
       "      <td>200008</td>\n",
       "      <td>25.85</td>\n",
       "      <td>26.10</td>\n",
       "      <td>27.93</td>\n",
       "      <td>27.93</td>\n",
       "      <td>30.26</td>\n",
       "      <td>28.23</td>\n",
       "      <td>24.23</td>\n",
       "      <td>30.41</td>\n",
       "      <td>32.54</td>\n",
       "      <td>...</td>\n",
       "      <td>17.02</td>\n",
       "      <td>17.13</td>\n",
       "      <td>17.76</td>\n",
       "      <td>17.76</td>\n",
       "      <td>16.27</td>\n",
       "      <td>15.51</td>\n",
       "      <td>14.73</td>\n",
       "      <td>18.02</td>\n",
       "      <td>17.83</td>\n",
       "      <td>17.74</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>476</th>\n",
       "      <td>200009</td>\n",
       "      <td>23.85</td>\n",
       "      <td>23.96</td>\n",
       "      <td>24.68</td>\n",
       "      <td>24.68</td>\n",
       "      <td>25.41</td>\n",
       "      <td>24.74</td>\n",
       "      <td>23.13</td>\n",
       "      <td>26.15</td>\n",
       "      <td>26.24</td>\n",
       "      <td>...</td>\n",
       "      <td>16.65</td>\n",
       "      <td>16.65</td>\n",
       "      <td>17.66</td>\n",
       "      <td>17.66</td>\n",
       "      <td>16.10</td>\n",
       "      <td>15.27</td>\n",
       "      <td>14.49</td>\n",
       "      <td>18.02</td>\n",
       "      <td>17.90</td>\n",
       "      <td>17.76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>477</th>\n",
       "      <td>200010</td>\n",
       "      <td>22.34</td>\n",
       "      <td>22.46</td>\n",
       "      <td>22.61</td>\n",
       "      <td>22.61</td>\n",
       "      <td>23.28</td>\n",
       "      <td>22.86</td>\n",
       "      <td>21.68</td>\n",
       "      <td>23.28</td>\n",
       "      <td>23.46</td>\n",
       "      <td>...</td>\n",
       "      <td>15.29</td>\n",
       "      <td>15.25</td>\n",
       "      <td>15.90</td>\n",
       "      <td>15.90</td>\n",
       "      <td>14.76</td>\n",
       "      <td>14.14</td>\n",
       "      <td>13.57</td>\n",
       "      <td>16.62</td>\n",
       "      <td>16.43</td>\n",
       "      <td>16.40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>478</th>\n",
       "      <td>200011</td>\n",
       "      <td>18.06</td>\n",
       "      <td>18.09</td>\n",
       "      <td>17.82</td>\n",
       "      <td>17.82</td>\n",
       "      <td>17.67</td>\n",
       "      <td>17.76</td>\n",
       "      <td>17.96</td>\n",
       "      <td>17.95</td>\n",
       "      <td>17.76</td>\n",
       "      <td>...</td>\n",
       "      <td>13.46</td>\n",
       "      <td>13.45</td>\n",
       "      <td>13.95</td>\n",
       "      <td>13.95</td>\n",
       "      <td>13.12</td>\n",
       "      <td>12.67</td>\n",
       "      <td>12.25</td>\n",
       "      <td>14.85</td>\n",
       "      <td>14.65</td>\n",
       "      <td>14.59</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>479</th>\n",
       "      <td>200012</td>\n",
       "      <td>16.23</td>\n",
       "      <td>16.12</td>\n",
       "      <td>16.05</td>\n",
       "      <td>16.05</td>\n",
       "      <td>15.72</td>\n",
       "      <td>15.80</td>\n",
       "      <td>16.09</td>\n",
       "      <td>16.11</td>\n",
       "      <td>15.78</td>\n",
       "      <td>...</td>\n",
       "      <td>11.94</td>\n",
       "      <td>11.84</td>\n",
       "      <td>12.25</td>\n",
       "      <td>12.25</td>\n",
       "      <td>11.48</td>\n",
       "      <td>11.06</td>\n",
       "      <td>10.76</td>\n",
       "      <td>13.61</td>\n",
       "      <td>13.36</td>\n",
       "      <td>13.26</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>480 rows × 1446 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      FECHA    500    501    502    503    504    505    506    507    508  \\\n",
       "0    196101  16.08  16.33  16.08  16.08  16.22  16.12  16.01  16.36  16.50   \n",
       "1    196102  15.29  15.45  15.56  15.56  15.56  15.31  14.84  16.13  16.09   \n",
       "2    196103  15.88  16.35  16.64  16.64  17.47  17.03  15.89  17.33  18.14   \n",
       "3    196104  16.13  17.15  16.57  16.57  17.96  17.82  16.24  17.27  17.71   \n",
       "4    196105  18.68  20.01  20.31  20.31  23.24  22.28  18.15  22.17  23.90   \n",
       "..      ...    ...    ...    ...    ...    ...    ...    ...    ...    ...   \n",
       "475  200008  25.85  26.10  27.93  27.93  30.26  28.23  24.23  30.41  32.54   \n",
       "476  200009  23.85  23.96  24.68  24.68  25.41  24.74  23.13  26.15  26.24   \n",
       "477  200010  22.34  22.46  22.61  22.61  23.28  22.86  21.68  23.28  23.46   \n",
       "478  200011  18.06  18.09  17.82  17.82  17.67  17.76  17.96  17.95  17.76   \n",
       "479  200012  16.23  16.12  16.05  16.05  15.72  15.80  16.09  16.11  15.78   \n",
       "\n",
       "     ...   1935   1936   1937   1938   1939   1940   1941   1942   1943   1944  \n",
       "0    ...  11.79  11.79  12.54  12.54  11.36  10.84  10.26  13.19  13.00  12.98  \n",
       "1    ...  10.76  10.70  11.37  11.37  10.34   9.81   9.34  12.40  12.23  12.13  \n",
       "2    ...  11.03  11.03  11.69  11.69  10.63   9.96   9.35  12.55  12.35  12.18  \n",
       "3    ...  11.55  11.71  12.47  12.47  11.16  10.46   9.68  12.65  12.36  12.30  \n",
       "4    ...  13.10  13.18  14.29  14.29  12.56  11.63  10.63  14.28  14.13  14.06  \n",
       "..   ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...  \n",
       "475  ...  17.02  17.13  17.76  17.76  16.27  15.51  14.73  18.02  17.83  17.74  \n",
       "476  ...  16.65  16.65  17.66  17.66  16.10  15.27  14.49  18.02  17.90  17.76  \n",
       "477  ...  15.29  15.25  15.90  15.90  14.76  14.14  13.57  16.62  16.43  16.40  \n",
       "478  ...  13.46  13.45  13.95  13.95  13.12  12.67  12.25  14.85  14.65  14.59  \n",
       "479  ...  11.94  11.84  12.25  12.25  11.48  11.06  10.76  13.61  13.36  13.26  \n",
       "\n",
       "[480 rows x 1446 columns]"
      ]
     },
     "execution_count": 212,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "datascala"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 213,
   "id": "c3fb56ac",
   "metadata": {},
   "outputs": [],
   "source": [
    "scaler = MinMaxScaler()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 214,
   "id": "0dd8b0db",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>FECHA</th>\n",
       "      <th>500</th>\n",
       "      <th>501</th>\n",
       "      <th>502</th>\n",
       "      <th>503</th>\n",
       "      <th>504</th>\n",
       "      <th>505</th>\n",
       "      <th>506</th>\n",
       "      <th>507</th>\n",
       "      <th>508</th>\n",
       "      <th>...</th>\n",
       "      <th>1935</th>\n",
       "      <th>1936</th>\n",
       "      <th>1937</th>\n",
       "      <th>1938</th>\n",
       "      <th>1939</th>\n",
       "      <th>1940</th>\n",
       "      <th>1941</th>\n",
       "      <th>1942</th>\n",
       "      <th>1943</th>\n",
       "      <th>1944</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>196101</td>\n",
       "      <td>16.08</td>\n",
       "      <td>16.33</td>\n",
       "      <td>16.08</td>\n",
       "      <td>16.08</td>\n",
       "      <td>16.22</td>\n",
       "      <td>16.12</td>\n",
       "      <td>16.01</td>\n",
       "      <td>16.36</td>\n",
       "      <td>16.50</td>\n",
       "      <td>...</td>\n",
       "      <td>11.79</td>\n",
       "      <td>11.79</td>\n",
       "      <td>12.54</td>\n",
       "      <td>12.54</td>\n",
       "      <td>11.36</td>\n",
       "      <td>10.84</td>\n",
       "      <td>10.26</td>\n",
       "      <td>13.19</td>\n",
       "      <td>13.00</td>\n",
       "      <td>12.98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>196102</td>\n",
       "      <td>15.29</td>\n",
       "      <td>15.45</td>\n",
       "      <td>15.56</td>\n",
       "      <td>15.56</td>\n",
       "      <td>15.56</td>\n",
       "      <td>15.31</td>\n",
       "      <td>14.84</td>\n",
       "      <td>16.13</td>\n",
       "      <td>16.09</td>\n",
       "      <td>...</td>\n",
       "      <td>10.76</td>\n",
       "      <td>10.70</td>\n",
       "      <td>11.37</td>\n",
       "      <td>11.37</td>\n",
       "      <td>10.34</td>\n",
       "      <td>9.81</td>\n",
       "      <td>9.34</td>\n",
       "      <td>12.40</td>\n",
       "      <td>12.23</td>\n",
       "      <td>12.13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>196103</td>\n",
       "      <td>15.88</td>\n",
       "      <td>16.35</td>\n",
       "      <td>16.64</td>\n",
       "      <td>16.64</td>\n",
       "      <td>17.47</td>\n",
       "      <td>17.03</td>\n",
       "      <td>15.89</td>\n",
       "      <td>17.33</td>\n",
       "      <td>18.14</td>\n",
       "      <td>...</td>\n",
       "      <td>11.03</td>\n",
       "      <td>11.03</td>\n",
       "      <td>11.69</td>\n",
       "      <td>11.69</td>\n",
       "      <td>10.63</td>\n",
       "      <td>9.96</td>\n",
       "      <td>9.35</td>\n",
       "      <td>12.55</td>\n",
       "      <td>12.35</td>\n",
       "      <td>12.18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>196104</td>\n",
       "      <td>16.13</td>\n",
       "      <td>17.15</td>\n",
       "      <td>16.57</td>\n",
       "      <td>16.57</td>\n",
       "      <td>17.96</td>\n",
       "      <td>17.82</td>\n",
       "      <td>16.24</td>\n",
       "      <td>17.27</td>\n",
       "      <td>17.71</td>\n",
       "      <td>...</td>\n",
       "      <td>11.55</td>\n",
       "      <td>11.71</td>\n",
       "      <td>12.47</td>\n",
       "      <td>12.47</td>\n",
       "      <td>11.16</td>\n",
       "      <td>10.46</td>\n",
       "      <td>9.68</td>\n",
       "      <td>12.65</td>\n",
       "      <td>12.36</td>\n",
       "      <td>12.30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>196105</td>\n",
       "      <td>18.68</td>\n",
       "      <td>20.01</td>\n",
       "      <td>20.31</td>\n",
       "      <td>20.31</td>\n",
       "      <td>23.24</td>\n",
       "      <td>22.28</td>\n",
       "      <td>18.15</td>\n",
       "      <td>22.17</td>\n",
       "      <td>23.90</td>\n",
       "      <td>...</td>\n",
       "      <td>13.10</td>\n",
       "      <td>13.18</td>\n",
       "      <td>14.29</td>\n",
       "      <td>14.29</td>\n",
       "      <td>12.56</td>\n",
       "      <td>11.63</td>\n",
       "      <td>10.63</td>\n",
       "      <td>14.28</td>\n",
       "      <td>14.13</td>\n",
       "      <td>14.06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>475</th>\n",
       "      <td>200008</td>\n",
       "      <td>25.85</td>\n",
       "      <td>26.10</td>\n",
       "      <td>27.93</td>\n",
       "      <td>27.93</td>\n",
       "      <td>30.26</td>\n",
       "      <td>28.23</td>\n",
       "      <td>24.23</td>\n",
       "      <td>30.41</td>\n",
       "      <td>32.54</td>\n",
       "      <td>...</td>\n",
       "      <td>17.02</td>\n",
       "      <td>17.13</td>\n",
       "      <td>17.76</td>\n",
       "      <td>17.76</td>\n",
       "      <td>16.27</td>\n",
       "      <td>15.51</td>\n",
       "      <td>14.73</td>\n",
       "      <td>18.02</td>\n",
       "      <td>17.83</td>\n",
       "      <td>17.74</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>476</th>\n",
       "      <td>200009</td>\n",
       "      <td>23.85</td>\n",
       "      <td>23.96</td>\n",
       "      <td>24.68</td>\n",
       "      <td>24.68</td>\n",
       "      <td>25.41</td>\n",
       "      <td>24.74</td>\n",
       "      <td>23.13</td>\n",
       "      <td>26.15</td>\n",
       "      <td>26.24</td>\n",
       "      <td>...</td>\n",
       "      <td>16.65</td>\n",
       "      <td>16.65</td>\n",
       "      <td>17.66</td>\n",
       "      <td>17.66</td>\n",
       "      <td>16.10</td>\n",
       "      <td>15.27</td>\n",
       "      <td>14.49</td>\n",
       "      <td>18.02</td>\n",
       "      <td>17.90</td>\n",
       "      <td>17.76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>477</th>\n",
       "      <td>200010</td>\n",
       "      <td>22.34</td>\n",
       "      <td>22.46</td>\n",
       "      <td>22.61</td>\n",
       "      <td>22.61</td>\n",
       "      <td>23.28</td>\n",
       "      <td>22.86</td>\n",
       "      <td>21.68</td>\n",
       "      <td>23.28</td>\n",
       "      <td>23.46</td>\n",
       "      <td>...</td>\n",
       "      <td>15.29</td>\n",
       "      <td>15.25</td>\n",
       "      <td>15.90</td>\n",
       "      <td>15.90</td>\n",
       "      <td>14.76</td>\n",
       "      <td>14.14</td>\n",
       "      <td>13.57</td>\n",
       "      <td>16.62</td>\n",
       "      <td>16.43</td>\n",
       "      <td>16.40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>478</th>\n",
       "      <td>200011</td>\n",
       "      <td>18.06</td>\n",
       "      <td>18.09</td>\n",
       "      <td>17.82</td>\n",
       "      <td>17.82</td>\n",
       "      <td>17.67</td>\n",
       "      <td>17.76</td>\n",
       "      <td>17.96</td>\n",
       "      <td>17.95</td>\n",
       "      <td>17.76</td>\n",
       "      <td>...</td>\n",
       "      <td>13.46</td>\n",
       "      <td>13.45</td>\n",
       "      <td>13.95</td>\n",
       "      <td>13.95</td>\n",
       "      <td>13.12</td>\n",
       "      <td>12.67</td>\n",
       "      <td>12.25</td>\n",
       "      <td>14.85</td>\n",
       "      <td>14.65</td>\n",
       "      <td>14.59</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>479</th>\n",
       "      <td>200012</td>\n",
       "      <td>16.23</td>\n",
       "      <td>16.12</td>\n",
       "      <td>16.05</td>\n",
       "      <td>16.05</td>\n",
       "      <td>15.72</td>\n",
       "      <td>15.80</td>\n",
       "      <td>16.09</td>\n",
       "      <td>16.11</td>\n",
       "      <td>15.78</td>\n",
       "      <td>...</td>\n",
       "      <td>11.94</td>\n",
       "      <td>11.84</td>\n",
       "      <td>12.25</td>\n",
       "      <td>12.25</td>\n",
       "      <td>11.48</td>\n",
       "      <td>11.06</td>\n",
       "      <td>10.76</td>\n",
       "      <td>13.61</td>\n",
       "      <td>13.36</td>\n",
       "      <td>13.26</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>480 rows × 1446 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      FECHA    500    501    502    503    504    505    506    507    508  \\\n",
       "0    196101  16.08  16.33  16.08  16.08  16.22  16.12  16.01  16.36  16.50   \n",
       "1    196102  15.29  15.45  15.56  15.56  15.56  15.31  14.84  16.13  16.09   \n",
       "2    196103  15.88  16.35  16.64  16.64  17.47  17.03  15.89  17.33  18.14   \n",
       "3    196104  16.13  17.15  16.57  16.57  17.96  17.82  16.24  17.27  17.71   \n",
       "4    196105  18.68  20.01  20.31  20.31  23.24  22.28  18.15  22.17  23.90   \n",
       "..      ...    ...    ...    ...    ...    ...    ...    ...    ...    ...   \n",
       "475  200008  25.85  26.10  27.93  27.93  30.26  28.23  24.23  30.41  32.54   \n",
       "476  200009  23.85  23.96  24.68  24.68  25.41  24.74  23.13  26.15  26.24   \n",
       "477  200010  22.34  22.46  22.61  22.61  23.28  22.86  21.68  23.28  23.46   \n",
       "478  200011  18.06  18.09  17.82  17.82  17.67  17.76  17.96  17.95  17.76   \n",
       "479  200012  16.23  16.12  16.05  16.05  15.72  15.80  16.09  16.11  15.78   \n",
       "\n",
       "     ...   1935   1936   1937   1938   1939   1940   1941   1942   1943   1944  \n",
       "0    ...  11.79  11.79  12.54  12.54  11.36  10.84  10.26  13.19  13.00  12.98  \n",
       "1    ...  10.76  10.70  11.37  11.37  10.34   9.81   9.34  12.40  12.23  12.13  \n",
       "2    ...  11.03  11.03  11.69  11.69  10.63   9.96   9.35  12.55  12.35  12.18  \n",
       "3    ...  11.55  11.71  12.47  12.47  11.16  10.46   9.68  12.65  12.36  12.30  \n",
       "4    ...  13.10  13.18  14.29  14.29  12.56  11.63  10.63  14.28  14.13  14.06  \n",
       "..   ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...  \n",
       "475  ...  17.02  17.13  17.76  17.76  16.27  15.51  14.73  18.02  17.83  17.74  \n",
       "476  ...  16.65  16.65  17.66  17.66  16.10  15.27  14.49  18.02  17.90  17.76  \n",
       "477  ...  15.29  15.25  15.90  15.90  14.76  14.14  13.57  16.62  16.43  16.40  \n",
       "478  ...  13.46  13.45  13.95  13.95  13.12  12.67  12.25  14.85  14.65  14.59  \n",
       "479  ...  11.94  11.84  12.25  12.25  11.48  11.06  10.76  13.61  13.36  13.26  \n",
       "\n",
       "[480 rows x 1446 columns]"
      ]
     },
     "execution_count": 214,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "datascala"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 215,
   "id": "b4c7b44f",
   "metadata": {},
   "outputs": [
    {
     "ename": "ValueError",
     "evalue": "Shape of passed values is (480, 1446), indices imply (479, 1446)",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mValueError\u001b[0m                                Traceback (most recent call last)",
      "Input \u001b[1;32mIn [215]\u001b[0m, in \u001b[0;36m<cell line: 1>\u001b[1;34m()\u001b[0m\n\u001b[1;32m----> 1\u001b[0m loan\u001b[38;5;241m=\u001b[39m\u001b[43mpd\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mDataFrame\u001b[49m\u001b[43m(\u001b[49m\u001b[43mscaler\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mfit_transform\u001b[49m\u001b[43m(\u001b[49m\u001b[43mdatascala\u001b[49m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m      2\u001b[0m \u001b[43m            \u001b[49m\u001b[43mcolumns\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mdata\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mcolumns\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mindex\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mdata\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mindex\u001b[49m\u001b[43m)\u001b[49m\n",
      "File \u001b[1;32m~\\anaconda3\\envs\\Ciberseguridad\\lib\\site-packages\\pandas\\core\\frame.py:694\u001b[0m, in \u001b[0;36mDataFrame.__init__\u001b[1;34m(self, data, index, columns, dtype, copy)\u001b[0m\n\u001b[0;32m    684\u001b[0m         mgr \u001b[38;5;241m=\u001b[39m dict_to_mgr(\n\u001b[0;32m    685\u001b[0m             \u001b[38;5;66;03m# error: Item \"ndarray\" of \"Union[ndarray, Series, Index]\" has no\u001b[39;00m\n\u001b[0;32m    686\u001b[0m             \u001b[38;5;66;03m# attribute \"name\"\u001b[39;00m\n\u001b[1;32m   (...)\u001b[0m\n\u001b[0;32m    691\u001b[0m             typ\u001b[38;5;241m=\u001b[39mmanager,\n\u001b[0;32m    692\u001b[0m         )\n\u001b[0;32m    693\u001b[0m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m--> 694\u001b[0m         mgr \u001b[38;5;241m=\u001b[39m \u001b[43mndarray_to_mgr\u001b[49m\u001b[43m(\u001b[49m\n\u001b[0;32m    695\u001b[0m \u001b[43m            \u001b[49m\u001b[43mdata\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m    696\u001b[0m \u001b[43m            \u001b[49m\u001b[43mindex\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m    697\u001b[0m \u001b[43m            \u001b[49m\u001b[43mcolumns\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m    698\u001b[0m \u001b[43m            \u001b[49m\u001b[43mdtype\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mdtype\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m    699\u001b[0m \u001b[43m            \u001b[49m\u001b[43mcopy\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcopy\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m    700\u001b[0m \u001b[43m            \u001b[49m\u001b[43mtyp\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mmanager\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m    701\u001b[0m \u001b[43m        \u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m    703\u001b[0m \u001b[38;5;66;03m# For data is list-like, or Iterable (will consume into list)\u001b[39;00m\n\u001b[0;32m    704\u001b[0m \u001b[38;5;28;01melif\u001b[39;00m is_list_like(data):\n",
      "File \u001b[1;32m~\\anaconda3\\envs\\Ciberseguridad\\lib\\site-packages\\pandas\\core\\internals\\construction.py:351\u001b[0m, in \u001b[0;36mndarray_to_mgr\u001b[1;34m(values, index, columns, dtype, copy, typ)\u001b[0m\n\u001b[0;32m    346\u001b[0m \u001b[38;5;66;03m# _prep_ndarray ensures that values.ndim == 2 at this point\u001b[39;00m\n\u001b[0;32m    347\u001b[0m index, columns \u001b[38;5;241m=\u001b[39m _get_axes(\n\u001b[0;32m    348\u001b[0m     values\u001b[38;5;241m.\u001b[39mshape[\u001b[38;5;241m0\u001b[39m], values\u001b[38;5;241m.\u001b[39mshape[\u001b[38;5;241m1\u001b[39m], index\u001b[38;5;241m=\u001b[39mindex, columns\u001b[38;5;241m=\u001b[39mcolumns\n\u001b[0;32m    349\u001b[0m )\n\u001b[1;32m--> 351\u001b[0m \u001b[43m_check_values_indices_shape_match\u001b[49m\u001b[43m(\u001b[49m\u001b[43mvalues\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mindex\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcolumns\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m    353\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m typ \u001b[38;5;241m==\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124marray\u001b[39m\u001b[38;5;124m\"\u001b[39m:\n\u001b[0;32m    355\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28missubclass\u001b[39m(values\u001b[38;5;241m.\u001b[39mdtype\u001b[38;5;241m.\u001b[39mtype, \u001b[38;5;28mstr\u001b[39m):\n",
      "File \u001b[1;32m~\\anaconda3\\envs\\Ciberseguridad\\lib\\site-packages\\pandas\\core\\internals\\construction.py:422\u001b[0m, in \u001b[0;36m_check_values_indices_shape_match\u001b[1;34m(values, index, columns)\u001b[0m\n\u001b[0;32m    420\u001b[0m passed \u001b[38;5;241m=\u001b[39m values\u001b[38;5;241m.\u001b[39mshape\n\u001b[0;32m    421\u001b[0m implied \u001b[38;5;241m=\u001b[39m (\u001b[38;5;28mlen\u001b[39m(index), \u001b[38;5;28mlen\u001b[39m(columns))\n\u001b[1;32m--> 422\u001b[0m \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mShape of passed values is \u001b[39m\u001b[38;5;132;01m{\u001b[39;00mpassed\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m, indices imply \u001b[39m\u001b[38;5;132;01m{\u001b[39;00mimplied\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m\"\u001b[39m)\n",
      "\u001b[1;31mValueError\u001b[0m: Shape of passed values is (480, 1446), indices imply (479, 1446)"
     ]
    }
   ],
   "source": [
    "loan=pd.DataFrame(scaler.fit_transform(datascala),\n",
    "            columns=data.columns, index=data.index)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "02b3953d",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7464dc86",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6794d034",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 206,
   "id": "60bd9df3",
   "metadata": {},
   "outputs": [],
   "source": [
    "scaler = MinMaxScaler()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f35462b2",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 202,
   "id": "cede4cb5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['500',\n",
       " '501',\n",
       " '502',\n",
       " '503',\n",
       " '504',\n",
       " '505',\n",
       " '506',\n",
       " '507',\n",
       " '508',\n",
       " '509',\n",
       " '510',\n",
       " '511',\n",
       " '512',\n",
       " '513',\n",
       " '514',\n",
       " '515',\n",
       " '516',\n",
       " '517',\n",
       " '518',\n",
       " '519',\n",
       " '520',\n",
       " '521',\n",
       " '522',\n",
       " '523',\n",
       " '524',\n",
       " '525',\n",
       " '526',\n",
       " '527',\n",
       " '528',\n",
       " '529',\n",
       " '530',\n",
       " '531',\n",
       " '532',\n",
       " '533',\n",
       " '534',\n",
       " '535',\n",
       " '536',\n",
       " '537',\n",
       " '538',\n",
       " '539',\n",
       " '540',\n",
       " '541',\n",
       " '542',\n",
       " '543',\n",
       " '544',\n",
       " '545',\n",
       " '546',\n",
       " '547',\n",
       " '548',\n",
       " '549',\n",
       " '550',\n",
       " '551',\n",
       " '552',\n",
       " '553',\n",
       " '554',\n",
       " '555',\n",
       " '556',\n",
       " '557',\n",
       " '558',\n",
       " '559',\n",
       " '560',\n",
       " '561',\n",
       " '562',\n",
       " '563',\n",
       " '564',\n",
       " '565',\n",
       " '566',\n",
       " '567',\n",
       " '568',\n",
       " '569',\n",
       " '570',\n",
       " '571',\n",
       " '572',\n",
       " '573',\n",
       " '574',\n",
       " '575',\n",
       " '576',\n",
       " '577',\n",
       " '578',\n",
       " '579',\n",
       " '580',\n",
       " '581',\n",
       " '582',\n",
       " '583',\n",
       " '584',\n",
       " '585',\n",
       " '586',\n",
       " '587',\n",
       " '588',\n",
       " '589',\n",
       " '590',\n",
       " '591',\n",
       " '592',\n",
       " '593',\n",
       " '594',\n",
       " '595',\n",
       " '596',\n",
       " '597',\n",
       " '598',\n",
       " '599',\n",
       " '600',\n",
       " '601',\n",
       " '602',\n",
       " '603',\n",
       " '604',\n",
       " '605',\n",
       " '606',\n",
       " '607',\n",
       " '608',\n",
       " '609',\n",
       " '610',\n",
       " '611',\n",
       " '612',\n",
       " '613',\n",
       " '614',\n",
       " '615',\n",
       " '616',\n",
       " '617',\n",
       " '618',\n",
       " '619',\n",
       " '620',\n",
       " '621',\n",
       " '622',\n",
       " '623',\n",
       " '624',\n",
       " '625',\n",
       " '626',\n",
       " '627',\n",
       " '628',\n",
       " '629',\n",
       " '630',\n",
       " '631',\n",
       " '632',\n",
       " '633',\n",
       " '634',\n",
       " '635',\n",
       " '636',\n",
       " '637',\n",
       " '638',\n",
       " '639',\n",
       " '640',\n",
       " '641',\n",
       " '642',\n",
       " '643',\n",
       " '644',\n",
       " '645',\n",
       " '646',\n",
       " '647',\n",
       " '648',\n",
       " '649',\n",
       " '650',\n",
       " '651',\n",
       " '652',\n",
       " '653',\n",
       " '654',\n",
       " '655',\n",
       " '656',\n",
       " '657',\n",
       " '658',\n",
       " '659',\n",
       " '660',\n",
       " '661',\n",
       " '662',\n",
       " '663',\n",
       " '664',\n",
       " '665',\n",
       " '666',\n",
       " '667',\n",
       " '668',\n",
       " '669',\n",
       " '670',\n",
       " '671',\n",
       " '672',\n",
       " '673',\n",
       " '674',\n",
       " '675',\n",
       " '676',\n",
       " '677',\n",
       " '678',\n",
       " '679',\n",
       " '680',\n",
       " '681',\n",
       " '682',\n",
       " '683',\n",
       " '684',\n",
       " '685',\n",
       " '686',\n",
       " '687',\n",
       " '688',\n",
       " '689',\n",
       " '690',\n",
       " '691',\n",
       " '692',\n",
       " '693',\n",
       " '694',\n",
       " '695',\n",
       " '696',\n",
       " '697',\n",
       " '698',\n",
       " '699',\n",
       " '700',\n",
       " '701',\n",
       " '702',\n",
       " '703',\n",
       " '704',\n",
       " '705',\n",
       " '706',\n",
       " '707',\n",
       " '708',\n",
       " '709',\n",
       " '710',\n",
       " '711',\n",
       " '712',\n",
       " '713',\n",
       " '714',\n",
       " '715',\n",
       " '716',\n",
       " '717',\n",
       " '718',\n",
       " '719',\n",
       " '720',\n",
       " '721',\n",
       " '722',\n",
       " '723',\n",
       " '724',\n",
       " '725',\n",
       " '726',\n",
       " '727',\n",
       " '728',\n",
       " '729',\n",
       " '730',\n",
       " '731',\n",
       " '732',\n",
       " '733',\n",
       " '734',\n",
       " '735',\n",
       " '736',\n",
       " '737',\n",
       " '738',\n",
       " '739',\n",
       " '740',\n",
       " '741',\n",
       " '742',\n",
       " '743',\n",
       " '744',\n",
       " '745',\n",
       " '746',\n",
       " '747',\n",
       " '748',\n",
       " '749',\n",
       " '750',\n",
       " '751',\n",
       " '752',\n",
       " '753',\n",
       " '754',\n",
       " '755',\n",
       " '756',\n",
       " '757',\n",
       " '758',\n",
       " '759',\n",
       " '760',\n",
       " '761',\n",
       " '762',\n",
       " '763',\n",
       " '764',\n",
       " '765',\n",
       " '766',\n",
       " '767',\n",
       " '768',\n",
       " '769',\n",
       " '770',\n",
       " '771',\n",
       " '772',\n",
       " '773',\n",
       " '774',\n",
       " '775',\n",
       " '776',\n",
       " '777',\n",
       " '778',\n",
       " '779',\n",
       " '780',\n",
       " '781',\n",
       " '782',\n",
       " '783',\n",
       " '784',\n",
       " '785',\n",
       " '786',\n",
       " '787',\n",
       " '788',\n",
       " '789',\n",
       " '790',\n",
       " '791',\n",
       " '792',\n",
       " '793',\n",
       " '794',\n",
       " '795',\n",
       " '796',\n",
       " '797',\n",
       " '798',\n",
       " '799',\n",
       " '800',\n",
       " '801',\n",
       " '802',\n",
       " '803',\n",
       " '804',\n",
       " '805',\n",
       " '806',\n",
       " '807',\n",
       " '808',\n",
       " '809',\n",
       " '810',\n",
       " '811',\n",
       " '812',\n",
       " '813',\n",
       " '814',\n",
       " '815',\n",
       " '816',\n",
       " '817',\n",
       " '818',\n",
       " '819',\n",
       " '820',\n",
       " '821',\n",
       " '822',\n",
       " '823',\n",
       " '824',\n",
       " '825',\n",
       " '826',\n",
       " '827',\n",
       " '828',\n",
       " '829',\n",
       " '830',\n",
       " '831',\n",
       " '832',\n",
       " '833',\n",
       " '834',\n",
       " '835',\n",
       " '836',\n",
       " '837',\n",
       " '838',\n",
       " '839',\n",
       " '840',\n",
       " '841',\n",
       " '842',\n",
       " '843',\n",
       " '844',\n",
       " '845',\n",
       " '846',\n",
       " '847',\n",
       " '848',\n",
       " '849',\n",
       " '850',\n",
       " '851',\n",
       " '852',\n",
       " '853',\n",
       " '854',\n",
       " '855',\n",
       " '856',\n",
       " '857',\n",
       " '858',\n",
       " '859',\n",
       " '860',\n",
       " '861',\n",
       " '862',\n",
       " '863',\n",
       " '864',\n",
       " '865',\n",
       " '866',\n",
       " '867',\n",
       " '868',\n",
       " '869',\n",
       " '870',\n",
       " '871',\n",
       " '872',\n",
       " '873',\n",
       " '874',\n",
       " '875',\n",
       " '876',\n",
       " '877',\n",
       " '878',\n",
       " '879',\n",
       " '880',\n",
       " '881',\n",
       " '882',\n",
       " '883',\n",
       " '884',\n",
       " '885',\n",
       " '886',\n",
       " '887',\n",
       " '888',\n",
       " '889',\n",
       " '890',\n",
       " '891',\n",
       " '892',\n",
       " '893',\n",
       " '894',\n",
       " '895',\n",
       " '896',\n",
       " '897',\n",
       " '898',\n",
       " '899',\n",
       " '900',\n",
       " '901',\n",
       " '902',\n",
       " '903',\n",
       " '904',\n",
       " '905',\n",
       " '906',\n",
       " '907',\n",
       " '908',\n",
       " '909',\n",
       " '910',\n",
       " '911',\n",
       " '912',\n",
       " '913',\n",
       " '914',\n",
       " '915',\n",
       " '916',\n",
       " '917',\n",
       " '918',\n",
       " '919',\n",
       " '920',\n",
       " '921',\n",
       " '922',\n",
       " '923',\n",
       " '924',\n",
       " '925',\n",
       " '926',\n",
       " '927',\n",
       " '928',\n",
       " '929',\n",
       " '930',\n",
       " '931',\n",
       " '932',\n",
       " '933',\n",
       " '934',\n",
       " '935',\n",
       " '936',\n",
       " '937',\n",
       " '938',\n",
       " '939',\n",
       " '940',\n",
       " '941',\n",
       " '942',\n",
       " '943',\n",
       " '944',\n",
       " '945',\n",
       " '946',\n",
       " '947',\n",
       " '948',\n",
       " '949',\n",
       " '950',\n",
       " '951',\n",
       " '952',\n",
       " '953',\n",
       " '954',\n",
       " '955',\n",
       " '956',\n",
       " '957',\n",
       " '958',\n",
       " '959',\n",
       " '960',\n",
       " '961',\n",
       " '962',\n",
       " '963',\n",
       " '964',\n",
       " '965',\n",
       " '966',\n",
       " '967',\n",
       " '968',\n",
       " '969',\n",
       " '970',\n",
       " '971',\n",
       " '972',\n",
       " '973',\n",
       " '974',\n",
       " '975',\n",
       " '976',\n",
       " '977',\n",
       " '978',\n",
       " '979',\n",
       " '980',\n",
       " '981',\n",
       " '982',\n",
       " '983',\n",
       " '984',\n",
       " '985',\n",
       " '986',\n",
       " '987',\n",
       " '988',\n",
       " '989',\n",
       " '990',\n",
       " '991',\n",
       " '992',\n",
       " '993',\n",
       " '994',\n",
       " '995',\n",
       " '996',\n",
       " '997',\n",
       " '998',\n",
       " '999',\n",
       " '1000',\n",
       " '1001',\n",
       " '1002',\n",
       " '1003',\n",
       " '1004',\n",
       " '1005',\n",
       " '1006',\n",
       " '1007',\n",
       " '1008',\n",
       " '1009',\n",
       " '1010',\n",
       " '1011',\n",
       " '1012',\n",
       " '1013',\n",
       " '1014',\n",
       " '1015',\n",
       " '1016',\n",
       " '1017',\n",
       " '1018',\n",
       " '1019',\n",
       " '1020',\n",
       " '1021',\n",
       " '1022',\n",
       " '1023',\n",
       " '1024',\n",
       " '1025',\n",
       " '1026',\n",
       " '1027',\n",
       " '1028',\n",
       " '1029',\n",
       " '1030',\n",
       " '1031',\n",
       " '1032',\n",
       " '1033',\n",
       " '1034',\n",
       " '1035',\n",
       " '1036',\n",
       " '1037',\n",
       " '1038',\n",
       " '1039',\n",
       " '1040',\n",
       " '1041',\n",
       " '1042',\n",
       " '1043',\n",
       " '1044',\n",
       " '1045',\n",
       " '1046',\n",
       " '1047',\n",
       " '1048',\n",
       " '1049',\n",
       " '1050',\n",
       " '1051',\n",
       " '1052',\n",
       " '1053',\n",
       " '1054',\n",
       " '1055',\n",
       " '1056',\n",
       " '1057',\n",
       " '1058',\n",
       " '1059',\n",
       " '1060',\n",
       " '1061',\n",
       " '1062',\n",
       " '1063',\n",
       " '1064',\n",
       " '1065',\n",
       " '1066',\n",
       " '1067',\n",
       " '1068',\n",
       " '1069',\n",
       " '1070',\n",
       " '1071',\n",
       " '1072',\n",
       " '1073',\n",
       " '1074',\n",
       " '1075',\n",
       " '1076',\n",
       " '1077',\n",
       " '1078',\n",
       " '1079',\n",
       " '1080',\n",
       " '1081',\n",
       " '1082',\n",
       " '1083',\n",
       " '1084',\n",
       " '1085',\n",
       " '1086',\n",
       " '1087',\n",
       " '1088',\n",
       " '1089',\n",
       " '1090',\n",
       " '1091',\n",
       " '1092',\n",
       " '1093',\n",
       " '1094',\n",
       " '1095',\n",
       " '1096',\n",
       " '1097',\n",
       " '1098',\n",
       " '1099',\n",
       " '1100',\n",
       " '1101',\n",
       " '1102',\n",
       " '1103',\n",
       " '1104',\n",
       " '1105',\n",
       " '1106',\n",
       " '1107',\n",
       " '1108',\n",
       " '1109',\n",
       " '1110',\n",
       " '1111',\n",
       " '1112',\n",
       " '1113',\n",
       " '1114',\n",
       " '1115',\n",
       " '1116',\n",
       " '1117',\n",
       " '1118',\n",
       " '1119',\n",
       " '1120',\n",
       " '1121',\n",
       " '1122',\n",
       " '1123',\n",
       " '1124',\n",
       " '1125',\n",
       " '1126',\n",
       " '1127',\n",
       " '1128',\n",
       " '1129',\n",
       " '1130',\n",
       " '1131',\n",
       " '1132',\n",
       " '1133',\n",
       " '1134',\n",
       " '1135',\n",
       " '1136',\n",
       " '1137',\n",
       " '1138',\n",
       " '1139',\n",
       " '1140',\n",
       " '1141',\n",
       " '1142',\n",
       " '1143',\n",
       " '1144',\n",
       " '1145',\n",
       " '1146',\n",
       " '1147',\n",
       " '1148',\n",
       " '1149',\n",
       " '1150',\n",
       " '1151',\n",
       " '1152',\n",
       " '1153',\n",
       " '1154',\n",
       " '1155',\n",
       " '1156',\n",
       " '1157',\n",
       " '1158',\n",
       " '1159',\n",
       " '1160',\n",
       " '1161',\n",
       " '1162',\n",
       " '1163',\n",
       " '1164',\n",
       " '1165',\n",
       " '1166',\n",
       " '1167',\n",
       " '1168',\n",
       " '1169',\n",
       " '1170',\n",
       " '1171',\n",
       " '1172',\n",
       " '1173',\n",
       " '1174',\n",
       " '1175',\n",
       " '1176',\n",
       " '1177',\n",
       " '1178',\n",
       " '1179',\n",
       " '1180',\n",
       " '1181',\n",
       " '1182',\n",
       " '1183',\n",
       " '1184',\n",
       " '1185',\n",
       " '1186',\n",
       " '1187',\n",
       " '1188',\n",
       " '1189',\n",
       " '1190',\n",
       " '1191',\n",
       " '1192',\n",
       " '1193',\n",
       " '1194',\n",
       " '1195',\n",
       " '1196',\n",
       " '1197',\n",
       " '1198',\n",
       " '1199',\n",
       " '1200',\n",
       " '1201',\n",
       " '1202',\n",
       " '1203',\n",
       " '1204',\n",
       " '1205',\n",
       " '1206',\n",
       " '1207',\n",
       " '1208',\n",
       " '1209',\n",
       " '1210',\n",
       " '1211',\n",
       " '1212',\n",
       " '1213',\n",
       " '1214',\n",
       " '1215',\n",
       " '1216',\n",
       " '1217',\n",
       " '1218',\n",
       " '1219',\n",
       " '1220',\n",
       " '1221',\n",
       " '1222',\n",
       " '1223',\n",
       " '1224',\n",
       " '1225',\n",
       " '1226',\n",
       " '1227',\n",
       " '1228',\n",
       " '1229',\n",
       " '1230',\n",
       " '1231',\n",
       " '1232',\n",
       " '1233',\n",
       " '1234',\n",
       " '1235',\n",
       " '1236',\n",
       " '1237',\n",
       " '1238',\n",
       " '1239',\n",
       " '1240',\n",
       " '1241',\n",
       " '1242',\n",
       " '1243',\n",
       " '1244',\n",
       " '1245',\n",
       " '1246',\n",
       " '1247',\n",
       " '1248',\n",
       " '1249',\n",
       " '1250',\n",
       " '1251',\n",
       " '1252',\n",
       " '1253',\n",
       " '1254',\n",
       " '1255',\n",
       " '1256',\n",
       " '1257',\n",
       " '1258',\n",
       " '1259',\n",
       " '1260',\n",
       " '1261',\n",
       " '1262',\n",
       " '1263',\n",
       " '1264',\n",
       " '1265',\n",
       " '1266',\n",
       " '1267',\n",
       " '1268',\n",
       " '1269',\n",
       " '1270',\n",
       " '1271',\n",
       " '1272',\n",
       " '1273',\n",
       " '1274',\n",
       " '1275',\n",
       " '1276',\n",
       " '1277',\n",
       " '1278',\n",
       " '1279',\n",
       " '1280',\n",
       " '1281',\n",
       " '1282',\n",
       " '1283',\n",
       " '1284',\n",
       " '1285',\n",
       " '1286',\n",
       " '1287',\n",
       " '1288',\n",
       " '1289',\n",
       " '1290',\n",
       " '1291',\n",
       " '1292',\n",
       " '1293',\n",
       " '1294',\n",
       " '1295',\n",
       " '1296',\n",
       " '1297',\n",
       " '1298',\n",
       " '1299',\n",
       " '1300',\n",
       " '1301',\n",
       " '1302',\n",
       " '1303',\n",
       " '1304',\n",
       " '1305',\n",
       " '1306',\n",
       " '1307',\n",
       " '1308',\n",
       " '1309',\n",
       " '1310',\n",
       " '1311',\n",
       " '1312',\n",
       " '1313',\n",
       " '1314',\n",
       " '1315',\n",
       " '1316',\n",
       " '1317',\n",
       " '1318',\n",
       " '1319',\n",
       " '1320',\n",
       " '1321',\n",
       " '1322',\n",
       " '1323',\n",
       " '1324',\n",
       " '1325',\n",
       " '1326',\n",
       " '1327',\n",
       " '1328',\n",
       " '1329',\n",
       " '1330',\n",
       " '1331',\n",
       " '1332',\n",
       " '1333',\n",
       " '1334',\n",
       " '1335',\n",
       " '1336',\n",
       " '1337',\n",
       " '1338',\n",
       " '1339',\n",
       " '1340',\n",
       " '1341',\n",
       " '1342',\n",
       " '1343',\n",
       " '1344',\n",
       " '1345',\n",
       " '1346',\n",
       " '1347',\n",
       " '1348',\n",
       " '1349',\n",
       " '1350',\n",
       " '1351',\n",
       " '1352',\n",
       " '1353',\n",
       " '1354',\n",
       " '1355',\n",
       " '1356',\n",
       " '1357',\n",
       " '1358',\n",
       " '1359',\n",
       " '1360',\n",
       " '1361',\n",
       " '1362',\n",
       " '1363',\n",
       " '1364',\n",
       " '1365',\n",
       " '1366',\n",
       " '1367',\n",
       " '1368',\n",
       " '1369',\n",
       " '1370',\n",
       " '1371',\n",
       " '1372',\n",
       " '1373',\n",
       " '1374',\n",
       " '1375',\n",
       " '1376',\n",
       " '1377',\n",
       " '1378',\n",
       " '1379',\n",
       " '1380',\n",
       " '1381',\n",
       " '1382',\n",
       " '1383',\n",
       " '1384',\n",
       " '1385',\n",
       " '1386',\n",
       " '1387',\n",
       " '1388',\n",
       " '1389',\n",
       " '1390',\n",
       " '1391',\n",
       " '1392',\n",
       " '1393',\n",
       " '1394',\n",
       " '1395',\n",
       " '1396',\n",
       " '1397',\n",
       " '1398',\n",
       " '1399',\n",
       " '1400',\n",
       " '1401',\n",
       " '1402',\n",
       " '1403',\n",
       " '1404',\n",
       " '1405',\n",
       " '1406',\n",
       " '1407',\n",
       " '1408',\n",
       " '1409',\n",
       " '1410',\n",
       " '1411',\n",
       " '1412',\n",
       " '1413',\n",
       " '1414',\n",
       " '1415',\n",
       " '1416',\n",
       " '1417',\n",
       " '1418',\n",
       " '1419',\n",
       " '1420',\n",
       " '1421',\n",
       " '1422',\n",
       " '1423',\n",
       " '1424',\n",
       " '1425',\n",
       " '1426',\n",
       " '1427',\n",
       " '1428',\n",
       " '1429',\n",
       " '1430',\n",
       " '1431',\n",
       " '1432',\n",
       " '1433',\n",
       " '1434',\n",
       " '1435',\n",
       " '1436',\n",
       " '1437',\n",
       " '1438',\n",
       " '1439',\n",
       " '1440',\n",
       " '1441',\n",
       " '1442',\n",
       " '1443',\n",
       " '1444',\n",
       " '1445',\n",
       " '1446',\n",
       " '1447',\n",
       " '1448',\n",
       " '1449',\n",
       " '1450',\n",
       " '1451',\n",
       " '1452',\n",
       " '1453',\n",
       " '1454',\n",
       " '1455',\n",
       " '1456',\n",
       " '1457',\n",
       " '1458',\n",
       " '1459',\n",
       " '1460',\n",
       " '1461',\n",
       " '1462',\n",
       " '1463',\n",
       " '1464',\n",
       " '1465',\n",
       " '1466',\n",
       " '1467',\n",
       " '1468',\n",
       " '1469',\n",
       " '1470',\n",
       " '1471',\n",
       " '1472',\n",
       " '1473',\n",
       " '1474',\n",
       " '1475',\n",
       " '1476',\n",
       " '1477',\n",
       " '1478',\n",
       " '1479',\n",
       " '1480',\n",
       " '1481',\n",
       " '1482',\n",
       " '1483',\n",
       " '1484',\n",
       " '1485',\n",
       " '1486',\n",
       " '1487',\n",
       " '1488',\n",
       " '1489',\n",
       " '1490',\n",
       " '1491',\n",
       " '1492',\n",
       " '1493',\n",
       " '1494',\n",
       " '1495',\n",
       " '1496',\n",
       " '1497',\n",
       " '1498',\n",
       " '1499',\n",
       " ...]"
      ]
     },
     "execution_count": 202,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "temperaturas=data1.columns.values.tolist()[1:]\n",
    "temperaturas"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "eb44153d",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8715c073",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9596420f",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5c45b39e",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a35fd045",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ecb98d61",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "aafa7123",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3e357d0e",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d72c07c7",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "25865028",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "852a1991",
   "metadata": {},
   "source": [
    "### Clustering jerárquico"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "id": "0e3f56ad",
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "from scipy.cluster.hierarchy import dendrogram, linkage\n",
    "import numpy as np\n",
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "530f8348",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "310cb507",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "id": "573daf00",
   "metadata": {},
   "outputs": [],
   "source": [
    "X = [[i] for i in [0, 7, 19, 31, 43, 55, 67, 79, 91, 103, 115, 127, 139, 151, 163, 175, 187, 199, 211, 223, 235, 247, 259, 271, 283, 295, 307, 319, 331, 343, 355, 367, 379, 391, 403, 415, 427, 439, 451, 463, 475]]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0bd55c97",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "459f5d8e",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "id": "09d41e94",
   "metadata": {},
   "outputs": [],
   "source": [
    "data20=pd.read_csv(\"../Dataset/TXMM_RCA_ECHAM5_20C3M_196101_200012 original.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "id": "306c1f5a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>FECHA</th>\n",
       "      <th>500</th>\n",
       "      <th>501</th>\n",
       "      <th>502</th>\n",
       "      <th>503</th>\n",
       "      <th>504</th>\n",
       "      <th>505</th>\n",
       "      <th>506</th>\n",
       "      <th>507</th>\n",
       "      <th>508</th>\n",
       "      <th>...</th>\n",
       "      <th>1935</th>\n",
       "      <th>1936</th>\n",
       "      <th>1937</th>\n",
       "      <th>1938</th>\n",
       "      <th>1939</th>\n",
       "      <th>1940</th>\n",
       "      <th>1941</th>\n",
       "      <th>1942</th>\n",
       "      <th>1943</th>\n",
       "      <th>1944</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>196101</td>\n",
       "      <td>16.08</td>\n",
       "      <td>16.33</td>\n",
       "      <td>16.08</td>\n",
       "      <td>16.08</td>\n",
       "      <td>16.22</td>\n",
       "      <td>16.12</td>\n",
       "      <td>16.01</td>\n",
       "      <td>16.36</td>\n",
       "      <td>16.50</td>\n",
       "      <td>...</td>\n",
       "      <td>11.79</td>\n",
       "      <td>11.79</td>\n",
       "      <td>12.54</td>\n",
       "      <td>12.54</td>\n",
       "      <td>11.36</td>\n",
       "      <td>10.84</td>\n",
       "      <td>10.26</td>\n",
       "      <td>13.19</td>\n",
       "      <td>13.00</td>\n",
       "      <td>12.98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>196102</td>\n",
       "      <td>15.29</td>\n",
       "      <td>15.45</td>\n",
       "      <td>15.56</td>\n",
       "      <td>15.56</td>\n",
       "      <td>15.56</td>\n",
       "      <td>15.31</td>\n",
       "      <td>14.84</td>\n",
       "      <td>16.13</td>\n",
       "      <td>16.09</td>\n",
       "      <td>...</td>\n",
       "      <td>10.76</td>\n",
       "      <td>10.70</td>\n",
       "      <td>11.37</td>\n",
       "      <td>11.37</td>\n",
       "      <td>10.34</td>\n",
       "      <td>9.81</td>\n",
       "      <td>9.34</td>\n",
       "      <td>12.40</td>\n",
       "      <td>12.23</td>\n",
       "      <td>12.13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>196103</td>\n",
       "      <td>15.88</td>\n",
       "      <td>16.35</td>\n",
       "      <td>16.64</td>\n",
       "      <td>16.64</td>\n",
       "      <td>17.47</td>\n",
       "      <td>17.03</td>\n",
       "      <td>15.89</td>\n",
       "      <td>17.33</td>\n",
       "      <td>18.14</td>\n",
       "      <td>...</td>\n",
       "      <td>11.03</td>\n",
       "      <td>11.03</td>\n",
       "      <td>11.69</td>\n",
       "      <td>11.69</td>\n",
       "      <td>10.63</td>\n",
       "      <td>9.96</td>\n",
       "      <td>9.35</td>\n",
       "      <td>12.55</td>\n",
       "      <td>12.35</td>\n",
       "      <td>12.18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>196104</td>\n",
       "      <td>16.13</td>\n",
       "      <td>17.15</td>\n",
       "      <td>16.57</td>\n",
       "      <td>16.57</td>\n",
       "      <td>17.96</td>\n",
       "      <td>17.82</td>\n",
       "      <td>16.24</td>\n",
       "      <td>17.27</td>\n",
       "      <td>17.71</td>\n",
       "      <td>...</td>\n",
       "      <td>11.55</td>\n",
       "      <td>11.71</td>\n",
       "      <td>12.47</td>\n",
       "      <td>12.47</td>\n",
       "      <td>11.16</td>\n",
       "      <td>10.46</td>\n",
       "      <td>9.68</td>\n",
       "      <td>12.65</td>\n",
       "      <td>12.36</td>\n",
       "      <td>12.30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>196105</td>\n",
       "      <td>18.68</td>\n",
       "      <td>20.01</td>\n",
       "      <td>20.31</td>\n",
       "      <td>20.31</td>\n",
       "      <td>23.24</td>\n",
       "      <td>22.28</td>\n",
       "      <td>18.15</td>\n",
       "      <td>22.17</td>\n",
       "      <td>23.90</td>\n",
       "      <td>...</td>\n",
       "      <td>13.10</td>\n",
       "      <td>13.18</td>\n",
       "      <td>14.29</td>\n",
       "      <td>14.29</td>\n",
       "      <td>12.56</td>\n",
       "      <td>11.63</td>\n",
       "      <td>10.63</td>\n",
       "      <td>14.28</td>\n",
       "      <td>14.13</td>\n",
       "      <td>14.06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>475</th>\n",
       "      <td>200008</td>\n",
       "      <td>25.85</td>\n",
       "      <td>26.10</td>\n",
       "      <td>27.93</td>\n",
       "      <td>27.93</td>\n",
       "      <td>30.26</td>\n",
       "      <td>28.23</td>\n",
       "      <td>24.23</td>\n",
       "      <td>30.41</td>\n",
       "      <td>32.54</td>\n",
       "      <td>...</td>\n",
       "      <td>17.02</td>\n",
       "      <td>17.13</td>\n",
       "      <td>17.76</td>\n",
       "      <td>17.76</td>\n",
       "      <td>16.27</td>\n",
       "      <td>15.51</td>\n",
       "      <td>14.73</td>\n",
       "      <td>18.02</td>\n",
       "      <td>17.83</td>\n",
       "      <td>17.74</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>476</th>\n",
       "      <td>200009</td>\n",
       "      <td>23.85</td>\n",
       "      <td>23.96</td>\n",
       "      <td>24.68</td>\n",
       "      <td>24.68</td>\n",
       "      <td>25.41</td>\n",
       "      <td>24.74</td>\n",
       "      <td>23.13</td>\n",
       "      <td>26.15</td>\n",
       "      <td>26.24</td>\n",
       "      <td>...</td>\n",
       "      <td>16.65</td>\n",
       "      <td>16.65</td>\n",
       "      <td>17.66</td>\n",
       "      <td>17.66</td>\n",
       "      <td>16.10</td>\n",
       "      <td>15.27</td>\n",
       "      <td>14.49</td>\n",
       "      <td>18.02</td>\n",
       "      <td>17.90</td>\n",
       "      <td>17.76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>477</th>\n",
       "      <td>200010</td>\n",
       "      <td>22.34</td>\n",
       "      <td>22.46</td>\n",
       "      <td>22.61</td>\n",
       "      <td>22.61</td>\n",
       "      <td>23.28</td>\n",
       "      <td>22.86</td>\n",
       "      <td>21.68</td>\n",
       "      <td>23.28</td>\n",
       "      <td>23.46</td>\n",
       "      <td>...</td>\n",
       "      <td>15.29</td>\n",
       "      <td>15.25</td>\n",
       "      <td>15.90</td>\n",
       "      <td>15.90</td>\n",
       "      <td>14.76</td>\n",
       "      <td>14.14</td>\n",
       "      <td>13.57</td>\n",
       "      <td>16.62</td>\n",
       "      <td>16.43</td>\n",
       "      <td>16.40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>478</th>\n",
       "      <td>200011</td>\n",
       "      <td>18.06</td>\n",
       "      <td>18.09</td>\n",
       "      <td>17.82</td>\n",
       "      <td>17.82</td>\n",
       "      <td>17.67</td>\n",
       "      <td>17.76</td>\n",
       "      <td>17.96</td>\n",
       "      <td>17.95</td>\n",
       "      <td>17.76</td>\n",
       "      <td>...</td>\n",
       "      <td>13.46</td>\n",
       "      <td>13.45</td>\n",
       "      <td>13.95</td>\n",
       "      <td>13.95</td>\n",
       "      <td>13.12</td>\n",
       "      <td>12.67</td>\n",
       "      <td>12.25</td>\n",
       "      <td>14.85</td>\n",
       "      <td>14.65</td>\n",
       "      <td>14.59</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>479</th>\n",
       "      <td>200012</td>\n",
       "      <td>16.23</td>\n",
       "      <td>16.12</td>\n",
       "      <td>16.05</td>\n",
       "      <td>16.05</td>\n",
       "      <td>15.72</td>\n",
       "      <td>15.80</td>\n",
       "      <td>16.09</td>\n",
       "      <td>16.11</td>\n",
       "      <td>15.78</td>\n",
       "      <td>...</td>\n",
       "      <td>11.94</td>\n",
       "      <td>11.84</td>\n",
       "      <td>12.25</td>\n",
       "      <td>12.25</td>\n",
       "      <td>11.48</td>\n",
       "      <td>11.06</td>\n",
       "      <td>10.76</td>\n",
       "      <td>13.61</td>\n",
       "      <td>13.36</td>\n",
       "      <td>13.26</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>480 rows × 1446 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      FECHA    500    501    502    503    504    505    506    507    508  \\\n",
       "0    196101  16.08  16.33  16.08  16.08  16.22  16.12  16.01  16.36  16.50   \n",
       "1    196102  15.29  15.45  15.56  15.56  15.56  15.31  14.84  16.13  16.09   \n",
       "2    196103  15.88  16.35  16.64  16.64  17.47  17.03  15.89  17.33  18.14   \n",
       "3    196104  16.13  17.15  16.57  16.57  17.96  17.82  16.24  17.27  17.71   \n",
       "4    196105  18.68  20.01  20.31  20.31  23.24  22.28  18.15  22.17  23.90   \n",
       "..      ...    ...    ...    ...    ...    ...    ...    ...    ...    ...   \n",
       "475  200008  25.85  26.10  27.93  27.93  30.26  28.23  24.23  30.41  32.54   \n",
       "476  200009  23.85  23.96  24.68  24.68  25.41  24.74  23.13  26.15  26.24   \n",
       "477  200010  22.34  22.46  22.61  22.61  23.28  22.86  21.68  23.28  23.46   \n",
       "478  200011  18.06  18.09  17.82  17.82  17.67  17.76  17.96  17.95  17.76   \n",
       "479  200012  16.23  16.12  16.05  16.05  15.72  15.80  16.09  16.11  15.78   \n",
       "\n",
       "     ...   1935   1936   1937   1938   1939   1940   1941   1942   1943   1944  \n",
       "0    ...  11.79  11.79  12.54  12.54  11.36  10.84  10.26  13.19  13.00  12.98  \n",
       "1    ...  10.76  10.70  11.37  11.37  10.34   9.81   9.34  12.40  12.23  12.13  \n",
       "2    ...  11.03  11.03  11.69  11.69  10.63   9.96   9.35  12.55  12.35  12.18  \n",
       "3    ...  11.55  11.71  12.47  12.47  11.16  10.46   9.68  12.65  12.36  12.30  \n",
       "4    ...  13.10  13.18  14.29  14.29  12.56  11.63  10.63  14.28  14.13  14.06  \n",
       "..   ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...  \n",
       "475  ...  17.02  17.13  17.76  17.76  16.27  15.51  14.73  18.02  17.83  17.74  \n",
       "476  ...  16.65  16.65  17.66  17.66  16.10  15.27  14.49  18.02  17.90  17.76  \n",
       "477  ...  15.29  15.25  15.90  15.90  14.76  14.14  13.57  16.62  16.43  16.40  \n",
       "478  ...  13.46  13.45  13.95  13.95  13.12  12.67  12.25  14.85  14.65  14.59  \n",
       "479  ...  11.94  11.84  12.25  12.25  11.48  11.06  10.76  13.61  13.36  13.26  \n",
       "\n",
       "[480 rows x 1446 columns]"
      ]
     },
     "execution_count": 105,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data20"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "id": "01a07eb1",
   "metadata": {},
   "outputs": [],
   "source": [
    "X = [[i] for i in [0, 7, 19, 31, 43, 55, 67, 79, 91, 103, 115, 127, 139, 151, 163, 175, 187, 199, 211, 223, 235, 247, 259, 271, 283, 295, 307, 319, 331, 343, 355, 367, 379, 391, 403, 415, 427, 439, 451, 463, 475]]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d2610b49",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "id": "f908daed",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<function matplotlib.pyplot.show(close=None, block=None)>"
      ]
     },
     "execution_count": 107,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 2500x1000 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "Z = linkage(X, 'ward')\n",
    "plt.figure(figsize=(25,10))\n",
    "plt.title(\"Dendrograma jerárquico de temperaturas en agosto (19961-2000)\")\n",
    "plt.xlabel(\"Registros tempetaturas agosto\")\n",
    "plt.ylabel(\"Distancia\")\n",
    "dendrogram(Z, leaf_rotation=90., leaf_font_size=15.5)\n",
    "plt.show"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4e71c14b",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "452cfecc",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "bf28c84e",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "69cbc48a",
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'X' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Input \u001b[1;32mIn [43]\u001b[0m, in \u001b[0;36m<cell line: 1>\u001b[1;34m()\u001b[0m\n\u001b[1;32m----> 1\u001b[0m Z \u001b[38;5;241m=\u001b[39m linkage(\u001b[43mX\u001b[49m, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mward\u001b[39m\u001b[38;5;124m'\u001b[39m)\n\u001b[0;32m      2\u001b[0m plt\u001b[38;5;241m.\u001b[39mfigure(figsize\u001b[38;5;241m=\u001b[39m(\u001b[38;5;241m25\u001b[39m,\u001b[38;5;241m10\u001b[39m))\n\u001b[0;32m      3\u001b[0m plt\u001b[38;5;241m.\u001b[39mtitle(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mDendrograma jerárquico de temperaturas en agosto (19961-2000)\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n",
      "\u001b[1;31mNameError\u001b[0m: name 'X' is not defined"
     ]
    }
   ],
   "source": [
    "Z = linkage(X, 'ward')\n",
    "plt.figure(figsize=(25,10))\n",
    "plt.title(\"Dendrograma jerárquico de temperaturas en agosto (19961-2000)\")\n",
    "plt.xlabel(\"Registros tempetaturas agosto\")\n",
    "plt.ylabel(\"Distancia\")\n",
    "dendrogram(Z, leaf_rotation=90., leaf_font_size=15.5)\n",
    "plt.show"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "85910291",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "43893f05",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "cdb40dd5",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "9a5fe91e",
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'X' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Input \u001b[1;32mIn [44]\u001b[0m, in \u001b[0;36m<cell line: 1>\u001b[1;34m()\u001b[0m\n\u001b[1;32m----> 1\u001b[0m Z \u001b[38;5;241m=\u001b[39m linkage(\u001b[43mX\u001b[49m, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124maverage\u001b[39m\u001b[38;5;124m'\u001b[39m)\n\u001b[0;32m      2\u001b[0m plt\u001b[38;5;241m.\u001b[39mfigure(figsize\u001b[38;5;241m=\u001b[39m(\u001b[38;5;241m25\u001b[39m,\u001b[38;5;241m10\u001b[39m))\n\u001b[0;32m      3\u001b[0m plt\u001b[38;5;241m.\u001b[39mtitle(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mDendrograma jerárquico de temperaturas en agosto (19961-2000)\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n",
      "\u001b[1;31mNameError\u001b[0m: name 'X' is not defined"
     ]
    }
   ],
   "source": [
    "Z = linkage(X, 'average')\n",
    "plt.figure(figsize=(25,10))\n",
    "plt.title(\"Dendrograma jerárquico de temperaturas en agosto (19961-2000)\")\n",
    "plt.xlabel(\"Registros tempetaturas agosto\")\n",
    "plt.ylabel(\"Distancia\")\n",
    "dendrogram(Z, leaf_rotation=90., leaf_font_size=15.5)\n",
    "plt.show"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1cc0f0bf",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "46a9e472",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "id": "63d6f672",
   "metadata": {},
   "outputs": [],
   "source": [
    "data25=pd.read_csv(\"../Dataset/Fichero_Maestro_modificado.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "id": "3b619966",
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'data2' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Input \u001b[1;32mIn [97]\u001b[0m, in \u001b[0;36m<cell line: 1>\u001b[1;34m()\u001b[0m\n\u001b[1;32m----> 1\u001b[0m \u001b[43mdata2\u001b[49m\n",
      "\u001b[1;31mNameError\u001b[0m: name 'data2' is not defined"
     ]
    }
   ],
   "source": [
    "data2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4394216e",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "id": "f05ca981",
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'X' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Input \u001b[1;32mIn [101]\u001b[0m, in \u001b[0;36m<cell line: 1>\u001b[1;34m()\u001b[0m\n\u001b[1;32m----> 1\u001b[0m Z \u001b[38;5;241m=\u001b[39m linkage(\u001b[43mX\u001b[49m, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mward\u001b[39m\u001b[38;5;124m'\u001b[39m)\n\u001b[0;32m      2\u001b[0m fig \u001b[38;5;241m=\u001b[39m plt\u001b[38;5;241m.\u001b[39mfigure(figsize\u001b[38;5;241m=\u001b[39m(\u001b[38;5;241m25\u001b[39m, \u001b[38;5;241m10\u001b[39m))\n\u001b[0;32m      3\u001b[0m dn \u001b[38;5;241m=\u001b[39m dendrogram(Z)\n",
      "\u001b[1;31mNameError\u001b[0m: name 'X' is not defined"
     ]
    }
   ],
   "source": [
    "Z = linkage(X, 'ward')\n",
    "fig = plt.figure(figsize=(25, 10))\n",
    "dn = dendrogram(Z)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2033ab95",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "id": "a3e2483d",
   "metadata": {},
   "outputs": [],
   "source": [
    "data5=pd.read_csv(\"../Dataset/Fichero_Maestro_modificado.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "id": "ceba74aa",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CodigoAEMET</th>\n",
       "      <th>Localidad</th>\n",
       "      <th>Longitud</th>\n",
       "      <th>Latitud</th>\n",
       "      <th>Altura</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>EL PERELLO</td>\n",
       "      <td>71.667</td>\n",
       "      <td>408.667</td>\n",
       "      <td>142.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0016B</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>17</td>\n",
       "      <td>VILASECA DE SOLCINA</td>\n",
       "      <td>1.145</td>\n",
       "      <td>411.117</td>\n",
       "      <td>53.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>19</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0020O</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>369</th>\n",
       "      <td>C449G</td>\n",
       "      <td>ANAGA-SAN ANDRES</td>\n",
       "      <td>-161.839</td>\n",
       "      <td>284.967</td>\n",
       "      <td>20.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>370</th>\n",
       "      <td>C458A</td>\n",
       "      <td>TACORONTE-A . S.E.A.</td>\n",
       "      <td>-164.092</td>\n",
       "      <td>284.864</td>\n",
       "      <td>327.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>371</th>\n",
       "      <td>C649I</td>\n",
       "      <td>TELDE/AEROPUERTO DE G.CANARIA (GANDO)</td>\n",
       "      <td>-153.889</td>\n",
       "      <td>279.292</td>\n",
       "      <td>24.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>372</th>\n",
       "      <td>C659P</td>\n",
       "      <td>LAS PALMAS DE GRAN CANARIA-JUNTA DE OBRAS DEL ...</td>\n",
       "      <td>-154.167</td>\n",
       "      <td>28.150</td>\n",
       "      <td>15.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>373</th>\n",
       "      <td>C665I</td>\n",
       "      <td>VALLESECO-CASCO</td>\n",
       "      <td>-155.736</td>\n",
       "      <td>280.472</td>\n",
       "      <td>980.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>374 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    CodigoAEMET                                          Localidad  Longitud  \\\n",
       "0             1                                         EL PERELLO    71.667   \n",
       "1         0016B                                                NaN       NaN   \n",
       "2            17                                VILASECA DE SOLCINA     1.145   \n",
       "3            19                                                NaN       NaN   \n",
       "4         0020O                                                NaN       NaN   \n",
       "..          ...                                                ...       ...   \n",
       "369       C449G                                   ANAGA-SAN ANDRES  -161.839   \n",
       "370       C458A                               TACORONTE-A . S.E.A.  -164.092   \n",
       "371       C649I              TELDE/AEROPUERTO DE G.CANARIA (GANDO)  -153.889   \n",
       "372       C659P  LAS PALMAS DE GRAN CANARIA-JUNTA DE OBRAS DEL ...  -154.167   \n",
       "373       C665I                                    VALLESECO-CASCO  -155.736   \n",
       "\n",
       "     Latitud  Altura  \n",
       "0    408.667   142.0  \n",
       "1        NaN     NaN  \n",
       "2    411.117    53.0  \n",
       "3        NaN     NaN  \n",
       "4        NaN     NaN  \n",
       "..       ...     ...  \n",
       "369  284.967    20.0  \n",
       "370  284.864   327.0  \n",
       "371  279.292    24.0  \n",
       "372   28.150    15.0  \n",
       "373  280.472   980.0  \n",
       "\n",
       "[374 rows x 5 columns]"
      ]
     },
     "execution_count": 122,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data5"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6c0ac2a3",
   "metadata": {},
   "source": [
    "#### Borrado de filas NaN"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 131,
   "id": "bbb21104",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CodigoAEMET</th>\n",
       "      <th>Localidad</th>\n",
       "      <th>Longitud</th>\n",
       "      <th>Latitud</th>\n",
       "      <th>Altura</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>EL PERELLO</td>\n",
       "      <td>71.667</td>\n",
       "      <td>408.667</td>\n",
       "      <td>142.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0016B</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>17</td>\n",
       "      <td>VILASECA DE SOLCINA</td>\n",
       "      <td>1.145</td>\n",
       "      <td>411.117</td>\n",
       "      <td>53.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>19</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0020O</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>369</th>\n",
       "      <td>C449G</td>\n",
       "      <td>ANAGA-SAN ANDRES</td>\n",
       "      <td>-161.839</td>\n",
       "      <td>284.967</td>\n",
       "      <td>20.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>370</th>\n",
       "      <td>C458A</td>\n",
       "      <td>TACORONTE-A . S.E.A.</td>\n",
       "      <td>-164.092</td>\n",
       "      <td>284.864</td>\n",
       "      <td>327.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>371</th>\n",
       "      <td>C649I</td>\n",
       "      <td>TELDE/AEROPUERTO DE G.CANARIA (GANDO)</td>\n",
       "      <td>-153.889</td>\n",
       "      <td>279.292</td>\n",
       "      <td>24.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>372</th>\n",
       "      <td>C659P</td>\n",
       "      <td>LAS PALMAS DE GRAN CANARIA-JUNTA DE OBRAS DEL ...</td>\n",
       "      <td>-154.167</td>\n",
       "      <td>28.150</td>\n",
       "      <td>15.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>373</th>\n",
       "      <td>C665I</td>\n",
       "      <td>VALLESECO-CASCO</td>\n",
       "      <td>-155.736</td>\n",
       "      <td>280.472</td>\n",
       "      <td>980.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>374 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    CodigoAEMET                                          Localidad  Longitud  \\\n",
       "0             1                                         EL PERELLO    71.667   \n",
       "1         0016B                                                NaN       NaN   \n",
       "2            17                                VILASECA DE SOLCINA     1.145   \n",
       "3            19                                                NaN       NaN   \n",
       "4         0020O                                                NaN       NaN   \n",
       "..          ...                                                ...       ...   \n",
       "369       C449G                                   ANAGA-SAN ANDRES  -161.839   \n",
       "370       C458A                               TACORONTE-A . S.E.A.  -164.092   \n",
       "371       C649I              TELDE/AEROPUERTO DE G.CANARIA (GANDO)  -153.889   \n",
       "372       C659P  LAS PALMAS DE GRAN CANARIA-JUNTA DE OBRAS DEL ...  -154.167   \n",
       "373       C665I                                    VALLESECO-CASCO  -155.736   \n",
       "\n",
       "     Latitud  Altura  \n",
       "0    408.667   142.0  \n",
       "1        NaN     NaN  \n",
       "2    411.117    53.0  \n",
       "3        NaN     NaN  \n",
       "4        NaN     NaN  \n",
       "..       ...     ...  \n",
       "369  284.967    20.0  \n",
       "370  284.864   327.0  \n",
       "371  279.292    24.0  \n",
       "372   28.150    15.0  \n",
       "373  280.472   980.0  \n",
       "\n",
       "[374 rows x 5 columns]"
      ]
     },
     "execution_count": 131,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data5.dropna(axis=0, how=\"all\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "cc4d4682",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 133,
   "id": "2db5ce66",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CodigoAEMET</th>\n",
       "      <th>Localidad</th>\n",
       "      <th>Longitud</th>\n",
       "      <th>Latitud</th>\n",
       "      <th>Altura</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>EL PERELLO</td>\n",
       "      <td>71.6670</td>\n",
       "      <td>408.667</td>\n",
       "      <td>142.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>17</td>\n",
       "      <td>VILASECA DE SOLCINA</td>\n",
       "      <td>1.1450</td>\n",
       "      <td>411.117</td>\n",
       "      <td>53.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>25</td>\n",
       "      <td>SARRAL</td>\n",
       "      <td>1.2500</td>\n",
       "      <td>41.450</td>\n",
       "      <td>400.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>111</td>\n",
       "      <td>CABRIANES</td>\n",
       "      <td>1.8953</td>\n",
       "      <td>417.986</td>\n",
       "      <td>246.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>158000</td>\n",
       "      <td>MONTSERRAT</td>\n",
       "      <td>1.8403</td>\n",
       "      <td>415.956</td>\n",
       "      <td>735.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>369</th>\n",
       "      <td>449000</td>\n",
       "      <td>ANAGA-SAN ANDRES</td>\n",
       "      <td>-161.8390</td>\n",
       "      <td>284.967</td>\n",
       "      <td>20.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>370</th>\n",
       "      <td>458000</td>\n",
       "      <td>TACORONTE-A . S.E.A.</td>\n",
       "      <td>-164.0920</td>\n",
       "      <td>284.864</td>\n",
       "      <td>327.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>371</th>\n",
       "      <td>649000</td>\n",
       "      <td>TELDE/AEROPUERTO DE G.CANARIA (GANDO)</td>\n",
       "      <td>-153.8890</td>\n",
       "      <td>279.292</td>\n",
       "      <td>24.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>372</th>\n",
       "      <td>659000</td>\n",
       "      <td>LAS PALMAS DE GRAN CANARIA-JUNTA DE OBRAS DEL ...</td>\n",
       "      <td>-154.1670</td>\n",
       "      <td>28.150</td>\n",
       "      <td>15.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>373</th>\n",
       "      <td>665000</td>\n",
       "      <td>VALLESECO-CASCO</td>\n",
       "      <td>-155.7360</td>\n",
       "      <td>280.472</td>\n",
       "      <td>980.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>350 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     CodigoAEMET                                          Localidad  Longitud  \\\n",
       "0              1                                         EL PERELLO   71.6670   \n",
       "2             17                                VILASECA DE SOLCINA    1.1450   \n",
       "5             25                                             SARRAL    1.2500   \n",
       "8            111                                          CABRIANES    1.8953   \n",
       "9         158000                                         MONTSERRAT    1.8403   \n",
       "..           ...                                                ...       ...   \n",
       "369       449000                                   ANAGA-SAN ANDRES -161.8390   \n",
       "370       458000                               TACORONTE-A . S.E.A. -164.0920   \n",
       "371       649000              TELDE/AEROPUERTO DE G.CANARIA (GANDO) -153.8890   \n",
       "372       659000  LAS PALMAS DE GRAN CANARIA-JUNTA DE OBRAS DEL ... -154.1670   \n",
       "373       665000                                    VALLESECO-CASCO -155.7360   \n",
       "\n",
       "     Latitud  Altura  \n",
       "0    408.667   142.0  \n",
       "2    411.117    53.0  \n",
       "5     41.450   400.0  \n",
       "8    417.986   246.0  \n",
       "9    415.956   735.0  \n",
       "..       ...     ...  \n",
       "369  284.967    20.0  \n",
       "370  284.864   327.0  \n",
       "371  279.292    24.0  \n",
       "372   28.150    15.0  \n",
       "373  280.472   980.0  \n",
       "\n",
       "[350 rows x 5 columns]"
      ]
     },
     "execution_count": 133,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data2.dropna(axis=0, how=\"any\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 148,
   "id": "087dbdbd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 2500x1000 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "Z = linkage(X, 'ward')\n",
    "fig = plt.figure(figsize=(25, 10))\n",
    "dn = dendrogram(Z)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1731d803",
   "metadata": {},
   "source": [
    "## Visualización clustering mediante ...\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 194,
   "id": "8b574c22",
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "from scipy.cluster.hierarchy import dendrogram, linkage\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 195,
   "id": "3b6c714c",
   "metadata": {},
   "outputs": [],
   "source": [
    "data20=pd.read_csv(\"../Dataset/TXMM_RCA_ECHAM5_20C3M_196101_200012 original.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 201,
   "id": "59a93c81",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>FECHA</th>\n",
       "      <th>500</th>\n",
       "      <th>501</th>\n",
       "      <th>502</th>\n",
       "      <th>503</th>\n",
       "      <th>504</th>\n",
       "      <th>505</th>\n",
       "      <th>506</th>\n",
       "      <th>507</th>\n",
       "      <th>508</th>\n",
       "      <th>...</th>\n",
       "      <th>1935</th>\n",
       "      <th>1936</th>\n",
       "      <th>1937</th>\n",
       "      <th>1938</th>\n",
       "      <th>1939</th>\n",
       "      <th>1940</th>\n",
       "      <th>1941</th>\n",
       "      <th>1942</th>\n",
       "      <th>1943</th>\n",
       "      <th>1944</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>196101</td>\n",
       "      <td>16.08</td>\n",
       "      <td>16.33</td>\n",
       "      <td>16.08</td>\n",
       "      <td>16.08</td>\n",
       "      <td>16.22</td>\n",
       "      <td>16.12</td>\n",
       "      <td>16.01</td>\n",
       "      <td>16.36</td>\n",
       "      <td>16.50</td>\n",
       "      <td>...</td>\n",
       "      <td>11.79</td>\n",
       "      <td>11.79</td>\n",
       "      <td>12.54</td>\n",
       "      <td>12.54</td>\n",
       "      <td>11.36</td>\n",
       "      <td>10.84</td>\n",
       "      <td>10.26</td>\n",
       "      <td>13.19</td>\n",
       "      <td>13.00</td>\n",
       "      <td>12.98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>196102</td>\n",
       "      <td>15.29</td>\n",
       "      <td>15.45</td>\n",
       "      <td>15.56</td>\n",
       "      <td>15.56</td>\n",
       "      <td>15.56</td>\n",
       "      <td>15.31</td>\n",
       "      <td>14.84</td>\n",
       "      <td>16.13</td>\n",
       "      <td>16.09</td>\n",
       "      <td>...</td>\n",
       "      <td>10.76</td>\n",
       "      <td>10.70</td>\n",
       "      <td>11.37</td>\n",
       "      <td>11.37</td>\n",
       "      <td>10.34</td>\n",
       "      <td>9.81</td>\n",
       "      <td>9.34</td>\n",
       "      <td>12.40</td>\n",
       "      <td>12.23</td>\n",
       "      <td>12.13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>196103</td>\n",
       "      <td>15.88</td>\n",
       "      <td>16.35</td>\n",
       "      <td>16.64</td>\n",
       "      <td>16.64</td>\n",
       "      <td>17.47</td>\n",
       "      <td>17.03</td>\n",
       "      <td>15.89</td>\n",
       "      <td>17.33</td>\n",
       "      <td>18.14</td>\n",
       "      <td>...</td>\n",
       "      <td>11.03</td>\n",
       "      <td>11.03</td>\n",
       "      <td>11.69</td>\n",
       "      <td>11.69</td>\n",
       "      <td>10.63</td>\n",
       "      <td>9.96</td>\n",
       "      <td>9.35</td>\n",
       "      <td>12.55</td>\n",
       "      <td>12.35</td>\n",
       "      <td>12.18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>196104</td>\n",
       "      <td>16.13</td>\n",
       "      <td>17.15</td>\n",
       "      <td>16.57</td>\n",
       "      <td>16.57</td>\n",
       "      <td>17.96</td>\n",
       "      <td>17.82</td>\n",
       "      <td>16.24</td>\n",
       "      <td>17.27</td>\n",
       "      <td>17.71</td>\n",
       "      <td>...</td>\n",
       "      <td>11.55</td>\n",
       "      <td>11.71</td>\n",
       "      <td>12.47</td>\n",
       "      <td>12.47</td>\n",
       "      <td>11.16</td>\n",
       "      <td>10.46</td>\n",
       "      <td>9.68</td>\n",
       "      <td>12.65</td>\n",
       "      <td>12.36</td>\n",
       "      <td>12.30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>196105</td>\n",
       "      <td>18.68</td>\n",
       "      <td>20.01</td>\n",
       "      <td>20.31</td>\n",
       "      <td>20.31</td>\n",
       "      <td>23.24</td>\n",
       "      <td>22.28</td>\n",
       "      <td>18.15</td>\n",
       "      <td>22.17</td>\n",
       "      <td>23.90</td>\n",
       "      <td>...</td>\n",
       "      <td>13.10</td>\n",
       "      <td>13.18</td>\n",
       "      <td>14.29</td>\n",
       "      <td>14.29</td>\n",
       "      <td>12.56</td>\n",
       "      <td>11.63</td>\n",
       "      <td>10.63</td>\n",
       "      <td>14.28</td>\n",
       "      <td>14.13</td>\n",
       "      <td>14.06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>475</th>\n",
       "      <td>200008</td>\n",
       "      <td>25.85</td>\n",
       "      <td>26.10</td>\n",
       "      <td>27.93</td>\n",
       "      <td>27.93</td>\n",
       "      <td>30.26</td>\n",
       "      <td>28.23</td>\n",
       "      <td>24.23</td>\n",
       "      <td>30.41</td>\n",
       "      <td>32.54</td>\n",
       "      <td>...</td>\n",
       "      <td>17.02</td>\n",
       "      <td>17.13</td>\n",
       "      <td>17.76</td>\n",
       "      <td>17.76</td>\n",
       "      <td>16.27</td>\n",
       "      <td>15.51</td>\n",
       "      <td>14.73</td>\n",
       "      <td>18.02</td>\n",
       "      <td>17.83</td>\n",
       "      <td>17.74</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>476</th>\n",
       "      <td>200009</td>\n",
       "      <td>23.85</td>\n",
       "      <td>23.96</td>\n",
       "      <td>24.68</td>\n",
       "      <td>24.68</td>\n",
       "      <td>25.41</td>\n",
       "      <td>24.74</td>\n",
       "      <td>23.13</td>\n",
       "      <td>26.15</td>\n",
       "      <td>26.24</td>\n",
       "      <td>...</td>\n",
       "      <td>16.65</td>\n",
       "      <td>16.65</td>\n",
       "      <td>17.66</td>\n",
       "      <td>17.66</td>\n",
       "      <td>16.10</td>\n",
       "      <td>15.27</td>\n",
       "      <td>14.49</td>\n",
       "      <td>18.02</td>\n",
       "      <td>17.90</td>\n",
       "      <td>17.76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>477</th>\n",
       "      <td>200010</td>\n",
       "      <td>22.34</td>\n",
       "      <td>22.46</td>\n",
       "      <td>22.61</td>\n",
       "      <td>22.61</td>\n",
       "      <td>23.28</td>\n",
       "      <td>22.86</td>\n",
       "      <td>21.68</td>\n",
       "      <td>23.28</td>\n",
       "      <td>23.46</td>\n",
       "      <td>...</td>\n",
       "      <td>15.29</td>\n",
       "      <td>15.25</td>\n",
       "      <td>15.90</td>\n",
       "      <td>15.90</td>\n",
       "      <td>14.76</td>\n",
       "      <td>14.14</td>\n",
       "      <td>13.57</td>\n",
       "      <td>16.62</td>\n",
       "      <td>16.43</td>\n",
       "      <td>16.40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>478</th>\n",
       "      <td>200011</td>\n",
       "      <td>18.06</td>\n",
       "      <td>18.09</td>\n",
       "      <td>17.82</td>\n",
       "      <td>17.82</td>\n",
       "      <td>17.67</td>\n",
       "      <td>17.76</td>\n",
       "      <td>17.96</td>\n",
       "      <td>17.95</td>\n",
       "      <td>17.76</td>\n",
       "      <td>...</td>\n",
       "      <td>13.46</td>\n",
       "      <td>13.45</td>\n",
       "      <td>13.95</td>\n",
       "      <td>13.95</td>\n",
       "      <td>13.12</td>\n",
       "      <td>12.67</td>\n",
       "      <td>12.25</td>\n",
       "      <td>14.85</td>\n",
       "      <td>14.65</td>\n",
       "      <td>14.59</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>479</th>\n",
       "      <td>200012</td>\n",
       "      <td>16.23</td>\n",
       "      <td>16.12</td>\n",
       "      <td>16.05</td>\n",
       "      <td>16.05</td>\n",
       "      <td>15.72</td>\n",
       "      <td>15.80</td>\n",
       "      <td>16.09</td>\n",
       "      <td>16.11</td>\n",
       "      <td>15.78</td>\n",
       "      <td>...</td>\n",
       "      <td>11.94</td>\n",
       "      <td>11.84</td>\n",
       "      <td>12.25</td>\n",
       "      <td>12.25</td>\n",
       "      <td>11.48</td>\n",
       "      <td>11.06</td>\n",
       "      <td>10.76</td>\n",
       "      <td>13.61</td>\n",
       "      <td>13.36</td>\n",
       "      <td>13.26</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>480 rows × 1446 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      FECHA    500    501    502    503    504    505    506    507    508  \\\n",
       "0    196101  16.08  16.33  16.08  16.08  16.22  16.12  16.01  16.36  16.50   \n",
       "1    196102  15.29  15.45  15.56  15.56  15.56  15.31  14.84  16.13  16.09   \n",
       "2    196103  15.88  16.35  16.64  16.64  17.47  17.03  15.89  17.33  18.14   \n",
       "3    196104  16.13  17.15  16.57  16.57  17.96  17.82  16.24  17.27  17.71   \n",
       "4    196105  18.68  20.01  20.31  20.31  23.24  22.28  18.15  22.17  23.90   \n",
       "..      ...    ...    ...    ...    ...    ...    ...    ...    ...    ...   \n",
       "475  200008  25.85  26.10  27.93  27.93  30.26  28.23  24.23  30.41  32.54   \n",
       "476  200009  23.85  23.96  24.68  24.68  25.41  24.74  23.13  26.15  26.24   \n",
       "477  200010  22.34  22.46  22.61  22.61  23.28  22.86  21.68  23.28  23.46   \n",
       "478  200011  18.06  18.09  17.82  17.82  17.67  17.76  17.96  17.95  17.76   \n",
       "479  200012  16.23  16.12  16.05  16.05  15.72  15.80  16.09  16.11  15.78   \n",
       "\n",
       "     ...   1935   1936   1937   1938   1939   1940   1941   1942   1943   1944  \n",
       "0    ...  11.79  11.79  12.54  12.54  11.36  10.84  10.26  13.19  13.00  12.98  \n",
       "1    ...  10.76  10.70  11.37  11.37  10.34   9.81   9.34  12.40  12.23  12.13  \n",
       "2    ...  11.03  11.03  11.69  11.69  10.63   9.96   9.35  12.55  12.35  12.18  \n",
       "3    ...  11.55  11.71  12.47  12.47  11.16  10.46   9.68  12.65  12.36  12.30  \n",
       "4    ...  13.10  13.18  14.29  14.29  12.56  11.63  10.63  14.28  14.13  14.06  \n",
       "..   ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...  \n",
       "475  ...  17.02  17.13  17.76  17.76  16.27  15.51  14.73  18.02  17.83  17.74  \n",
       "476  ...  16.65  16.65  17.66  17.66  16.10  15.27  14.49  18.02  17.90  17.76  \n",
       "477  ...  15.29  15.25  15.90  15.90  14.76  14.14  13.57  16.62  16.43  16.40  \n",
       "478  ...  13.46  13.45  13.95  13.95  13.12  12.67  12.25  14.85  14.65  14.59  \n",
       "479  ...  11.94  11.84  12.25  12.25  11.48  11.06  10.76  13.61  13.36  13.26  \n",
       "\n",
       "[480 rows x 1446 columns]"
      ]
     },
     "execution_count": 201,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data20"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 228,
   "id": "204a8181",
   "metadata": {},
   "outputs": [],
   "source": [
    "x = [500,600,700,800,900,1000,1100,1200,1300,1400,1500,1600,1700,1800,1900]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 324,
   "id": "22965241",
   "metadata": {},
   "outputs": [],
   "source": [
    "y = [19.54,21.03,18.74,24.24,16.16,14.71,13.53,6.59,15.52,14.71,9.33,11.71,11.03,12.59,11.58]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 367,
   "id": "37492c89",
   "metadata": {},
   "outputs": [],
   "source": [
    "yentero=[19,21,19,24,16,15,13,7,15,15,9,12,11,13,12]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 368,
   "id": "23ef1250",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PathCollection at 0x2df88b055e0>"
      ]
     },
     "execution_count": 368,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(x,yentero)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5be60b4a",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a6ae76d8",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
